Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/275bdd256a06473b9f905e787f7b9bac-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/275bdd256a06473b9f905e787f7b9bac-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 34 COLUMNS
At line 173 RHS
At line 203 BOUNDS
At line 231 ENDATA
Problem MODEL has 29 rows, 27 columns and 65 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -160 - 0.00 seconds
Cgl0003I 0 fixed, 9 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 22 rows, 27 columns (27 integer (13 of which binary)) and 60 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -160 iterations 0
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -160 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -160 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -159 iterations 1
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -159 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -159 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -159 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -99 iterations 1
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -99 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -99 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -99 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -156 iterations 4
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. -156 iterations 0
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -156 iterations 0
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 884 iterations 2
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 884 iterations 0
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 884 iterations 0
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 944 iterations 3
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 944 iterations 0
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 944 iterations 0
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. -96 iterations 3
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. -96 iterations 0
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -96 iterations 0
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. -96 iterations 1
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -96 iterations 1
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 805 iterations 3
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. 805 iterations 0
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 805 iterations 0
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. -156 iterations 5
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. -156 iterations 0
Cbc0038I Rounding solution of -160 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -160 - took 0.00 seconds
Cbc0012I Integer solution of -158 found by DiveCoefficient after 2 iterations and 0 nodes (0.00 seconds)
Cbc0031I 2 added rows had average density of 4.5
Cbc0013I At root node, 2 cuts changed objective from -160 to -158 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -158, took 2 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -160 to -158
Probing was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -158.00000000
Enumerated nodes:               0
Total iterations:               2
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/c994c3650a6243a9addc30d2bca118b6-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/c994c3650a6243a9addc30d2bca118b6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -110 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 1.11022e-15
Cbc0038I Solution found of -110
Cbc0038I Cleaned solution of -110
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -110 - took 0.00 seconds
Cbc0012I Integer solution of -110 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -110, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -110 to -110
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -110.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/769868c4ee694e8596414828e5888abe-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/769868c4ee694e8596414828e5888abe-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 175 COLUMNS
At line 975 RHS
At line 1146 BOUNDS
At line 1294 ENDATA
Problem MODEL has 170 rows, 147 columns and 396 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -1185 - 0.00 seconds
Cgl0003I 0 fixed, 46 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 124 rows, 146 columns (146 integer (66 of which binary)) and 353 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 6 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1170 iterations 5
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -1170 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -1170 iterations 0
Cbc0038I Pass   4: suminf.    1.33333 (4) obj. -128.333 iterations 15
Cbc0038I Pass   5: suminf.    1.33333 (4) obj. -128.333 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 105 iterations 3
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 105 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 105 iterations 0
Cbc0038I Pass   9: suminf.    1.33333 (4) obj. 94.6667 iterations 26
Cbc0038I Pass  10: suminf.    1.33333 (4) obj. 94.6667 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 308 iterations 2
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 308 iterations 0
Cbc0038I Pass  13: suminf.    1.00000 (3) obj. -84 iterations 21
Cbc0038I Pass  14: suminf.    1.00000 (3) obj. -84 iterations 0
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 156 iterations 2
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 156 iterations 0
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 409 iterations 14
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 409 iterations 0
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 409 iterations 0
Cbc0038I Pass  20: suminf.    1.33333 (4) obj. 625.667 iterations 12
Cbc0038I Pass  21: suminf.    1.33333 (4) obj. 625.667 iterations 0
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. 839 iterations 2
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. 839 iterations 0
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. 1021 iterations 17
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. 1021 iterations 0
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 1021 iterations 0
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. 1021 iterations 0
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 699 iterations 9
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. 699 iterations 0
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 699 iterations 0
Cbc0038I Rounding solution of -1170 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 3 continuous of which 19 were internal integer and 0 internal continuous
Cbc0038I Full problem 124 rows 146 columns, reduced to 40 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -1170 to -1180 (0.01 seconds)
Cbc0038I Round again with cutoff of -1181.4
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass  30: suminf.    0.38000 (1) obj. -1181.4 iterations 4
Cbc0038I Pass  31: suminf.    0.41997 (2) obj. -1181.4 iterations 4
Cbc0038I Pass  32: suminf.    0.38000 (1) obj. -1181.4 iterations 1
Cbc0038I Pass  33: suminf.    0.89991 (2) obj. -1181.4 iterations 5
Cbc0038I Pass  34: suminf.    0.89991 (2) obj. -1181.4 iterations 0
Cbc0038I Pass  35: suminf.    0.48000 (1) obj. -1181.4 iterations 2
Cbc0038I Pass  36: suminf.    0.56001 (2) obj. -1181.4 iterations 4
Cbc0038I Pass  37: suminf.    0.48000 (1) obj. -1181.4 iterations 1
Cbc0038I Pass  38: suminf.    0.89991 (2) obj. -1181.4 iterations 3
Cbc0038I Pass  39: suminf.    0.89991 (2) obj. -1181.4 iterations 1
Cbc0038I Pass  40: suminf.    0.89991 (2) obj. -1181.4 iterations 4
Cbc0038I Pass  41: suminf.    0.89991 (2) obj. -1181.4 iterations 0
Cbc0038I Pass  42: suminf.    0.48000 (1) obj. -1181.4 iterations 2
Cbc0038I Pass  43: suminf.    0.56001 (2) obj. -1181.4 iterations 5
Cbc0038I Pass  44: suminf.    0.48000 (1) obj. -1181.4 iterations 1
Cbc0038I Pass  45: suminf.    0.89991 (2) obj. -1181.4 iterations 4
Cbc0038I Pass  46: suminf.    0.89991 (2) obj. -1181.4 iterations 0
Cbc0038I Pass  47: suminf.    0.48000 (1) obj. -1181.4 iterations 2
Cbc0038I Pass  48: suminf.    0.56001 (2) obj. -1181.4 iterations 4
Cbc0038I Pass  49: suminf.    0.48000 (1) obj. -1181.4 iterations 1
Cbc0038I Pass  50: suminf.    0.44666 (1) obj. -1181.4 iterations 3
Cbc0038I Pass  51: suminf.    0.44666 (1) obj. -1181.4 iterations 0
Cbc0038I Pass  52: suminf.    0.66001 (2) obj. -1181.4 iterations 5
Cbc0038I Pass  53: suminf.    0.44666 (1) obj. -1181.4 iterations 1
Cbc0038I Pass  54: suminf.    0.89991 (2) obj. -1181.4 iterations 4
Cbc0038I Pass  55: suminf.    0.89991 (2) obj. -1181.4 iterations 1
Cbc0038I Pass  56: suminf.    0.48000 (1) obj. -1181.4 iterations 2
Cbc0038I Pass  57: suminf.    0.56001 (2) obj. -1181.4 iterations 4
Cbc0038I Pass  58: suminf.    0.48000 (1) obj. -1181.4 iterations 1
Cbc0038I Pass  59: suminf.    0.89991 (2) obj. -1181.4 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 7 continuous of which 40 were internal integer and 0 internal continuous
Cbc0038I Full problem 124 rows 146 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -1180 - took 0.02 seconds
Cbc0012I Integer solution of -1176 found by DiveCoefficient after 6 iterations and 0 nodes (0.03 seconds)
Cbc0031I 6 added rows had average density of 6.5
Cbc0013I At root node, 6 cuts changed objective from -1185 to -1176 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 7 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1176, took 6 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -1185 to -1176
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -1176.00000000
Enumerated nodes:               0
Total iterations:               6
Time (CPU seconds):             0.03
Time (Wallclock seconds):       0.03

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/5e420baa7be345a09dea967e83f6a64a-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/5e420baa7be345a09dea967e83f6a64a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/7b9ca24618044cfa9429db4d27f61944-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/7b9ca24618044cfa9429db4d27f61944-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 48 COLUMNS
At line 259 RHS
At line 303 BOUNDS
At line 345 ENDATA
Problem MODEL has 43 rows, 41 columns and 99 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -100 - 0.00 seconds
Cgl0003I 0 fixed, 3 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 41 columns (41 integer (26 of which binary)) and 90 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 4 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -100 iterations 0
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -100 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -100 iterations 0
Cbc0038I Pass   4: suminf.    0.50000 (1) obj. 1402 iterations 9
Cbc0038I Pass   5: suminf.    0.50000 (1) obj. 1402 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 1382 iterations 2
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 1382 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 1382 iterations 0
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 1342 iterations 2
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 1342 iterations 2
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 1342 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 1342 iterations 0
Cbc0038I Pass  13: suminf.    0.50000 (1) obj. 1343 iterations 8
Cbc0038I Pass  14: suminf.    0.50000 (1) obj. 1343 iterations 0
Cbc0038I Pass  15: suminf.    0.50000 (1) obj. 1343 iterations 2
Cbc0038I Pass  16: suminf.    1.00000 (2) obj. 1904 iterations 4
Cbc0038I Pass  17: suminf.    1.00000 (2) obj. 1904 iterations 2
Cbc0038I Pass  18: suminf.    0.50000 (1) obj. 1904 iterations 4
Cbc0038I Pass  19: suminf.    0.50000 (1) obj. 1904 iterations 2
Cbc0038I Pass  20: suminf.    0.50000 (1) obj. 1904 iterations 2
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. 1922 iterations 9
Cbc0038I Solution found of 1922
Cbc0038I Cleaned solution of 1922
Cbc0038I Rounding solution of -100 is better than previous of 1922

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 1 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -100 - took 0.00 seconds
Cbc0012I Integer solution of -98 found by DiveCoefficient after 4 iterations and 0 nodes (0.01 seconds)
Cbc0031I 3 added rows had average density of 5.3333333
Cbc0013I At root node, 3 cuts changed objective from -100 to -98 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 4 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -98, took 4 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -100 to -98
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -98.00000000
Enumerated nodes:               0
Total iterations:               4
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/07c0710f5ac34960ad0d0a51fbfcc997-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/07c0710f5ac34960ad0d0a51fbfcc997-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 25 COLUMNS
At line 119 RHS
At line 140 BOUNDS
At line 158 ENDATA
Problem MODEL has 20 rows, 17 columns and 46 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -80 - 0.00 seconds
Cgl0003I 0 fixed, 5 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 12 rows, 16 columns (16 integer (9 of which binary)) and 36 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 1 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -80 - took 0.00 seconds
Cbc0012I Integer solution of -80 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -80, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -80 to -80
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -80.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/2731e4b687074c73bd840812eec26cf2-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/2731e4b687074c73bd840812eec26cf2-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/58b4d3ac92c84bafbbe89c4d378dfb3b-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/58b4d3ac92c84bafbbe89c4d378dfb3b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/5357b6f35deb4170b6b404da6c2f747d-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/5357b6f35deb4170b6b404da6c2f747d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 164 RHS
At line 192 BOUNDS
At line 217 ENDATA
Problem MODEL has 27 rows, 24 columns and 65 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -100 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 24 columns (24 integer (13 of which binary)) and 60 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -100
Cbc0038I Cleaned solution of -100
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -100 - took 0.00 seconds
Cbc0012I Integer solution of -100 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -100, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -100 to -100
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -100.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/8c155ea94676473fa9a5c48676762d9c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/8c155ea94676473fa9a5c48676762d9c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/0fa996dd97404074adf622129ab9a9ff-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/0fa996dd97404074adf622129ab9a9ff-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/160e779f017a4f72adff45f3359e6191-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/160e779f017a4f72adff45f3359e6191-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 102 COLUMNS
At line 565 RHS
At line 663 BOUNDS
At line 749 ENDATA
Problem MODEL has 97 rows, 85 columns and 229 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -530 - 0.00 seconds
Cgl0003I 0 fixed, 27 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 72 rows, 85 columns (85 integer (42 of which binary)) and 208 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Solution found of -530
Cbc0038I Cleaned solution of -530
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 6 continuous of which 20 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -530 - took 0.00 seconds
Cbc0012I Integer solution of -528 found by DiveCoefficient after 4 iterations and 0 nodes (0.01 seconds)
Cbc0031I 2 added rows had average density of 5
Cbc0013I At root node, 2 cuts changed objective from -530 to -528 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -528, took 4 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -530 to -528
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -528.00000000
Enumerated nodes:               0
Total iterations:               4
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/3bb7239821714deaaaad2aad03e204fc-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/3bb7239821714deaaaad2aad03e204fc-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 144 RHS
At line 169 BOUNDS
At line 192 ENDATA
Problem MODEL has 24 rows, 22 columns and 54 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -95 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 21 columns (21 integer (12 of which binary)) and 47 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -80 iterations 1
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 21 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -82.3999
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.08000 (1) obj. -82.3999 iterations 1
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -90 iterations 4
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -90 iterations 0
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -90 iterations 0
Cbc0038I Pass   6: suminf.    0.16500 (1) obj. -82.3999 iterations 4
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -89 iterations 4
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -89 iterations 0
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -89 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -89 iterations 1
Cbc0038I Pass  11: suminf.    0.16500 (1) obj. -82.3999 iterations 2
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -89 iterations 4
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. -89 iterations 0
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -89 iterations 0
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. -88 iterations 1
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. -88 iterations 0
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. -88 iterations 0
Cbc0038I Pass  18: suminf.    0.02357 (3) obj. -82.3999 iterations 3
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. -89 iterations 2
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. -89 iterations 0
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. -89 iterations 0
Cbc0038I Pass  22: suminf.    1.60251 (5) obj. -82.3999 iterations 5
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -90 iterations 4
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. -90 iterations 0
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -90 iterations 0
Cbc0038I Pass  26: suminf.    0.01056 (1) obj. -82.3999 iterations 1
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -90 iterations 1
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. -89 iterations 1
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. -89 iterations 0
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. -89 iterations 0
Cbc0038I Pass  31: suminf.    0.14666 (1) obj. -82.3999 iterations 4
Cbc0038I Rounding solution of -90 is better than previous of -80

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 1 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 21 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -91.7999
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.39333 (1) obj. -91.7999 iterations 0
Cbc0038I Pass  32: suminf.    0.53998 (2) obj. -91.7999 iterations 2
Cbc0038I Pass  33: suminf.    0.39333 (1) obj. -91.7999 iterations 2
Cbc0038I Pass  34: suminf.    0.42666 (1) obj. -91.7999 iterations 1
Cbc0038I Pass  35: suminf.    0.72001 (2) obj. -91.7999 iterations 4
Cbc0038I Pass  36: suminf.    0.42666 (1) obj. -91.7999 iterations 2
Cbc0038I Pass  37: suminf.    0.39333 (1) obj. -91.7999 iterations 2
Cbc0038I Pass  38: suminf.    0.39333 (1) obj. -91.7999 iterations 1
Cbc0038I Pass  39: suminf.    0.53998 (2) obj. -91.7999 iterations 4
Cbc0038I Pass  40: suminf.    0.39333 (1) obj. -91.7999 iterations 2
Cbc0038I Pass  41: suminf.    0.39333 (1) obj. -91.7999 iterations 2
Cbc0038I Pass  42: suminf.    0.42666 (1) obj. -91.7999 iterations 2
Cbc0038I Pass  43: suminf.    0.42666 (1) obj. -91.7999 iterations 1
Cbc0038I Pass  44: suminf.    0.72001 (2) obj. -91.7999 iterations 4
Cbc0038I Pass  45: suminf.    0.42666 (1) obj. -91.7999 iterations 2
Cbc0038I Pass  46: suminf.    0.42666 (1) obj. -91.7999 iterations 2
Cbc0038I Pass  47: suminf.    0.72001 (2) obj. -91.7999 iterations 4
Cbc0038I Pass  48: suminf.    0.49333 (1) obj. -91.7999 iterations 5
Cbc0038I Pass  49: suminf.    0.49333 (1) obj. -91.7999 iterations 1
Cbc0038I Pass  50: suminf.    0.52001 (2) obj. -91.7999 iterations 4
Cbc0038I Pass  51: suminf.    0.49333 (1) obj. -91.7999 iterations 2
Cbc0038I Pass  52: suminf.    0.70008 (2) obj. -91.7999 iterations 2
Cbc0038I Pass  53: suminf.    0.52001 (2) obj. -91.7999 iterations 4
Cbc0038I Pass  54: suminf.    0.52001 (2) obj. -91.7999 iterations 0
Cbc0038I Pass  55: suminf.    0.52001 (2) obj. -91.7999 iterations 0
Cbc0038I Pass  56: suminf.    0.62001 (2) obj. -91.7999 iterations 1
Cbc0038I Pass  57: suminf.    0.62001 (2) obj. -91.7999 iterations 0
Cbc0038I Pass  58: suminf.    0.46000 (1) obj. -91.7999 iterations 3
Cbc0038I Pass  59: suminf.    0.62001 (2) obj. -91.7999 iterations 4
Cbc0038I Pass  60: suminf.    0.62001 (2) obj. -91.7999 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 16 rows 21 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -90 - took 0.00 seconds
Cbc0012I Integer solution of -88 found by DiveCoefficient after 3 iterations and 0 nodes (0.01 seconds)
Cbc0031I 3 added rows had average density of 7
Cbc0013I At root node, 3 cuts changed objective from -95 to -88 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -88, took 3 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -95 to -88
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -88.00000000
Enumerated nodes:               0
Total iterations:               3
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/54c590a89fc44445aff143ac871fc54f-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/54c590a89fc44445aff143ac871fc54f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -80 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -80 - took 0.00 seconds
Cbc0012I Integer solution of -80 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -80, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -80 to -80
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -80.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/9dcb16c5880b420081127e12f84279d5-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/9dcb16c5880b420081127e12f84279d5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -110 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 1.11022e-15
Cbc0038I Solution found of -110
Cbc0038I Cleaned solution of -110
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -110 - took 0.00 seconds
Cbc0012I Integer solution of -110 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -110, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -110 to -110
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -110.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/6b59a56c8d0847dcb3de7ffeff5179e3-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/6b59a56c8d0847dcb3de7ffeff5179e3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -110 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 1.11022e-15
Cbc0038I Solution found of -110
Cbc0038I Cleaned solution of -110
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -110 - took 0.00 seconds
Cbc0012I Integer solution of -110 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -110, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -110 to -110
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -110.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/f0d8fd8be12646d48e497ae19d77dc37-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/f0d8fd8be12646d48e497ae19d77dc37-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/09589c50bf024e80bfacd2988f888765-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/09589c50bf024e80bfacd2988f888765-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 40 COLUMNS
At line 207 RHS
At line 243 BOUNDS
At line 275 ENDATA
Problem MODEL has 35 rows, 31 columns and 81 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -145 - 0.00 seconds
Cgl0003I 0 fixed, 10 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 30 columns (30 integer (16 of which binary)) and 70 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -130 iterations 2
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 242 iterations 7
Cbc0038I Solution found of 242
Cbc0038I Cleaned solution of 242
Cbc0038I Rounding solution of -130 is better than previous of 242

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 2 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 24 rows 30 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -130 to -140 (0.00 seconds)
Cbc0038I Round again with cutoff of -141.4
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   5: suminf.    0.38000 (1) obj. -141.4 iterations 2
Cbc0038I Pass   6: suminf.    0.41997 (2) obj. -141.4 iterations 2
Cbc0038I Pass   7: suminf.    0.38000 (1) obj. -141.4 iterations 1
Cbc0038I Pass   8: suminf.    0.41333 (1) obj. -141.4 iterations 1
Cbc0038I Pass   9: suminf.    0.41333 (1) obj. -141.4 iterations 0
Cbc0038I Pass  10: suminf.    0.71997 (2) obj. -141.4 iterations 2
Cbc0038I Pass  11: suminf.    0.41333 (1) obj. -141.4 iterations 1
Cbc0038I Pass  12: suminf.    0.41333 (1) obj. -141.4 iterations 0
Cbc0038I Pass  13: suminf.    0.48000 (1) obj. -141.4 iterations 2
Cbc0038I Pass  14: suminf.    0.48000 (1) obj. -141.4 iterations 0
Cbc0038I Pass  15: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  16: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  17: suminf.    0.89991 (2) obj. -141.4 iterations 2
Cbc0038I Pass  18: suminf.    0.89991 (2) obj. -141.4 iterations 0
Cbc0038I Pass  19: suminf.    0.56001 (2) obj. -141.4 iterations 1
Cbc0038I Pass  20: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  21: suminf.    0.89991 (2) obj. -141.4 iterations 1
Cbc0038I Pass  22: suminf.    0.89991 (2) obj. -141.4 iterations 0
Cbc0038I Pass  23: suminf.    0.89991 (2) obj. -141.4 iterations 0
Cbc0038I Pass  24: suminf.    0.89991 (2) obj. -141.4 iterations 3
Cbc0038I Pass  25: suminf.    0.89991 (2) obj. -141.4 iterations 0
Cbc0038I Pass  26: suminf.    0.56001 (2) obj. -141.4 iterations 3
Cbc0038I Pass  27: suminf.    0.48000 (1) obj. -141.4 iterations 2
Cbc0038I Pass  28: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  29: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  30: suminf.    0.38000 (1) obj. -141.4 iterations 3
Cbc0038I Pass  31: suminf.    0.38000 (1) obj. -141.4 iterations 0
Cbc0038I Pass  32: suminf.    0.41997 (2) obj. -141.4 iterations 3
Cbc0038I Pass  33: suminf.    0.38000 (1) obj. -141.4 iterations 2
Cbc0038I Pass  34: suminf.    0.89991 (2) obj. -141.4 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Full problem 24 rows 30 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -140 - took 0.00 seconds
Cbc0012I Integer solution of -140 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 24 rows 30 columns, reduced to 2 rows 2 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -145 to -145 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -140, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Cuts at root node changed objective from -145 to -145
Probing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -140.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ad54cedab0ec45afb130cb5c2d80e72a-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/ad54cedab0ec45afb130cb5c2d80e72a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e1598db9ec144acf8e46d57eae1d7adb-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/e1598db9ec144acf8e46d57eae1d7adb-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1a75311b1cec4ac68cb0853587674d19-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/1a75311b1cec4ac68cb0853587674d19-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/126fb6f007be46febaa5232cd5765a95-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/126fb6f007be46febaa5232cd5765a95-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

dashag 1.0030798466629534
357	1370	2	2	-3790920.9	4407860.9	105398183.0	109487441.0	-1.0	duplication_split	56	57	-1	0	114	20352	21143	unknown	-1	-1	-1.0	66.48	69.74	-1.0	4089258.0	0.265	NA	0.34
652	1341	3	3	-2795610.6	3402291.4	38644256.0	41726169.0	-1.0	duplication_split	71	73	-1	0	112	8061	8660	unknown	-1	-1	-1.0	70.82	74.74	-1.0	3081913.0	0.096	NA	0.15
653	1342	3	3	-2795610.6	3402642.2	38644256.0	41726169.0	-1.0	duplication_split	72	74	-1	0	112	8061	8660	unknown	-1	-1	-1.0	70.82	74.71	-1.0	3081913.0	0.114	NA	0.15
655	1512	3	3	313462.3	303778.8	77970098.0	85452337.0	0.43	translocation_intrachr	75	80	-1	59	58	15903	17482	heterozygous	1	161	-1.0	76.51	76.88	-1.0	-1.0	0.175	+/-	0.38
656	1511	3	3	313457.9	303774.4	77970098.0	85452337.0	0.92	translocation_intrachr	76	79	-1	59	58	15903	17482	heterozygous	1	161	-1.0	59.74	76.29	-1.0	-1.0	0.158	+/-	0.38
657	1550	3	3	61386.7	598653.4	77987019.0	78244732.0	-1.0	duplication_inverted	77	78	-1	9	142	15904	15972	unknown	-1	-1	-1.0	82.18	97.62	-1.0	257713.0	0.261	NA	0.15
691	321	3	7	37028949.9	37038403.9	130683096.0	38387647.0	0.68	translocation_interchr	83	120	-1	7674	7675	26522	7708	heterozygous	1	175	-1.0	9560.95	73.59	-1.0	-1.0	0.166	+/+	0.44
725	322	3	7	37028552.3	37038342.7	130683096.0	38388156.0	0.95	translocation_interchr	84	121	-1	7677	7678	26522	7709	heterozygous	1	175	-1.0	9568.76	84.56	-1.0	-1.0	0.295	+/+	0.44
775	151	3	7	313579.3	311631.2	130685760.5	45896738.0	0.2	translocation_interchr	86	124	-1	54	52	26524	9149	heterozygous	2	175	-1.0	17632.77	72.52	-1.0	-1.0	0.278	+/+	0.69
818	152	3	7	295408.0	293459.9	130685760.5	45896738.0	0.11	translocation_interchr	87	126	-1	51	49	26524	9149	heterozygous	2	175	-1.0	17625.94	67.96	-1.0	-1.0	0.292	+/+	0.69
1183	11	5	5	110476256.9	111035803.6	69565660.0	71001016.0	0.01	deletion	98	100	-1	22809	22921	13752	14054	heterozygous	2	291	0.01	5382.51	28281.15	-1.0	875809.3	0.645	NA	0.61
1503	31	6	6	107641954.1	107654460.5	168399781.0	170614424.0	1.0	inversion	108	116	1504	22622	22623	34933	35312	heterozygous	1	-1	-1.0	28228.15	27.54	-1.0	125473.0	0.158	NA	0.18 168399781.0 170739897.0 right
1504	31	6	-1	107779739.8	-1.0	170739897.0	-1.0	1.0	inversion_partial	116	-1	1503	22644	-1	35333	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	125473.0	0.158	NA	0.18
1557	920	6	6	731459.7	1189045.7	168416903.0	168635014.0	-1.0	duplication_inverted	112	113	-1	132	199	34934	34967	unknown	-1	-1	-1.0	46.23	214.09	-1.0	218111.0	0.149	NA	0.2
1630	1380	7	7	330010.6	339666.6	38372545.0	45899944.0	0.13	translocation_intrachr	119	128	-1	66	67	7707	9150	heterozygous	1	-1	-1.0	83.25	77.58	-1.0	-1.0	0.28800000000000003	+/+	0.45
1690	421	7	7	296368.2	294837.4	103766053.0	113367495.0	0.17	translocation_intrachr	134	147	-1	69	68	19694	21780	heterozygous	1	419	-1.0	6981.64	84.92	-1.0	-1.0	0.203	+/-	0.49
1710	422	7	7	296780.0	295249.2	103766053.0	113367495.0	0.33	translocation_intrachr	135	146	-1	70	69	19694	21780	heterozygous	1	419	-1.0	6972.47	86.85	-1.0	-1.0	0.226	+/-	0.49
1713	1010	7	7	515224.6	997381.5	103775830.0	104008677.0	-1.0	duplication_inverted	141	142	-1	107	201	19695	19742	unknown	-1	-1	-1.0	62.36	183.01	-1.0	232847.0	0.285	NA	0.18
2138	301	10	10	17821433.2	17821433.2	20924352.0	20927486.0	1.0	inversion	205	209	2139	3631	3631	4099	4100	heterozygous	1	-1	-1.0	5132.16	683.55	-1.0	2615395.0	0.157	NA	0.92 20924352.0 23542881.0 right
2139	301	10	-1	15208043.7	-1.0	23542881.0	-1.0	1.0	inversion_partial	209	-1	2138	3085	-1	4664	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	2615395.0	0.157	NA	0.92
2154	302	10	10	17748192.0	17748192.0	20924352.0	20927486.0	1.0	inversion	206	210	2155	3614	3614	4099	4100	heterozygous	1	-1	-1.0	5109.94	686.57	-1.0	2615395.0	0.114	NA	0.92 20924352.0 23542881.0 right
2155	302	10	-1	15134529.2	-1.0	23542881.0	-1.0	1.0	inversion_partial	210	-1	2154	3068	-1	4664	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	2615395.0	0.114	NA	0.92
2158	301	10	10	15205174.3	15208043.7	23542165.0	23542165.0	1.0	inversion	209	213	2159	3084	3085	4663	4663	heterozygous	1	-1	-1.0	683.55	3925.06	-1.0	2614679.0	0.37	NA	0.92 20927486.0 23542165.0 left
2159	301	10	-1	17821083.0	-1.0	20927486.0	-1.0	1.0	inversion_partial	209	-1	2158	3631	-1	4100	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	2614679.0	0.37	NA	0.92
2163	302	10	10	15131660.0	15134529.2	23542165.0	23542165.0	1.0	inversion	210	212	2164	3067	3068	4663	4663	heterozygous	1	-1	-1.0	686.57	3901.01	-1.0	2614679.0	0.385	NA	0.92 20927486.0 23542165.0 left
2164	302	10	-1	17747841.7	-1.0	20927486.0	-1.0	1.0	inversion_partial	210	-1	2163	3614	-1	4100	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	2614679.0	0.385	NA	0.92
2672	91	13	16	6356518.7	6340139.7	98278072.0	53047308.0	0.14	translocation_interchr	243	301	-1	1187	1186	17196	7170	heterozygous	1	646	-1.0	21011.29	1515.38	-1.0	-1.0	0.204	-/-	0.63
2723	92	13	16	6284969.8	6268590.9	98278072.0	53047308.0	0.05	translocation_interchr	244	300	-1	1174	1173	17196	7170	heterozygous	1	646	-1.0	21033.09	1509.57	-1.0	-1.0	0.188	-/-	0.63
2724	1541	13	13	302749.7	316891.4	21571255.0	28859623.0	0.13	translocation_intrachr	245	248	-1	56	57	627	2089	heterozygous	1	647	-1.0	73.92	63.66	-1.0	-1.0	0.139	-/-	0.32
2725	1542	13	13	302185.9	316327.6	21571255.0	28859623.0	0.28	translocation_intrachr	246	247	-1	56	57	627	2089	heterozygous	1	647	-1.0	73.34	66.25	-1.0	-1.0	0.142	-/-	0.32
2734	492	13	16	15989756.0	16005154.4	98285741.0	59091125.0	0.05	translocation_interchr	251	302	-1	2988	2989	17197	8314	heterozygous	2	646	-1.0	3825.31	71.72	-1.0	-1.0	0.201	-/-	0.56
2741	491	13	16	16061724.2	16077122.6	98285741.0	59091125.0	0.62	translocation_interchr	252	303	-1	3000	3001	17197	8314	heterozygous	2	646	-1.0	3852.49	63.8	-1.0	-1.0	0.16699999999999998	-/-	0.56
2849	630	14	14	8604.7	509186.0	101352199.0	101599019.0	-1.0	duplication_inverted	257	258	-1	1	72	17214	17249	unknown	-1	-1	-1.0	46.97	1034.93	-1.0	246820.0	0.305	NA	0.66
2861	1702	15	15	306008.3	306008.3	30945885.0	31639515.0	0.88	inversion	268	269	2862	56	56	2014	2117	heterozygous	1	-1	-1.0	70.51	75.04	-1.0	179603.0	0.133	NA	0.11 30766282.0 31639515.0 left
2862	1702	15	-1	485417.4	-1.0	30766282.0	-1.0	0.88	inversion_partial	268	-1	2861	88	-1	1982	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	179603.0	0.133	NA	0.11
2982	1722	16	16	201367.8	201367.8	21500434.0	22240599.0	0.87	inversion	284	286	2983	34	34	3551	3683	heterozygous	1	-1	-1.0	73.77	67.07	-1.0	198203.0	0.067	NA	0.06 21500434.0 22438802.0 right
2983	1722	16	-1	3248.1	-1.0	22438802.0	-1.0	0.87	inversion_partial	286	-1	2982	1	-1	3717	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	198203.0	0.067	NA	0.06
2993	601	16	16	6717962.6	6722601.9	53030128.0	59102650.0	0.27	translocation_intrachr	296	304	-1	1201	1202	7169	8315	heterozygous	1	702	-1.0	1561.86	63.14	-1.0	-1.0	0.107	+/+	0.53
2999	602	16	16	6716886.6	6721525.9	53030128.0	59102650.0	0.05	translocation_intrachr	297	305	-1	1202	1203	7169	8315	heterozygous	1	702	-1.0	1556.64	75.48	-1.0	-1.0	0.204	+/+	0.53
3063	1422	17	17	-1081413.1	1648120.1	14209213.0	15565794.0	-1.0	duplication_split	312	314	-1	0	101	2237	2507	unknown	-1	-1	-1.0	62.61	73.48	-1.0	1356581.0	0.119	NA	0.13
3064	1421	17	17	-1059097.6	1670517.3	14209213.0	15565794.0	-1.0	duplication_split	313	315	-1	0	101	2237	2507	unknown	-1	-1	-1.0	70.57	64.1	-1.0	1356581.0	0.077	NA	0.1
3145	1440	18	18	321845.9	326578.9	2121562.0	8250329.0	0.28	translocation_intrachr	321	322	-1	76	77	450	1770	heterozygous	1	-1	-1.0	94.95	90.03	-1.0	-1.0	0.237	-/-	0.25
3337	622	20	20	5690523.7	5697981.9	16461027.0	20647796.0	0.98	inversion	339	348	3338	1030	1031	3373	4169	heterozygous	1	780	-1.0	48.05	1353.33	-1.0	207053.0	0.11	NA	0.24 16253974.0 20647796.0 left
3338	622	20	-1	5904960.4	-1.0	16253974.0	-1.0	0.98	inversion_partial	339	-1	3337	1071	-1	3333	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	207053.0	0.11	NA	0.24
3339	621	20	20	5691725.7	5699183.9	16555447.5	20647796.0	0.95	inversion	340	347	3340	1028	1029	3397	4169	heterozygous	2	780	-1.0	77.27	1352.79	-1.0	301473.5	0.229	NA	0.24 16253974.0 20647796.0 left
3340	621	20	-1	6000563.5	-1.0	16253974.0	-1.0	0.95	inversion_partial	340	-1	3339	1092	-1	3333	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	301473.5	0.229	NA	0.24
3342	661	20	20	27999.2	499227.6	20411990.0	20646346.0	-1.0	duplication_inverted	341	345	-1	5	126	4107	4168	unknown	-1	-1	-1.0	1067.33	74.36	-1.0	234356.0	0.203	NA	0.25
3343	662	20	20	27999.2	499227.6	20411990.0	20646346.0	-1.0	duplication_inverted	342	346	-1	5	126	4107	4168	unknown	-1	-1	-1.0	1064.22	74.36	-1.0	234356.0	0.161	NA	0.21
3705	642	24	24	4602325.9	4989733.0	22754860.0	24775742.0	0.01	deletion	435	441	-1	904	987	4014	4460	heterozygous	1	875	0.01	1239.02	333.08	-1.0	1633474.9	0.263	NA	0.42
3707	641	24	24	4595211.8	4982618.9	22754860.0	24775742.0	0.01	deletion	436	440	-1	903	984	4014	4460	heterozygous	1	875	0.01	1230.6	319.05	-1.0	1633474.9	0.158	NA	0.42
0 1 14453.0 3 H [1]
1 1 47096352.0 3 T [0, 2]
2 1 47098825.0 3 H [1, 3]
3 1 120052812.0 3 T [2, 4]
4 1 120059309.0 3 H [3, 5]
5 1 121608073.0 3 T [4, 6]
6 1 121608074 2 H [5, 7]
7 1 248943332 2 T [6]
8 2 15925 2 H [9]
9 2 105416603.0 2 T [8, 10]
10 2 105416604.0 3 H [9, 11]
11 2 109475870.0 3 T [10, 12]
12 2 109475871 2 H [11, 13]
13 2 242181356 2 T [12]
14 3 12920 2 H [15]
15 3 38598242.0 2 T [16, 14]
16 3 38598243.0 3 H [17, 15]
17 3 41915130.0 3 T [16, 18]
18 3 41915131.0 2 H [17, 19]
19 3 77970098.0 2 T [18, 20, 23]
20 3 77970099.0 2 H [19, 21]
21 3 78023973.0 2 T [20, 22]
22 3 78023974.0 3 H [21, 22, 23]
23 3 85456420.5 3 T [24, 19, 22]
24 3 85460505.0 2 H [25, 23]
25 3 130684428.25 2 T [24, 26, 48]
26 3 130684429.25 2 H [25, 27, 49]
27 3 198230595.0 2 T [26]
28 4 0 2 H [29]
29 4 190202564 2 T [28]
30 5 19315 2 H [31]
31 5 254718.0 2 T [32, 30]
32 5 254719.0 1 H [33, 31]
33 5 46400789.0 1 T [32, 34]
34 5 46400790 2 H [33, 35]
35 5 49709238.0 2 T [34, 36]
36 5 49709239.0 1 H [35, 37]
37 5 70612428.0 1 T [36, 38]
38 5 70612429.0 1 H [37, 39]
39 5 181301991.0 1 T [40, 38]
40 5 181301992 2 H [41, 39]
41 5 181472713 2 T [40]
42 6 76217.0 2 H [43]
43 6 168423375.5 2 T [42, 44, 45]
44 6 168446971.0 3 H [43, 44, 45]
45 6 170739897.0 3 T [43, 44]
46 7 10488.0 2 H [47]
47 7 38382782.666666664 2 T [48, 50, 46]
48 7 38382783.666666664 2 H [49, 25, 47]
49 7 45898341.0 2 T [48, 50, 26]
50 7 45898342.0 2 H [49, 51, 47]
51 7 63008785.0 2 T [50, 52]
52 7 63008786.0 3 H [51, 53]
53 7 72504423.0 3 T [52, 54]
54 7 72514593.0 3 H [53, 55]
55 7 103779755.5 3 T [56, 61, 54]
56 7 103797537.0 5 H [56, 57, 55]
57 7 109083898.0 5 T [56, 58]
58 7 109091421.0 6 H [57, 59]
59 7 111189749.0 6 T [58, 60]
60 7 111206245.0 5 H [59, 61]
61 7 113362532.0 5 T [60, 62, 55]
62 7 113366996.5 3 H [61, 63]
63 7 150214081.0 3 T [64, 62]
64 7 150217565.0 3 H [65, 63]
65 7 152409050.0 3 T [64, 66]
66 7 152426468.0 3 H [65, 67]
67 7 157625834.0 3 T [66, 68]
68 7 157625835 2 H [67, 69]
69 7 159334983 2 T [68]
70 8 0 2 H [71]
71 8 145076125 2 T [70]
72 9 0 2 H [73]
73 9 138334464 2 T [72]
74 10 0.0 2 H [75]
75 10 20925919.0 2 T [74, 76, 77]
76 10 20925920.0 2 H [75, 77, 78]
77 10 23542523.0 2 T [75, 76, 78]
78 10 23542524.0 2 H [76, 77, 79]
79 10 133785266.0 2 T [78]
80 11 0 2 H [81]
81 11 135069565 2 T [80]
82 12 0 2 H [83]
83 12 133263960 2 T [82]
84 13 16004726.0 2 H [85]
85 13 21571255.0 2 T [84, 86]
86 13 21571256.0 2 H [91, 85, 87]
87 13 21626565.0 2 T [88, 86]
88 13 21626566.0 3 H [89, 87]
89 13 28772181.0 3 T [88, 90]
90 13 28772182.0 2 H [89, 91]
91 13 28859623.0 2 T [90, 92, 86]
92 13 28859624.0 2 H [91, 93]
93 13 98281906.5 2 T [114, 92, 94]
94 13 98281907.5 2 H [115, 93, 95]
95 13 114352101.0 2 T [94]
96 14 16004726 2 H [97]
97 14 101442898.0 2 T [96, 98]
98 14 101442899.0 3 H [97, 98, 99]
99 14 104169671.0 3 T [98, 100]
100 14 104169672 2 H [99, 101]
101 14 106873281 2 T [100]
102 15 0.0 2 H [103]
103 15 30766282.0 2 T [104, 102]
104 15 30766283.0 2 H [105, 106, 103]
105 15 31639515.0 2 T [104, 106]
106 15 31639516.0 2 H [104, 105, 107]
107 15 101976509.0 2 T [106]
108 16 0.0 2 H [109]
109 16 21500434.0 2 T [108, 110, 111]
110 16 21500435.0 2 H [109, 111]
111 16 22438802.0 2 T [112, 109, 110]
112 16 22438803.0 2 H [113, 111]
113 16 53038718.0 2 T [112, 114, 116]
114 16 53038719.0 2 H [113, 115, 93]
115 16 59096887.5 2 T [114, 116, 94]
116 16 59096888.5 2 H [113, 115, 117]
117 16 90224751.0 2 T [116]
118 17 66654 2 H [119]
119 17 14209212.0 2 T [120, 118]
120 17 14209213.0 3 H [121, 119]
121 17 15479623.0 3 T [120, 122]
122 17 15479624 2 H [121, 123]
123 17 83246391 2 T [122]
124 18 18869 2 H [125]
125 18 2115879.0 2 T [124, 126]
126 18 2118721.0 3 H [125, 127]
127 18 8215501.0 3 T [128, 126]
128 18 8232915.5 2 H [129, 127]
129 18 80256373.0 2 T [128]
130 19 0 2 H [131]
131 19 58605715 2 T [130]
132 20 70157 2 H [133]
133 20 16240040.0 2 T [132, 134]
134 20 16247007.5 3 H [138, 133, 135]
135 20 20558667.0 3 T [136, 134, 135]
136 20 20558668.0 2 H [137, 135]
137 20 20647796.0 2 T [136, 138]
138 20 20647797.0 2 H [137, 139, 134]
139 20 64333717.0 2 T [138]
140 21 0 2 H [141]
141 21 46697230 2 T [140]
142 22 0 2 H [143]
143 22 50805587 2 T [142]
144 23 0 1 H [145]
145 23 156025612 1 T [144]
146 24 0 1 H [147]
147 24 57212132 1 T [146]
Siavash
[(0, 1, 3, 'S'), (1, 2, 0, 'R'), (2, 3, 3, 'S'), (3, 4, 0, 'R'), (4, 5, 3, 'S'), (5, 6, 0, 'R'), (6, 7, 2, 'S'), (8, 9, 2, 'S'), (9, 10, 0, 'R'), (10, 11, 3, 'S'), (11, 12, 0, 'R'), (12, 13, 2, 'S'), (14, 15, 2, 'S'), (15, 16, 0, 'R'), (16, 17, 3, 'S'), (17, 18, 0, 'R'), (19, 18, 2, 'S'), (19, 20, 0, 'R'), (20, 21, 2, 'S'), (21, 22, 0, 'R'), (22, 23, 3, 'S'), (23, 24, 0, 'R'), (25, 24, 2, 'S'), (25, 26, 0, 'R'), (26, 27, 2, 'S'), (28, 29, 2, 'S'), (30, 31, 2, 'S'), (31, 32, 0, 'R'), (32, 33, 1, 'S'), (33, 34, 0, 'R'), (34, 35, 2, 'S'), (35, 36, 0, 'R'), (36, 37, 1, 'S'), (37, 38, 0, 'R'), (38, 39, 1, 'S'), (39, 40, 0, 'R'), (40, 41, 2, 'S'), (42, 43, 2, 'S'), (43, 44, 0, 'R'), (44, 45, 3, 'S'), (47, 46, 2, 'S'), (47, 48, 0, 'R'), (49, 48, 2, 'S'), (49, 50, 0, 'R'), (50, 51, 2, 'S'), (51, 52, 0, 'R'), (52, 53, 3, 'S'), (53, 54, 0, 'R'), (54, 55, 3, 'S'), (55, 56, 0, 'R'), (56, 57, 5, 'S'), (57, 58, 0, 'R'), (58, 59, 6, 'S'), (59, 60, 0, 'R'), (60, 61, 5, 'S'), (61, 62, 0, 'R'), (62, 63, 3, 'S'), (63, 64, 0, 'R'), (64, 65, 3, 'S'), (65, 66, 0, 'R'), (66, 67, 3, 'S'), (67, 68, 0, 'R'), (68, 69, 2, 'S'), (70, 71, 2, 'S'), (72, 73, 2, 'S'), (75, 74, 2, 'S'), (75, 76, 0, 'R'), (77, 76, 2, 'S'), (77, 78, 0, 'R'), (78, 79, 2, 'S'), (80, 81, 2, 'S'), (82, 83, 2, 'S'), (85, 84, 2, 'S'), (85, 86, 0, 'R'), (86, 87, 2, 'S'), (87, 88, 0, 'R'), (88, 89, 3, 'S'), (89, 90, 0, 'R'), (91, 90, 2, 'S'), (91, 92, 0, 'R'), (93, 92, 2, 'S'), (93, 94, 0, 'R'), (94, 95, 2, 'S'), (96, 97, 2, 'S'), (97, 98, 0, 'R'), (98, 99, 3, 'S'), (99, 100, 0, 'R'), (100, 101, 2, 'S'), (103, 102, 2, 'S'), (103, 104, 0, 'R'), (105, 104, 2, 'S'), (105, 106, 0, 'R'), (106, 107, 2, 'S'), (109, 108, 2, 'S'), (109, 110, 0, 'R'), (111, 110, 2, 'S'), (111, 112, 0, 'R'), (113, 112, 2, 'S'), (113, 114, 0, 'R'), (115, 114, 2, 'S'), (115, 116, 0, 'R'), (116, 117, 2, 'S'), (118, 119, 2, 'S'), (119, 120, 0, 'R'), (120, 121, 3, 'S'), (121, 122, 0, 'R'), (122, 123, 2, 'S'), (124, 125, 2, 'S'), (125, 126, 0, 'R'), (126, 127, 3, 'S'), (127, 128, 0, 'R'), (128, 129, 2, 'S'), (130, 131, 2, 'S'), (132, 133, 2, 'S'), (133, 134, 0, 'R'), (134, 135, 3, 'S'), (135, 136, 0, 'R'), (137, 136, 2, 'S'), (137, 138, 0, 'R'), (138, 139, 2, 'S'), (140, 141, 2, 'S'), (142, 143, 2, 'S'), (144, 145, 1, 'S'), (146, 147, 1, 'S'), (10, 11, 0, 'SV'), (16, 17, 0, 'SV'), (19, 23, 0, 'SV'), (22, 22, 0, 'SV'), (25, 48, 0, 'SV'), (26, 49, 0, 'SV'), (43, 45, 0, 'SV'), (44, 44, 0, 'SV'), (47, 50, 0, 'SV'), (55, 61, 0, 'SV'), (56, 56, 0, 'SV'), (75, 77, 0, 'SV'), (76, 78, 0, 'SV'), (93, 114, 0, 'SV'), (86, 91, 0, 'SV'), (94, 115, 0, 'SV'), (98, 98, 0, 'SV'), (104, 106, 0, 'SV'), (109, 111, 0, 'SV'), (113, 116, 0, 'SV'), (120, 121, 0, 'SV'), (126, 127, 0, 'SV'), (134, 138, 0, 'SV'), (135, 135, 0, 'SV')]
Siavash [(0, 1, 3, 'S'), (1, 2, 0, 'R'), (2, 3, 3, 'S'), (3, 4, 0, 'R'), (4, 5, 3, 'S'), (5, 6, 0, 'R'), (6, 7, 2, 'S')]
Y0 (0, 1, 3, 'S')
X1 (1, 2, 0, 'R')
Y2 (2, 3, 3, 'S')
X3 (3, 4, 0, 'R')
Y4 (4, 5, 3, 'S')
X5 (5, 6, 0, 'R')
Y6 (6, 7, 2, 'S')
A0 A0
B0 B0
A1 A1
B1 B1
A2 A2
B2 B2
A3 A3
B3 B3
A4 A4
B4 B4
A5 A5
B5 B5
A6 A6
B6 B6
A7 A7
B7 B7
obj -2*X1 - 2*X3 - 2*X5 - 2*Y0 - 2*Y2 - 2*Y4 - 2*Y6 + 22
Sv_sum 0
CN_tune 60*Z0 + 90*Z2 + 6*Z4 + 104*Z6
obj B0 + B1 + B2 + B3 + B4 + B5 + B6 + B7 - 20*X1 - 20*X3 - 20*X5 - 20*Y0 - 20*Y2 - 20*Y4 - 20*Y6 + 600*Z0 + 900*Z2 + 60*Z4 + 1040*Z6 + 220
Problem:
MINIMIZE
1*B0 + 1*B1 + 1*B2 + 1*B3 + 1*B4 + 1*B5 + 1*B6 + 1*B7 + -20*X1 + -20*X3 + -20*X5 + -20*Y0 + -20*Y2 + -20*Y4 + -20*Y6 + 600*Z0 + 900*Z2 + 60*Z4 + 1040*Z6 + 220
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: X3 >= 1

_C9: Y4 + Z4 >= 0

_C10: - Y4 + Z4 >= 0

_C11: Z4 <= 1

_C12: X5 >= 1

_C13: Y6 + Z6 >= 0

_C14: - Y6 + Z6 >= 0

_C15: Z6 <= 1

_C16: - 2 A0 - B0 - Y0 = -3

_C17: X1 + Y0 <= 3

_C18: - 2 A1 - B1 + X1 + Y0 = -3

_C19: X1 + Y2 <= 3

_C20: - 2 A2 - B2 + X1 + Y2 = -3

_C21: X3 + Y2 <= 3

_C22: - 2 A3 - B3 + X3 + Y2 = -3

_C23: X3 + Y4 <= 3

_C24: - 2 A4 - B4 + X3 + Y4 = -3

_C25: X5 + Y4 <= 3

_C26: - 2 A5 - B5 + X5 + Y4 = -3

_C27: X5 + Y6 <= 2

_C28: - 2 A6 - B6 + X5 + Y6 = -2

_C29: - 2 A7 - B7 - Y6 = -2

VARIABLES
0 <= A0 Integer
0 <= A1 Integer
0 <= A2 Integer
0 <= A3 Integer
0 <= A4 Integer
0 <= A5 Integer
0 <= A6 Integer
0 <= A7 Integer
0 <= B0 <= 1 Integer
0 <= B1 <= 1 Integer
0 <= B2 <= 1 Integer
0 <= B3 <= 1 Integer
0 <= B4 <= 1 Integer
0 <= B5 <= 1 Integer
0 <= B6 <= 1 Integer
0 <= B7 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X5 Integer
Y0 free Integer
Y2 free Integer
Y4 free Integer
Y6 free Integer
Z0 free Integer
Z2 free Integer
Z4 free Integer
Z6 free Integer

Optimal
[A0, A1, A2, A3, A4, A5, A6, A7, B0, B1, B2, B3, B4, B5, B6, B7, X1, X3, X5, Y0, Y2, Y4, Y6, Z0, Z2, Z4, Z6]
1 2 3.0 R
3 4 3.0 R
5 6 2.0 R
A0 = 1.0
A1 = 3.0
A2 = 3.0
A3 = 3.0
A4 = 3.0
A5 = 2.0
A6 = 2.0
A7 = 1.0
B0 = 1.0
B1 = 0.0
B2 = 0.0
B3 = 0.0
B4 = 0.0
B5 = 1.0
B6 = 0.0
B7 = 0.0
X1 = 3.0
X3 = 3.0
X5 = 2.0
Y0 = 0.0
Y2 = 0.0
Y4 = 0.0
Y6 = 0.0
Z0 = 0.0
Z2 = 0.0
Z4 = 0.0
Z6 = 0.0
62.0 Objective Answer
Siavash [(8, 9, 2, 'S'), (9, 10, 0, 'R'), (10, 11, 3, 'S'), (10, 11, 0, 'SV'), (11, 12, 0, 'R'), (12, 13, 2, 'S')]
Y0 (8, 9, 2, 'S')
X1 (9, 10, 0, 'R')
Y2 (10, 11, 3, 'S')
X3 (10, 11, 0, 'SV')
X4 (11, 12, 0, 'R')
Y5 (12, 13, 2, 'S')
A8 A8
B8 B8
A9 A9
B9 B9
A10 A10
B10 B10
A11 A11
B11 B11
A12 A12
B12 B12
A13 A13
B13 B13
obj -2*X1 - 2*X3 - 2*X4 - 2*Y0 - 2*Y2 - 2*Y5 + 14
Sv_sum T3
CN_tune 88*Z0 + 6*Z2 + 108*Z5
obj B10 + B11 + B12 + B13 + B8 + B9 - 10*T3 - 20*X1 - 20*X3 - 20*X4 - 20*Y0 - 20*Y2 - 20*Y5 + 880*Z0 + 60*Z2 + 1080*Z5 + 140
Problem:
MINIMIZE
1*B10 + 1*B11 + 1*B12 + 1*B13 + 1*B8 + 1*B9 + -10*T3 + -20*X1 + -20*X3 + -20*X4 + -20*Y0 + -20*Y2 + -20*Y5 + 880*Z0 + 60*Z2 + 1080*Z5 + 140
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A8 - B8 - Y0 = -2

_C16: X1 + Y0 <= 2

_C17: - 2 A9 - B9 + X1 + Y0 = -2

_C18: X1 + X3 + Y2 <= 3

_C19: - 2 A10 - B10 + X1 + X3 + Y2 = -3

_C20: X3 + X4 + Y2 <= 3

_C21: - 2 A11 - B11 + X3 + X4 + Y2 = -3

_C22: X4 + Y5 <= 2

_C23: - 2 A12 - B12 + X4 + Y5 = -2

_C24: - 2 A13 - B13 - Y5 = -2

VARIABLES
0 <= A10 Integer
0 <= A11 Integer
0 <= A12 Integer
0 <= A13 Integer
0 <= A8 Integer
0 <= A9 Integer
0 <= B10 <= 1 Integer
0 <= B11 <= 1 Integer
0 <= B12 <= 1 Integer
0 <= B13 <= 1 Integer
0 <= B8 <= 1 Integer
0 <= B9 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer

Optimal
[A10, A11, A12, A13, A8, A9, B10, B11, B12, B13, B8, B9, T3, X1, X3, X4, Y0, Y2, Y5, Z0, Z2, Z5]
9 10 2.0 R
10 11 1.0 SV
11 12 2.0 R
A10 = 3.0
A11 = 3.0
A12 = 2.0
A13 = 1.0
A8 = 1.0
A9 = 2.0
B10 = 0.0
B11 = 0.0
B12 = 0.0
B13 = 0.0
B8 = 0.0
B9 = 0.0
T3 = 1.0
X1 = 2.0
X3 = 1.0
X4 = 2.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(14, 15, 2, 'S'), (15, 16, 0, 'R'), (16, 17, 3, 'S'), (16, 17, 0, 'SV'), (17, 18, 0, 'R'), (19, 18, 2, 'S'), (19, 20, 0, 'R'), (19, 23, 0, 'SV'), (20, 21, 2, 'S'), (21, 22, 0, 'R'), (22, 23, 3, 'S'), (23, 24, 0, 'R'), (25, 24, 2, 'S'), (25, 26, 0, 'R'), (25, 48, 0, 'SV'), (26, 27, 2, 'S'), (26, 49, 0, 'SV'), (49, 48, 2, 'S'), (49, 50, 0, 'R'), (47, 48, 0, 'R'), (47, 50, 0, 'SV'), (47, 46, 2, 'S'), (50, 51, 2, 'S'), (51, 52, 0, 'R'), (52, 53, 3, 'S'), (53, 54, 0, 'R'), (54, 55, 3, 'S'), (55, 56, 0, 'R'), (55, 61, 0, 'SV'), (56, 57, 5, 'S'), (57, 58, 0, 'R'), (58, 59, 6, 'S'), (59, 60, 0, 'R'), (60, 61, 5, 'S'), (61, 62, 0, 'R'), (62, 63, 3, 'S'), (63, 64, 0, 'R'), (64, 65, 3, 'S'), (65, 66, 0, 'R'), (66, 67, 3, 'S'), (67, 68, 0, 'R'), (68, 69, 2, 'S'), (22, 22, 0, 'SV'), (56, 56, 0, 'SV')]
Y0 (14, 15, 2, 'S')
X1 (15, 16, 0, 'R')
Y2 (16, 17, 3, 'S')
X3 (16, 17, 0, 'SV')
X4 (17, 18, 0, 'R')
Y5 (19, 18, 2, 'S')
X6 (19, 20, 0, 'R')
X7 (19, 23, 0, 'SV')
Y8 (20, 21, 2, 'S')
X9 (21, 22, 0, 'R')
Y10 (22, 23, 3, 'S')
X11 (23, 24, 0, 'R')
Y12 (25, 24, 2, 'S')
X13 (25, 26, 0, 'R')
X14 (25, 48, 0, 'SV')
Y15 (26, 27, 2, 'S')
X16 (26, 49, 0, 'SV')
Y17 (49, 48, 2, 'S')
X18 (49, 50, 0, 'R')
X19 (47, 48, 0, 'R')
X20 (47, 50, 0, 'SV')
Y21 (47, 46, 2, 'S')
Y22 (50, 51, 2, 'S')
X23 (51, 52, 0, 'R')
Y24 (52, 53, 3, 'S')
X25 (53, 54, 0, 'R')
Y26 (54, 55, 3, 'S')
X27 (55, 56, 0, 'R')
X28 (55, 61, 0, 'SV')
Y29 (56, 57, 5, 'S')
X30 (57, 58, 0, 'R')
Y31 (58, 59, 6, 'S')
X32 (59, 60, 0, 'R')
Y33 (60, 61, 5, 'S')
X34 (61, 62, 0, 'R')
Y35 (62, 63, 3, 'S')
X36 (63, 64, 0, 'R')
Y37 (64, 65, 3, 'S')
X38 (65, 66, 0, 'R')
Y39 (66, 67, 3, 'S')
X40 (67, 68, 0, 'R')
Y41 (68, 69, 2, 'S')
X42 (22, 22, 0, 'SV')
X43 (56, 56, 0, 'SV')
A14 A14
B14 B14
A15 A15
B15 B15
A16 A16
B16 B16
A17 A17
B17 B17
A18 A18
B18 B18
A19 A19
B19 B19
A20 A20
B20 B20
A21 A21
B21 B21
A22 A22
B22 B22
A23 A23
B23 B23
A24 A24
B24 B24
A25 A25
B25 B25
A26 A26
B26 B26
A27 A27
B27 B27
A49 A49
B49 B49
A48 A48
B48 B48
A47 A47
B47 B47
A50 A50
B50 B50
A51 A51
B51 B51
A52 A52
B52 B52
A53 A53
B53 B53
A54 A54
B54 B54
A55 A55
B55 B55
A56 A56
B56 B56
A57 A57
B57 B57
A58 A58
B58 B58
A59 A59
B59 B59
A60 A60
B60 B60
A61 A61
B61 B61
A62 A62
B62 B62
A63 A63
B63 B63
A64 A64
B64 B64
A65 A65
B65 B65
A66 A66
B66 B66
A67 A67
B67 B67
A68 A68
B68 B68
A69 A69
B69 B69
A46 A46
B46 B46
obj -2*X1 - 2*X11 - 2*X13 - 2*X14 - 2*X16 - 2*X18 - 2*X19 - 2*X20 - 2*X23 - 2*X25 - 2*X27 - 2*X28 - 2*X3 - 2*X30 - 2*X32 - 2*X34 - 2*X36 - 2*X38 - 2*X4 - 2*X40 - 2*X42 - 2*X43 - 2*X6 - 2*X7 - 2*X9 - 2*Y0 - 2*Y10 - 2*Y12 - 2*Y15 - 2*Y17 - 2*Y2 - 2*Y21 - 2*Y22 - 2*Y24 - 2*Y26 - 2*Y29 - 2*Y31 - 2*Y33 - 2*Y35 - 2*Y37 - 2*Y39 - 2*Y41 - 2*Y5 - 2*Y8 + 110
Sv_sum 8*T14 + 8*T16 + T20 + T28 + T3 + T42 + T43 + T7
CN_tune 32*Z0 + 12*Z10 + 20*Z12 + 56*Z15 + 4*Z17 + 6*Z2 + 32*Z21 + 8*Z22 + 12*Z24 + 42*Z26 + 12*Z29 + 6*Z31 + 6*Z33 + 48*Z35 + 6*Z37 + 12*Z39 + 4*Z41 + 16*Z5 + 2*Z8
obj B14 + B15 + B16 + B17 + B18 + B19 + B20 + B21 + B22 + B23 + B24 + B25 + B26 + B27 + B46 + B47 + B48 + B49 + B50 + B51 + B52 + B53 + B54 + B55 + B56 + B57 + B58 + B59 + B60 + B61 + B62 + B63 + B64 + B65 + B66 + B67 + B68 + B69 - 80*T14 - 80*T16 - 10*T20 - 10*T28 - 10*T3 - 10*T42 - 10*T43 - 10*T7 - 20*X1 - 20*X11 - 20*X13 - 20*X14 - 20*X16 - 20*X18 - 20*X19 - 20*X20 - 20*X23 - 20*X25 - 20*X27 - 20*X28 - 20*X3 - 20*X30 - 20*X32 - 20*X34 - 20*X36 - 20*X38 - 20*X4 - 20*X40 - 20*X42 - 20*X43 - 20*X6 - 20*X7 - 20*X9 - 20*Y0 - 20*Y10 - 20*Y12 - 20*Y15 - 20*Y17 - 20*Y2 - 20*Y21 - 20*Y22 - 20*Y24 - 20*Y26 - 20*Y29 - 20*Y31 - 20*Y33 - 20*Y35 - 20*Y37 - 20*Y39 - 20*Y41 - 20*Y5 - 20*Y8 + 320*Z0 + 120*Z10 + 200*Z12 + 560*Z15 + 40*Z17 + 60*Z2 + 320*Z21 + 80*Z22 + 120*Z24 + 420*Z26 + 120*Z29 + 60*Z31 + 60*Z33 + 480*Z35 + 60*Z37 + 120*Z39 + 40*Z41 + 160*Z5 + 20*Z8 + 1100
Problem:
MINIMIZE
1*B14 + 1*B15 + 1*B16 + 1*B17 + 1*B18 + 1*B19 + 1*B20 + 1*B21 + 1*B22 + 1*B23 + 1*B24 + 1*B25 + 1*B26 + 1*B27 + 1*B46 + 1*B47 + 1*B48 + 1*B49 + 1*B50 + 1*B51 + 1*B52 + 1*B53 + 1*B54 + 1*B55 + 1*B56 + 1*B57 + 1*B58 + 1*B59 + 1*B60 + 1*B61 + 1*B62 + 1*B63 + 1*B64 + 1*B65 + 1*B66 + 1*B67 + 1*B68 + 1*B69 + -80*T14 + -80*T16 + -10*T20 + -10*T28 + -10*T3 + -10*T42 + -10*T43 + -10*T7 + -20*X1 + -20*X11 + -20*X13 + -20*X14 + -20*X16 + -20*X18 + -20*X19 + -20*X20 + -20*X23 + -20*X25 + -20*X27 + -20*X28 + -20*X3 + -20*X30 + -20*X32 + -20*X34 + -20*X36 + -20*X38 + -20*X4 + -20*X40 + -20*X42 + -20*X43 + -20*X6 + -20*X7 + -20*X9 + -20*Y0 + -20*Y10 + -20*Y12 + -20*Y15 + -20*Y17 + -20*Y2 + -20*Y21 + -20*Y22 + -20*Y24 + -20*Y26 + -20*Y29 + -20*Y31 + -20*Y33 + -20*Y35 + -20*Y37 + -20*Y39 + -20*Y41 + -20*Y5 + -20*Y8 + 320*Z0 + 120*Z10 + 200*Z12 + 560*Z15 + 40*Z17 + 60*Z2 + 320*Z21 + 80*Z22 + 120*Z24 + 420*Z26 + 120*Z29 + 60*Z31 + 60*Z33 + 480*Z35 + 60*Z37 + 120*Z39 + 40*Z41 + 160*Z5 + 20*Z8 + 1100
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: - 10 T7 + X7 <= 0

_C17: - T7 + X7 >= 0

_C18: X7 >= 0

_C19: Y8 + Z8 >= 0

_C20: - Y8 + Z8 >= 0

_C21: Z8 <= 1

_C22: X9 >= 1

_C23: Y10 + Z10 >= 0

_C24: - Y10 + Z10 >= 0

_C25: Z10 <= 1

_C26: X11 >= 1

_C27: Y12 + Z12 >= 0

_C28: - Y12 + Z12 >= 0

_C29: Z12 <= 1

_C30: X13 >= 1

_C31: - 10 T14 + X14 <= 0

_C32: - T14 + X14 >= 0

_C33: X14 >= 0

_C34: Y15 + Z15 >= 0

_C35: - Y15 + Z15 >= 0

_C36: Z15 <= 1

_C37: - 10 T16 + X16 <= 0

_C38: - T16 + X16 >= 0

_C39: X16 >= 0

_C40: Y17 + Z17 >= 0

_C41: - Y17 + Z17 >= 0

_C42: Z17 <= 1

_C43: X18 >= 1

_C44: X19 >= 1

_C45: - 10 T20 + X20 <= 0

_C46: - T20 + X20 >= 0

_C47: X20 >= 0

_C48: Y21 + Z21 >= 0

_C49: - Y21 + Z21 >= 0

_C50: Z21 <= 1

_C51: Y22 + Z22 >= 0

_C52: - Y22 + Z22 >= 0

_C53: Z22 <= 1

_C54: X23 >= 1

_C55: Y24 + Z24 >= 0

_C56: - Y24 + Z24 >= 0

_C57: Z24 <= 1

_C58: X25 >= 1

_C59: Y26 + Z26 >= 0

_C60: - Y26 + Z26 >= 0

_C61: Z26 <= 1

_C62: X27 >= 1

_C63: - 10 T28 + X28 <= 0

_C64: - T28 + X28 >= 0

_C65: X28 >= 0

_C66: Y29 + Z29 >= 0

_C67: - Y29 + Z29 >= 0

_C68: Z29 <= 2

_C69: X30 >= 1

_C70: Y31 + Z31 >= 0

_C71: - Y31 + Z31 >= 0

_C72: Z31 <= 2

_C73: X32 >= 1

_C74: Y33 + Z33 >= 0

_C75: - Y33 + Z33 >= 0

_C76: Z33 <= 2

_C77: X34 >= 1

_C78: Y35 + Z35 >= 0

_C79: - Y35 + Z35 >= 0

_C80: Z35 <= 1

_C81: X36 >= 1

_C82: Y37 + Z37 >= 0

_C83: - Y37 + Z37 >= 0

_C84: Z37 <= 1

_C85: X38 >= 1

_C86: Y39 + Z39 >= 0

_C87: - Y39 + Z39 >= 0

_C88: Z39 <= 1

_C89: X40 >= 1

_C90: Y41 + Z41 >= 0

_C91: - Y41 + Z41 >= 0

_C92: Z41 <= 1

_C93: - 10 T42 + X42 <= 0

_C94: - T42 + X42 >= 0

_C95: X42 >= 0

_C96: - 10 T43 + X43 <= 0

_C97: - T43 + X43 >= 0

_C98: X43 >= 0

_C99: - 2 A14 - B14 - Y0 = -2

_C100: X1 + Y0 <= 2

_C101: - 2 A15 - B15 + X1 + Y0 = -2

_C102: X1 + X3 + Y2 <= 3

_C103: - 2 A16 - B16 + X1 + X3 + Y2 = -3

_C104: X3 + X4 + Y2 <= 3

_C105: - 2 A17 - B17 + X3 + X4 + Y2 = -3

_C106: X4 + Y5 <= 2

_C107: - 2 A18 - B18 + X4 + Y5 = -2

_C108: X6 + X7 + Y5 <= 2

_C109: - 2 A19 - B19 + X6 + X7 + Y5 = -2

_C110: X6 + Y8 <= 2

_C111: - 2 A20 - B20 + X6 + Y8 = -2

_C112: X9 + Y8 <= 2

_C113: - 2 A21 - B21 + X9 + Y8 = -2

_C114: 2 X42 + X9 + Y10 <= 3

_C115: - 2 A22 - B22 + 2 X42 + X9 + Y10 = -3

_C116: X11 + X7 + Y10 <= 3

_C117: - 2 A23 - B23 + X11 + X7 + Y10 = -3

_C118: X11 + Y12 <= 2

_C119: - 2 A24 - B24 + X11 + Y12 = -2

_C120: X13 + X14 + Y12 <= 2

_C121: - 2 A25 - B25 + X13 + X14 + Y12 = -2

_C122: X13 + X16 + Y15 <= 2

_C123: - 2 A26 - B26 + X13 + X16 + Y15 = -2

_C124: - 2 A27 - B27 - Y15 = -2

_C125: X16 + X18 + Y17 <= 2

_C126: - 2 A49 - B49 + X16 + X18 + Y17 = -2

_C127: X14 + X19 + Y17 <= 2

_C128: - 2 A48 - B48 + X14 + X19 + Y17 = -2

_C129: X19 + X20 + Y21 <= 2

_C130: - 2 A47 - B47 + X19 + X20 + Y21 = -2

_C131: X18 + X20 + Y22 <= 2

_C132: - 2 A50 - B50 + X18 + X20 + Y22 = -2

_C133: X23 + Y22 <= 2

_C134: - 2 A51 - B51 + X23 + Y22 = -2

_C135: X23 + Y24 <= 3

_C136: - 2 A52 - B52 + X23 + Y24 = -3

_C137: X25 + Y24 <= 3

_C138: - 2 A53 - B53 + X25 + Y24 = -3

_C139: X25 + Y26 <= 3

_C140: - 2 A54 - B54 + X25 + Y26 = -3

_C141: X27 + X28 + Y26 <= 3

_C142: - 2 A55 - B55 + X27 + X28 + Y26 = -3

_C143: X27 + 2 X43 + Y29 <= 5

_C144: - 2 A56 - B56 + X27 + 2 X43 + Y29 = -5

_C145: X30 + Y29 <= 5

_C146: - 2 A57 - B57 + X30 + Y29 = -5

_C147: X30 + Y31 <= 6

_C148: - 2 A58 - B58 + X30 + Y31 = -6

_C149: X32 + Y31 <= 6

_C150: - 2 A59 - B59 + X32 + Y31 = -6

_C151: X32 + Y33 <= 5

_C152: - 2 A60 - B60 + X32 + Y33 = -5

_C153: X28 + X34 + Y33 <= 5

_C154: - 2 A61 - B61 + X28 + X34 + Y33 = -5

_C155: X34 + Y35 <= 3

_C156: - 2 A62 - B62 + X34 + Y35 = -3

_C157: X36 + Y35 <= 3

_C158: - 2 A63 - B63 + X36 + Y35 = -3

_C159: X36 + Y37 <= 3

_C160: - 2 A64 - B64 + X36 + Y37 = -3

_C161: X38 + Y37 <= 3

_C162: - 2 A65 - B65 + X38 + Y37 = -3

_C163: X38 + Y39 <= 3

_C164: - 2 A66 - B66 + X38 + Y39 = -3

_C165: X40 + Y39 <= 3

_C166: - 2 A67 - B67 + X40 + Y39 = -3

_C167: X40 + Y41 <= 2

_C168: - 2 A68 - B68 + X40 + Y41 = -2

_C169: - 2 A69 - B69 - Y41 = -2

_C170: - 2 A46 - B46 - Y21 = -2

VARIABLES
0 <= A14 Integer
0 <= A15 Integer
0 <= A16 Integer
0 <= A17 Integer
0 <= A18 Integer
0 <= A19 Integer
0 <= A20 Integer
0 <= A21 Integer
0 <= A22 Integer
0 <= A23 Integer
0 <= A24 Integer
0 <= A25 Integer
0 <= A26 Integer
0 <= A27 Integer
0 <= A46 Integer
0 <= A47 Integer
0 <= A48 Integer
0 <= A49 Integer
0 <= A50 Integer
0 <= A51 Integer
0 <= A52 Integer
0 <= A53 Integer
0 <= A54 Integer
0 <= A55 Integer
0 <= A56 Integer
0 <= A57 Integer
0 <= A58 Integer
0 <= A59 Integer
0 <= A60 Integer
0 <= A61 Integer
0 <= A62 Integer
0 <= A63 Integer
0 <= A64 Integer
0 <= A65 Integer
0 <= A66 Integer
0 <= A67 Integer
0 <= A68 Integer
0 <= A69 Integer
0 <= B14 <= 1 Integer
0 <= B15 <= 1 Integer
0 <= B16 <= 1 Integer
0 <= B17 <= 1 Integer
0 <= B18 <= 1 Integer
0 <= B19 <= 1 Integer
0 <= B20 <= 1 Integer
0 <= B21 <= 1 Integer
0 <= B22 <= 1 Integer
0 <= B23 <= 1 Integer
0 <= B24 <= 1 Integer
0 <= B25 <= 1 Integer
0 <= B26 <= 1 Integer
0 <= B27 <= 1 Integer
0 <= B46 <= 1 Integer
0 <= B47 <= 1 Integer
0 <= B48 <= 1 Integer
0 <= B49 <= 1 Integer
0 <= B50 <= 1 Integer
0 <= B51 <= 1 Integer
0 <= B52 <= 1 Integer
0 <= B53 <= 1 Integer
0 <= B54 <= 1 Integer
0 <= B55 <= 1 Integer
0 <= B56 <= 1 Integer
0 <= B57 <= 1 Integer
0 <= B58 <= 1 Integer
0 <= B59 <= 1 Integer
0 <= B60 <= 1 Integer
0 <= B61 <= 1 Integer
0 <= B62 <= 1 Integer
0 <= B63 <= 1 Integer
0 <= B64 <= 1 Integer
0 <= B65 <= 1 Integer
0 <= B66 <= 1 Integer
0 <= B67 <= 1 Integer
0 <= B68 <= 1 Integer
0 <= B69 <= 1 Integer
0 <= T14 <= 1 Integer
0 <= T16 <= 1 Integer
0 <= T20 <= 1 Integer
0 <= T28 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= T42 <= 1 Integer
0 <= T43 <= 1 Integer
0 <= T7 <= 1 Integer
0 <= X1 Integer
0 <= X11 Integer
0 <= X13 Integer
0 <= X14 Integer
0 <= X16 Integer
0 <= X18 Integer
0 <= X19 Integer
0 <= X20 Integer
0 <= X23 Integer
0 <= X25 Integer
0 <= X27 Integer
0 <= X28 Integer
0 <= X3 Integer
0 <= X30 Integer
0 <= X32 Integer
0 <= X34 Integer
0 <= X36 Integer
0 <= X38 Integer
0 <= X4 Integer
0 <= X40 Integer
0 <= X42 Integer
0 <= X43 Integer
0 <= X6 Integer
0 <= X7 Integer
0 <= X9 Integer
Y0 free Integer
Y10 free Integer
Y12 free Integer
Y15 free Integer
Y17 free Integer
Y2 free Integer
Y21 free Integer
Y22 free Integer
Y24 free Integer
Y26 free Integer
Y29 free Integer
Y31 free Integer
Y33 free Integer
Y35 free Integer
Y37 free Integer
Y39 free Integer
Y41 free Integer
Y5 free Integer
Y8 free Integer
Z0 free Integer
Z10 free Integer
Z12 free Integer
Z15 free Integer
Z17 free Integer
Z2 free Integer
Z21 free Integer
Z22 free Integer
Z24 free Integer
Z26 free Integer
Z29 free Integer
Z31 free Integer
Z33 free Integer
Z35 free Integer
Z37 free Integer
Z39 free Integer
Z41 free Integer
Z5 free Integer
Z8 free Integer

Optimal
[A14, A15, A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A26, A27, A46, A47, A48, A49, A50, A51, A52, A53, A54, A55, A56, A57, A58, A59, A60, A61, A62, A63, A64, A65, A66, A67, A68, A69, B14, B15, B16, B17, B18, B19, B20, B21, B22, B23, B24, B25, B26, B27, B46, B47, B48, B49, B50, B51, B52, B53, B54, B55, B56, B57, B58, B59, B60, B61, B62, B63, B64, B65, B66, B67, B68, B69, T14, T16, T20, T28, T3, T42, T43, T7, X1, X11, X13, X14, X16, X18, X19, X20, X23, X25, X27, X28, X3, X30, X32, X34, X36, X38, X4, X40, X42, X43, X6, X7, X9, Y0, Y10, Y12, Y15, Y17, Y2, Y21, Y22, Y24, Y26, Y29, Y31, Y33, Y35, Y37, Y39, Y41, Y5, Y8, Z0, Z10, Z12, Z15, Z17, Z2, Z21, Z22, Z24, Z26, Z29, Z31, Z33, Z35, Z37, Z39, Z41, Z5, Z8]
15 16 2.0 R
23 24 2.0 R
25 26 1.0 R
25 48 1.0 SV
26 49 1.0 SV
49 50 1.0 R
47 48 1.0 R
47 50 1.0 SV
51 52 2.0 R
53 54 3.0 R
55 56 1.0 R
55 61 2.0 SV
16 17 1.0 SV
57 58 5.0 R
59 60 5.0 R
61 62 3.0 R
63 64 3.0 R
65 66 3.0 R
17 18 2.0 R
67 68 2.0 R
22 22 1.0 SV
56 56 2.0 SV
19 20 1.0 R
19 23 1.0 SV
21 22 1.0 R
A14 = 1.0
A15 = 2.0
A16 = 3.0
A17 = 3.0
A18 = 2.0
A19 = 2.0
A20 = 2.0
A21 = 2.0
A22 = 3.0
A23 = 3.0
A24 = 2.0
A25 = 2.0
A26 = 2.0
A27 = 1.0
A46 = 1.0
A47 = 2.0
A48 = 2.0
A49 = 2.0
A50 = 2.0
A51 = 2.0
A52 = 2.0
A53 = 3.0
A54 = 3.0
A55 = 3.0
A56 = 5.0
A57 = 5.0
A58 = 5.0
A59 = 5.0
A60 = 5.0
A61 = 5.0
A62 = 3.0
A63 = 3.0
A64 = 3.0
A65 = 3.0
A66 = 3.0
A67 = 2.0
A68 = 2.0
A69 = 1.0
B14 = 0.0
B15 = 0.0
B16 = 0.0
B17 = 0.0
B18 = 0.0
B19 = 0.0
B20 = 0.0
B21 = 0.0
B22 = 0.0
B23 = 0.0
B24 = 0.0
B25 = 0.0
B26 = 0.0
B27 = 0.0
B46 = 0.0
B47 = 0.0
B48 = 0.0
B49 = 0.0
B50 = 0.0
B51 = 0.0
B52 = 1.0
B53 = 0.0
B54 = 0.0
B55 = 0.0
B56 = 0.0
B57 = 0.0
B58 = 1.0
B59 = 1.0
B60 = 0.0
B61 = 0.0
B62 = 0.0
B63 = 0.0
B64 = 0.0
B65 = 0.0
B66 = 0.0
B67 = 1.0
B68 = 0.0
B69 = 0.0
T14 = 1.0
T16 = 1.0
T20 = 1.0
T28 = 1.0
T3 = 1.0
T42 = 1.0
T43 = 1.0
T7 = 1.0
X1 = 2.0
X11 = 2.0
X13 = 1.0
X14 = 1.0
X16 = 1.0
X18 = 1.0
X19 = 1.0
X20 = 1.0
X23 = 2.0
X25 = 3.0
X27 = 1.0
X28 = 2.0
X3 = 1.0
X30 = 5.0
X32 = 5.0
X34 = 3.0
X36 = 3.0
X38 = 3.0
X4 = 2.0
X40 = 2.0
X42 = 1.0
X43 = 2.0
X6 = 1.0
X7 = 1.0
X9 = 1.0
Y0 = 0.0
Y10 = 0.0
Y12 = 0.0
Y15 = 0.0
Y17 = 0.0
Y2 = 0.0
Y21 = 0.0
Y22 = 0.0
Y24 = 0.0
Y26 = 0.0
Y29 = 0.0
Y31 = 0.0
Y33 = 0.0
Y35 = 0.0
Y37 = 0.0
Y39 = 0.0
Y41 = 0.0
Y5 = 0.0
Y8 = 1.0
Z0 = 0.0
Z10 = 0.0
Z12 = 0.0
Z15 = 0.0
Z17 = 0.0
Z2 = 0.0
Z21 = 0.0
Z22 = 0.0
Z24 = 0.0
Z26 = 0.0
Z29 = 0.0
Z31 = 0.0
Z33 = 0.0
Z35 = 0.0
Z37 = 0.0
Z39 = 0.0
Z41 = 0.0
Z5 = 0.0
Z8 = 1.0
-76.0 Objective Answer
Siavash [(28, 29, 2, 'S')]
Y0 (28, 29, 2, 'S')
A28 A28
B28 B28
A29 A29
B29 B29
obj -2*Y0 + 4
Sv_sum 0
CN_tune 234*Z0
obj B28 + B29 - 20*Y0 + 2340*Z0 + 40
Problem:
MINIMIZE
1*B28 + 1*B29 + -20*Y0 + 2340*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A28 - B28 - Y0 = -2

_C5: - 2 A29 - B29 - Y0 = -2

VARIABLES
0 <= A28 Integer
0 <= A29 Integer
0 <= B28 <= 1 Integer
0 <= B29 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A28, A29, B28, B29, Y0, Z0]
A28 = 1.0
A29 = 1.0
B28 = 0.0
B29 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(30, 31, 2, 'S'), (31, 32, 0, 'R'), (32, 33, 1, 'S'), (33, 34, 0, 'R'), (34, 35, 2, 'S'), (35, 36, 0, 'R'), (36, 37, 1, 'S'), (37, 38, 0, 'R'), (38, 39, 1, 'S'), (39, 40, 0, 'R'), (40, 41, 2, 'S')]
Y0 (30, 31, 2, 'S')
X1 (31, 32, 0, 'R')
Y2 (32, 33, 1, 'S')
X3 (33, 34, 0, 'R')
Y4 (34, 35, 2, 'S')
X5 (35, 36, 0, 'R')
Y6 (36, 37, 1, 'S')
X7 (37, 38, 0, 'R')
Y8 (38, 39, 1, 'S')
X9 (39, 40, 0, 'R')
Y10 (40, 41, 2, 'S')
A30 A30
B30 B30
A31 A31
B31 B31
A32 A32
B32 B32
A33 A33
B33 B33
A34 A34
B34 B34
A35 A35
B35 B35
A36 A36
B36 B36
A37 A37
B37 B37
A38 A38
B38 B38
A39 A39
B39 B39
A40 A40
B40 B40
A41 A41
B41 B41
obj -2*X1 - 2*X3 - 2*X5 - 2*X7 - 2*X9 - 2*Y0 - 2*Y10 - 2*Y2 - 2*Y4 - 2*Y6 - 2*Y8 + 18
Sv_sum 0
CN_tune 4*Z0 + 4*Z10 + 60*Z2 + 2*Z4 + 30*Z6 + 138*Z8
obj B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 + B38 + B39 + B40 + B41 - 20*X1 - 20*X3 - 20*X5 - 20*X7 - 20*X9 - 20*Y0 - 20*Y10 - 20*Y2 - 20*Y4 - 20*Y6 - 20*Y8 + 40*Z0 + 40*Z10 + 600*Z2 + 20*Z4 + 300*Z6 + 1380*Z8 + 180
Problem:
MINIMIZE
1*B30 + 1*B31 + 1*B32 + 1*B33 + 1*B34 + 1*B35 + 1*B36 + 1*B37 + 1*B38 + 1*B39 + 1*B40 + 1*B41 + -20*X1 + -20*X3 + -20*X5 + -20*X7 + -20*X9 + -20*Y0 + -20*Y10 + -20*Y2 + -20*Y4 + -20*Y6 + -20*Y8 + 40*Z0 + 40*Z10 + 600*Z2 + 20*Z4 + 300*Z6 + 1380*Z8 + 180
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: Y4 + Z4 >= 0

_C9: - Y4 + Z4 >= 0

_C10: Z4 <= 1

_C11: Y6 + Z6 >= 0

_C12: - Y6 + Z6 >= 0

_C13: Z6 <= 1

_C14: X7 >= 1

_C15: Y8 + Z8 >= 0

_C16: - Y8 + Z8 >= 0

_C17: Z8 <= 1

_C18: X9 >= 1

_C19: Y10 + Z10 >= 0

_C20: - Y10 + Z10 >= 0

_C21: Z10 <= 1

_C22: - 2 A30 - B30 - Y0 = -2

_C23: X1 + Y0 <= 2

_C24: - 2 A31 - B31 + X1 + Y0 = -2

_C25: X1 + Y2 <= 1

_C26: - 2 A32 - B32 + X1 + Y2 = -1

_C27: X3 + Y2 <= 1

_C28: - 2 A33 - B33 + X3 + Y2 = -1

_C29: X3 + Y4 <= 2

_C30: - 2 A34 - B34 + X3 + Y4 = -2

_C31: X5 + Y4 <= 2

_C32: - 2 A35 - B35 + X5 + Y4 = -2

_C33: X5 + Y6 <= 1

_C34: - 2 A36 - B36 + X5 + Y6 = -1

_C35: X7 + Y6 <= 1

_C36: - 2 A37 - B37 + X7 + Y6 = -1

_C37: X7 + Y8 <= 1

_C38: - 2 A38 - B38 + X7 + Y8 = -1

_C39: X9 + Y8 <= 1

_C40: - 2 A39 - B39 + X9 + Y8 = -1

_C41: X9 + Y10 <= 2

_C42: - 2 A40 - B40 + X9 + Y10 = -2

_C43: - 2 A41 - B41 - Y10 = -2

VARIABLES
0 <= A30 Integer
0 <= A31 Integer
0 <= A32 Integer
0 <= A33 Integer
0 <= A34 Integer
0 <= A35 Integer
0 <= A36 Integer
0 <= A37 Integer
0 <= A38 Integer
0 <= A39 Integer
0 <= A40 Integer
0 <= A41 Integer
0 <= B30 <= 1 Integer
0 <= B31 <= 1 Integer
0 <= B32 <= 1 Integer
0 <= B33 <= 1 Integer
0 <= B34 <= 1 Integer
0 <= B35 <= 1 Integer
0 <= B36 <= 1 Integer
0 <= B37 <= 1 Integer
0 <= B38 <= 1 Integer
0 <= B39 <= 1 Integer
0 <= B40 <= 1 Integer
0 <= B41 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X5 Integer
0 <= X7 Integer
0 <= X9 Integer
Y0 free Integer
Y10 free Integer
Y2 free Integer
Y4 free Integer
Y6 free Integer
Y8 free Integer
Z0 free Integer
Z10 free Integer
Z2 free Integer
Z4 free Integer
Z6 free Integer
Z8 free Integer

Optimal
[A30, A31, A32, A33, A34, A35, A36, A37, A38, A39, A40, A41, B30, B31, B32, B33, B34, B35, B36, B37, B38, B39, B40, B41, X1, X3, X5, X7, X9, Y0, Y10, Y2, Y4, Y6, Y8, Z0, Z10, Z2, Z4, Z6, Z8]
31 32 1.0 R
33 34 1.0 R
35 36 1.0 R
37 38 1.0 R
39 40 1.0 R
A30 = 1.0
A31 = 1.0
A32 = 1.0
A33 = 1.0
A34 = 2.0
A35 = 2.0
A36 = 1.0
A37 = 1.0
A38 = 1.0
A39 = 1.0
A40 = 1.0
A41 = 1.0
B30 = 0.0
B31 = 1.0
B32 = 0.0
B33 = 0.0
B34 = 0.0
B35 = 0.0
B36 = 0.0
B37 = 0.0
B38 = 0.0
B39 = 0.0
B40 = 1.0
B41 = 0.0
X1 = 1.0
X3 = 1.0
X5 = 1.0
X7 = 1.0
X9 = 1.0
Y0 = 0.0
Y10 = 0.0
Y2 = 0.0
Y4 = 1.0
Y6 = 0.0
Y8 = 0.0
Z0 = 0.0
Z10 = 0.0
Z2 = 0.0
Z4 = 1.0
Z6 = 0.0
Z8 = 0.0
82.0 Objective Answer
Siavash [(42, 43, 2, 'S'), (43, 44, 0, 'R'), (43, 45, 0, 'SV'), (44, 45, 3, 'S'), (44, 44, 0, 'SV')]
Y0 (42, 43, 2, 'S')
X1 (43, 44, 0, 'R')
X2 (43, 45, 0, 'SV')
Y3 (44, 45, 3, 'S')
X4 (44, 44, 0, 'SV')
A42 A42
B42 B42
A43 A43
B43 B43
A44 A44
B44 B44
A45 A45
B45 B45
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 + 10
Sv_sum T2 + T4
CN_tune 136*Z0 + 6*Z3
obj B42 + B43 + B44 + B45 - 10*T2 - 10*T4 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 + 1360*Z0 + 60*Z3 + 100
Problem:
MINIMIZE
1*B42 + 1*B43 + 1*B44 + 1*B45 + -10*T2 + -10*T4 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + 1360*Z0 + 60*Z3 + 100
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: - 2 A42 - B42 - Y0 = -2

_C15: X1 + X2 + Y0 <= 2

_C16: - 2 A43 - B43 + X1 + X2 + Y0 = -2

_C17: X1 + 2 X4 + Y3 <= 3

_C18: - 2 A44 - B44 + X1 + 2 X4 + Y3 = -3

_C19: X2 + Y3 <= 3

_C20: - 2 A45 - B45 + X2 + Y3 = -3

VARIABLES
0 <= A42 Integer
0 <= A43 Integer
0 <= A44 Integer
0 <= A45 Integer
0 <= B42 <= 1 Integer
0 <= B43 <= 1 Integer
0 <= B44 <= 1 Integer
0 <= B45 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Z0 free Integer
Z3 free Integer

Optimal
[A42, A43, A44, A45, B42, B43, B44, B45, T2, T4, X1, X2, X4, Y0, Y3, Z0, Z3]
43 44 1.0 R
43 45 1.0 SV
44 44 1.0 SV
A42 = 1.0
A43 = 2.0
A44 = 3.0
A45 = 2.0
B42 = 0.0
B43 = 0.0
B44 = 0.0
B45 = 0.0
T2 = 1.0
T4 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
Y0 = 0.0
Y3 = 0.0
Z0 = 0.0
Z3 = 0.0
20.0 Objective Answer
Siavash [(70, 71, 2, 'S')]
Y0 (70, 71, 2, 'S')
A70 A70
B70 B70
A71 A71
B71 B71
obj -2*Y0 + 4
Sv_sum 0
CN_tune 180*Z0
obj B70 + B71 - 20*Y0 + 1800*Z0 + 40
Problem:
MINIMIZE
1*B70 + 1*B71 + -20*Y0 + 1800*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A70 - B70 - Y0 = -2

_C5: - 2 A71 - B71 - Y0 = -2

VARIABLES
0 <= A70 Integer
0 <= A71 Integer
0 <= B70 <= 1 Integer
0 <= B71 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A70, A71, B70, B71, Y0, Z0]
A70 = 1.0
A71 = 1.0
B70 = 0.0
B71 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(72, 73, 2, 'S')]
Y0 (72, 73, 2, 'S')
A72 A72
B72 B72
A73 A73
B73 B73
obj -2*Y0 + 4
Sv_sum 0
CN_tune 168*Z0
obj B72 + B73 - 20*Y0 + 1680*Z0 + 40
Problem:
MINIMIZE
1*B72 + 1*B73 + -20*Y0 + 1680*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A72 - B72 - Y0 = -2

_C5: - 2 A73 - B73 - Y0 = -2

VARIABLES
0 <= A72 Integer
0 <= A73 Integer
0 <= B72 <= 1 Integer
0 <= B73 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A72, A73, B72, B73, Y0, Z0]
A72 = 1.0
A73 = 1.0
B72 = 0.0
B73 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(75, 74, 2, 'S'), (75, 76, 0, 'R'), (75, 77, 0, 'SV'), (77, 76, 2, 'S'), (76, 78, 0, 'SV'), (77, 78, 0, 'R'), (78, 79, 2, 'S')]
Y0 (75, 74, 2, 'S')
X1 (75, 76, 0, 'R')
X2 (75, 77, 0, 'SV')
Y3 (77, 76, 2, 'S')
X4 (76, 78, 0, 'SV')
X5 (77, 78, 0, 'R')
Y6 (78, 79, 2, 'S')
A74 A74
B74 B74
A75 A75
B75 B75
A76 A76
B76 B76
A77 A77
B77 B77
A78 A78
B78 B78
A79 A79
B79 B79
obj -2*X1 - 2*X2 - 2*X4 - 2*X5 - 2*Y0 - 2*Y3 - 2*Y6 + 12
Sv_sum T2 + T4
CN_tune 20*Z0 + 2*Z3 + 92*Z6
obj B74 + B75 + B76 + B77 + B78 + B79 - 10*T2 - 10*T4 - 20*X1 - 20*X2 - 20*X4 - 20*X5 - 20*Y0 - 20*Y3 - 20*Y6 + 200*Z0 + 20*Z3 + 920*Z6 + 120
Problem:
MINIMIZE
1*B74 + 1*B75 + 1*B76 + 1*B77 + 1*B78 + 1*B79 + -10*T2 + -10*T4 + -20*X1 + -20*X2 + -20*X4 + -20*X5 + -20*Y0 + -20*Y3 + -20*Y6 + 200*Z0 + 20*Z3 + 920*Z6 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: - 2 A74 - B74 - Y0 = -2

_C19: X1 + X2 + Y0 <= 2

_C20: - 2 A75 - B75 + X1 + X2 + Y0 = -2

_C21: X1 + X4 + Y3 <= 2

_C22: - 2 A76 - B76 + X1 + X4 + Y3 = -2

_C23: X2 + X5 + Y3 <= 2

_C24: - 2 A77 - B77 + X2 + X5 + Y3 = -2

_C25: X4 + X5 + Y6 <= 2

_C26: - 2 A78 - B78 + X4 + X5 + Y6 = -2

_C27: - 2 A79 - B79 - Y6 = -2

VARIABLES
0 <= A74 Integer
0 <= A75 Integer
0 <= A76 Integer
0 <= A77 Integer
0 <= A78 Integer
0 <= A79 Integer
0 <= B74 <= 1 Integer
0 <= B75 <= 1 Integer
0 <= B76 <= 1 Integer
0 <= B77 <= 1 Integer
0 <= B78 <= 1 Integer
0 <= B79 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
Y0 free Integer
Y3 free Integer
Y6 free Integer
Z0 free Integer
Z3 free Integer
Z6 free Integer

Optimal
[A74, A75, A76, A77, A78, A79, B74, B75, B76, B77, B78, B79, T2, T4, X1, X2, X4, X5, Y0, Y3, Y6, Z0, Z3, Z6]
75 76 1.0 R
75 77 1.0 SV
76 78 1.0 SV
77 78 1.0 R
A74 = 1.0
A75 = 2.0
A76 = 2.0
A77 = 2.0
A78 = 2.0
A79 = 1.0
B74 = 0.0
B75 = 0.0
B76 = 0.0
B77 = 0.0
B78 = 0.0
B79 = 0.0
T2 = 1.0
T4 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
X5 = 1.0
Y0 = 0.0
Y3 = 0.0
Y6 = 0.0
Z0 = 0.0
Z3 = 0.0
Z6 = 0.0
20.0 Objective Answer
Siavash [(80, 81, 2, 'S')]
Y0 (80, 81, 2, 'S')
A80 A80
B80 B80
A81 A81
B81 B81
obj -2*Y0 + 4
Sv_sum 0
CN_tune 168*Z0
obj B80 + B81 - 20*Y0 + 1680*Z0 + 40
Problem:
MINIMIZE
1*B80 + 1*B81 + -20*Y0 + 1680*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A80 - B80 - Y0 = -2

_C5: - 2 A81 - B81 - Y0 = -2

VARIABLES
0 <= A80 Integer
0 <= A81 Integer
0 <= B80 <= 1 Integer
0 <= B81 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A80, A81, B80, B81, Y0, Z0]
A80 = 1.0
A81 = 1.0
B80 = 0.0
B81 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(82, 83, 2, 'S')]
Y0 (82, 83, 2, 'S')
A82 A82
B82 B82
A83 A83
B83 B83
obj -2*Y0 + 4
Sv_sum 0
CN_tune 162*Z0
obj B82 + B83 - 20*Y0 + 1620*Z0 + 40
Problem:
MINIMIZE
1*B82 + 1*B83 + -20*Y0 + 1620*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A82 - B82 - Y0 = -2

_C5: - 2 A83 - B83 - Y0 = -2

VARIABLES
0 <= A82 Integer
0 <= A83 Integer
0 <= B82 <= 1 Integer
0 <= B83 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A82, A83, B82, B83, Y0, Z0]
A82 = 1.0
A83 = 1.0
B82 = 0.0
B83 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(85, 84, 2, 'S'), (85, 86, 0, 'R'), (86, 91, 0, 'SV'), (86, 87, 2, 'S'), (91, 90, 2, 'S'), (91, 92, 0, 'R'), (89, 90, 0, 'R'), (88, 89, 3, 'S'), (87, 88, 0, 'R'), (93, 92, 2, 'S'), (93, 114, 0, 'SV'), (93, 94, 0, 'R'), (113, 114, 0, 'R'), (115, 114, 2, 'S'), (113, 112, 2, 'S'), (113, 116, 0, 'SV'), (111, 112, 0, 'R'), (109, 111, 0, 'SV'), (111, 110, 2, 'S'), (109, 108, 2, 'S'), (109, 110, 0, 'R'), (115, 116, 0, 'R'), (116, 117, 2, 'S'), (94, 115, 0, 'SV'), (94, 95, 2, 'S')]
Y0 (85, 84, 2, 'S')
X1 (85, 86, 0, 'R')
X2 (86, 91, 0, 'SV')
Y3 (86, 87, 2, 'S')
Y4 (91, 90, 2, 'S')
X5 (91, 92, 0, 'R')
X6 (89, 90, 0, 'R')
Y7 (88, 89, 3, 'S')
X8 (87, 88, 0, 'R')
Y9 (93, 92, 2, 'S')
X10 (93, 114, 0, 'SV')
X11 (93, 94, 0, 'R')
X12 (113, 114, 0, 'R')
Y13 (115, 114, 2, 'S')
Y14 (113, 112, 2, 'S')
X15 (113, 116, 0, 'SV')
X16 (111, 112, 0, 'R')
X17 (109, 111, 0, 'SV')
Y18 (111, 110, 2, 'S')
Y19 (109, 108, 2, 'S')
X20 (109, 110, 0, 'R')
X21 (115, 116, 0, 'R')
Y22 (116, 117, 2, 'S')
X23 (94, 115, 0, 'SV')
Y24 (94, 95, 2, 'S')
A84 A84
B84 B84
A85 A85
B85 B85
A86 A86
B86 B86
A91 A91
B91 B91
A90 A90
B90 B90
A89 A89
B89 B89
A88 A88
B88 B88
A87 A87
B87 B87
A92 A92
B92 B92
A93 A93
B93 B93
A114 A114
B114 B114
A113 A113
B113 B113
A112 A112
B112 B112
A111 A111
B111 B111
A109 A109
B109 B109
A108 A108
B108 B108
A110 A110
B110 B110
A116 A116
B116 B116
A115 A115
B115 B115
A94 A94
B94 B94
A95 A95
B95 B95
A117 A117
B117 B117
obj -2*X1 - 2*X10 - 2*X11 - 2*X12 - 2*X15 - 2*X16 - 2*X17 - 2*X2 - 2*X20 - 2*X21 - 2*X23 - 2*X5 - 2*X6 - 2*X8 - 2*Y0 - 2*Y13 - 2*Y14 - 2*Y18 - 2*Y19 - 2*Y22 - 2*Y24 - 2*Y3 - 2*Y4 - 2*Y7 - 2*Y9 + 46
Sv_sum 8*T10 + T15 + T17 + T2 + 8*T23
CN_tune 8*Z0 + 4*Z13 + 14*Z14 + 2*Z18 + 20*Z19 + 28*Z22 + 16*Z24 + 2*Z3 + 2*Z4 + 12*Z7 + 28*Z9
obj B108 + B109 + B110 + B111 + B112 + B113 + B114 + B115 + B116 + B117 + B84 + B85 + B86 + B87 + B88 + B89 + B90 + B91 + B92 + B93 + B94 + B95 - 80*T10 - 10*T15 - 10*T17 - 10*T2 - 80*T23 - 20*X1 - 20*X10 - 20*X11 - 20*X12 - 20*X15 - 20*X16 - 20*X17 - 20*X2 - 20*X20 - 20*X21 - 20*X23 - 20*X5 - 20*X6 - 20*X8 - 20*Y0 - 20*Y13 - 20*Y14 - 20*Y18 - 20*Y19 - 20*Y22 - 20*Y24 - 20*Y3 - 20*Y4 - 20*Y7 - 20*Y9 + 80*Z0 + 40*Z13 + 140*Z14 + 20*Z18 + 200*Z19 + 280*Z22 + 160*Z24 + 20*Z3 + 20*Z4 + 120*Z7 + 280*Z9 + 460
Problem:
MINIMIZE
1*B108 + 1*B109 + 1*B110 + 1*B111 + 1*B112 + 1*B113 + 1*B114 + 1*B115 + 1*B116 + 1*B117 + 1*B84 + 1*B85 + 1*B86 + 1*B87 + 1*B88 + 1*B89 + 1*B90 + 1*B91 + 1*B92 + 1*B93 + 1*B94 + 1*B95 + -80*T10 + -10*T15 + -10*T17 + -10*T2 + -80*T23 + -20*X1 + -20*X10 + -20*X11 + -20*X12 + -20*X15 + -20*X16 + -20*X17 + -20*X2 + -20*X20 + -20*X21 + -20*X23 + -20*X5 + -20*X6 + -20*X8 + -20*Y0 + -20*Y13 + -20*Y14 + -20*Y18 + -20*Y19 + -20*Y22 + -20*Y24 + -20*Y3 + -20*Y4 + -20*Y7 + -20*Y9 + 80*Z0 + 40*Z13 + 140*Z14 + 20*Z18 + 200*Z19 + 280*Z22 + 160*Z24 + 20*Z3 + 20*Z4 + 120*Z7 + 280*Z9 + 460
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: Y4 + Z4 >= 0

_C12: - Y4 + Z4 >= 0

_C13: Z4 <= 1

_C14: X5 >= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: X8 >= 1

_C20: Y9 + Z9 >= 0

_C21: - Y9 + Z9 >= 0

_C22: Z9 <= 1

_C23: - 10 T10 + X10 <= 0

_C24: - T10 + X10 >= 0

_C25: X10 >= 0

_C26: X11 >= 1

_C27: X12 >= 1

_C28: Y13 + Z13 >= 0

_C29: - Y13 + Z13 >= 0

_C30: Z13 <= 1

_C31: Y14 + Z14 >= 0

_C32: - Y14 + Z14 >= 0

_C33: Z14 <= 1

_C34: - 10 T15 + X15 <= 0

_C35: - T15 + X15 >= 0

_C36: X15 >= 0

_C37: X16 >= 1

_C38: - 10 T17 + X17 <= 0

_C39: - T17 + X17 >= 0

_C40: X17 >= 0

_C41: Y18 + Z18 >= 0

_C42: - Y18 + Z18 >= 0

_C43: Z18 <= 1

_C44: Y19 + Z19 >= 0

_C45: - Y19 + Z19 >= 0

_C46: Z19 <= 1

_C47: X20 >= 1

_C48: X21 >= 1

_C49: Y22 + Z22 >= 0

_C50: - Y22 + Z22 >= 0

_C51: Z22 <= 1

_C52: - 10 T23 + X23 <= 0

_C53: - T23 + X23 >= 0

_C54: X23 >= 0

_C55: Y24 + Z24 >= 0

_C56: - Y24 + Z24 >= 0

_C57: Z24 <= 1

_C58: - 2 A84 - B84 - Y0 = -2

_C59: X1 + Y0 <= 2

_C60: - 2 A85 - B85 + X1 + Y0 = -2

_C61: X1 + X2 + Y3 <= 2

_C62: - 2 A86 - B86 + X1 + X2 + Y3 = -2

_C63: X2 + X5 + Y4 <= 2

_C64: - 2 A91 - B91 + X2 + X5 + Y4 = -2

_C65: X6 + Y4 <= 2

_C66: - 2 A90 - B90 + X6 + Y4 = -2

_C67: X6 + Y7 <= 3

_C68: - 2 A89 - B89 + X6 + Y7 = -3

_C69: X8 + Y7 <= 3

_C70: - 2 A88 - B88 + X8 + Y7 = -3

_C71: X8 + Y3 <= 2

_C72: - 2 A87 - B87 + X8 + Y3 = -2

_C73: X5 + Y9 <= 2

_C74: - 2 A92 - B92 + X5 + Y9 = -2

_C75: X10 + X11 + Y9 <= 2

_C76: - 2 A93 - B93 + X10 + X11 + Y9 = -2

_C77: X10 + X12 + Y13 <= 2

_C78: - 2 A114 - B114 + X10 + X12 + Y13 = -2

_C79: X12 + X15 + Y14 <= 2

_C80: - 2 A113 - B113 + X12 + X15 + Y14 = -2

_C81: X16 + Y14 <= 2

_C82: - 2 A112 - B112 + X16 + Y14 = -2

_C83: X16 + X17 + Y18 <= 2

_C84: - 2 A111 - B111 + X16 + X17 + Y18 = -2

_C85: X17 + X20 + Y19 <= 2

_C86: - 2 A109 - B109 + X17 + X20 + Y19 = -2

_C87: - 2 A108 - B108 - Y19 = -2

_C88: X20 + Y18 <= 2

_C89: - 2 A110 - B110 + X20 + Y18 = -2

_C90: X15 + X21 + Y22 <= 2

_C91: - 2 A116 - B116 + X15 + X21 + Y22 = -2

_C92: X21 + X23 + Y13 <= 2

_C93: - 2 A115 - B115 + X21 + X23 + Y13 = -2

_C94: X11 + X23 + Y24 <= 2

_C95: - 2 A94 - B94 + X11 + X23 + Y24 = -2

_C96: - 2 A95 - B95 - Y24 = -2

_C97: - 2 A117 - B117 - Y22 = -2

VARIABLES
0 <= A108 Integer
0 <= A109 Integer
0 <= A110 Integer
0 <= A111 Integer
0 <= A112 Integer
0 <= A113 Integer
0 <= A114 Integer
0 <= A115 Integer
0 <= A116 Integer
0 <= A117 Integer
0 <= A84 Integer
0 <= A85 Integer
0 <= A86 Integer
0 <= A87 Integer
0 <= A88 Integer
0 <= A89 Integer
0 <= A90 Integer
0 <= A91 Integer
0 <= A92 Integer
0 <= A93 Integer
0 <= A94 Integer
0 <= A95 Integer
0 <= B108 <= 1 Integer
0 <= B109 <= 1 Integer
0 <= B110 <= 1 Integer
0 <= B111 <= 1 Integer
0 <= B112 <= 1 Integer
0 <= B113 <= 1 Integer
0 <= B114 <= 1 Integer
0 <= B115 <= 1 Integer
0 <= B116 <= 1 Integer
0 <= B117 <= 1 Integer
0 <= B84 <= 1 Integer
0 <= B85 <= 1 Integer
0 <= B86 <= 1 Integer
0 <= B87 <= 1 Integer
0 <= B88 <= 1 Integer
0 <= B89 <= 1 Integer
0 <= B90 <= 1 Integer
0 <= B91 <= 1 Integer
0 <= B92 <= 1 Integer
0 <= B93 <= 1 Integer
0 <= B94 <= 1 Integer
0 <= B95 <= 1 Integer
0 <= T10 <= 1 Integer
0 <= T15 <= 1 Integer
0 <= T17 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T23 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X11 Integer
0 <= X12 Integer
0 <= X15 Integer
0 <= X16 Integer
0 <= X17 Integer
0 <= X2 Integer
0 <= X20 Integer
0 <= X21 Integer
0 <= X23 Integer
0 <= X5 Integer
0 <= X6 Integer
0 <= X8 Integer
Y0 free Integer
Y13 free Integer
Y14 free Integer
Y18 free Integer
Y19 free Integer
Y22 free Integer
Y24 free Integer
Y3 free Integer
Y4 free Integer
Y7 free Integer
Y9 free Integer
Z0 free Integer
Z13 free Integer
Z14 free Integer
Z18 free Integer
Z19 free Integer
Z22 free Integer
Z24 free Integer
Z3 free Integer
Z4 free Integer
Z7 free Integer
Z9 free Integer

Optimal
[A108, A109, A110, A111, A112, A113, A114, A115, A116, A117, A84, A85, A86, A87, A88, A89, A90, A91, A92, A93, A94, A95, B108, B109, B110, B111, B112, B113, B114, B115, B116, B117, B84, B85, B86, B87, B88, B89, B90, B91, B92, B93, B94, B95, T10, T15, T17, T2, T23, X1, X10, X11, X12, X15, X16, X17, X2, X20, X21, X23, X5, X6, X8, Y0, Y13, Y14, Y18, Y19, Y22, Y24, Y3, Y4, Y7, Y9, Z0, Z13, Z14, Z18, Z19, Z22, Z24, Z3, Z4, Z7, Z9]
85 86 2.0 R
93 114 1.0 SV
93 94 1.0 R
113 114 1.0 R
113 116 1.0 SV
111 112 2.0 R
109 111 0.0 SV
86 91 0.0 SV
109 110 2.0 R
115 116 1.0 R
94 115 1.0 SV
91 92 2.0 R
89 90 2.0 R
87 88 2.0 R
A108 = 1.0
A109 = 2.0
A110 = 2.0
A111 = 2.0
A112 = 2.0
A113 = 2.0
A114 = 2.0
A115 = 2.0
A116 = 2.0
A117 = 1.0
A84 = 1.0
A85 = 2.0
A86 = 2.0
A87 = 2.0
A88 = 2.0
A89 = 2.0
A90 = 2.0
A91 = 2.0
A92 = 2.0
A93 = 2.0
A94 = 2.0
A95 = 1.0
B108 = 0.0
B109 = 0.0
B110 = 0.0
B111 = 0.0
B112 = 0.0
B113 = 0.0
B114 = 0.0
B115 = 0.0
B116 = 0.0
B117 = 0.0
B84 = 0.0
B85 = 0.0
B86 = 0.0
B87 = 0.0
B88 = 1.0
B89 = 1.0
B90 = 0.0
B91 = 0.0
B92 = 0.0
B93 = 0.0
B94 = 0.0
B95 = 0.0
T10 = 1.0
T15 = 1.0
T17 = 0.0
T2 = 0.0
T23 = 1.0
X1 = 2.0
X10 = 1.0
X11 = 1.0
X12 = 1.0
X15 = 1.0
X16 = 2.0
X17 = 0.0
X2 = 0.0
X20 = 2.0
X21 = 1.0
X23 = 1.0
X5 = 2.0
X6 = 2.0
X8 = 2.0
Y0 = 0.0
Y13 = 0.0
Y14 = 0.0
Y18 = 0.0
Y19 = 0.0
Y22 = 0.0
Y24 = 0.0
Y3 = 0.0
Y4 = 0.0
Y7 = 0.0
Y9 = 0.0
Z0 = 0.0
Z13 = 0.0
Z14 = 0.0
Z18 = 0.0
Z19 = 0.0
Z22 = 0.0
Z24 = 0.0
Z3 = 0.0
Z4 = 0.0
Z7 = 0.0
Z9 = 0.0
-68.0 Objective Answer
Siavash [(96, 97, 2, 'S'), (97, 98, 0, 'R'), (98, 99, 3, 'S'), (99, 100, 0, 'R'), (100, 101, 2, 'S'), (98, 98, 0, 'SV')]
Y0 (96, 97, 2, 'S')
X1 (97, 98, 0, 'R')
Y2 (98, 99, 3, 'S')
X3 (99, 100, 0, 'R')
Y4 (100, 101, 2, 'S')
X5 (98, 98, 0, 'SV')
A96 A96
B96 B96
A97 A97
B97 B97
A98 A98
B98 B98
A99 A99
B99 B99
A100 A100
B100 B100
A101 A101
B101 B101
obj -2*X1 - 2*X3 - 2*X5 - 2*Y0 - 2*Y2 - 2*Y4 + 14
Sv_sum T5
CN_tune 72*Z0 + 6*Z2 + 4*Z4
obj B100 + B101 + B96 + B97 + B98 + B99 - 10*T5 - 20*X1 - 20*X3 - 20*X5 - 20*Y0 - 20*Y2 - 20*Y4 + 720*Z0 + 60*Z2 + 40*Z4 + 140
Problem:
MINIMIZE
1*B100 + 1*B101 + 1*B96 + 1*B97 + 1*B98 + 1*B99 + -10*T5 + -20*X1 + -20*X3 + -20*X5 + -20*Y0 + -20*Y2 + -20*Y4 + 720*Z0 + 60*Z2 + 40*Z4 + 140
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: X3 >= 1

_C9: Y4 + Z4 >= 0

_C10: - Y4 + Z4 >= 0

_C11: Z4 <= 1

_C12: - 10 T5 + X5 <= 0

_C13: - T5 + X5 >= 0

_C14: X5 >= 0

_C15: - 2 A96 - B96 - Y0 = -2

_C16: X1 + Y0 <= 2

_C17: - 2 A97 - B97 + X1 + Y0 = -2

_C18: X1 + 2 X5 + Y2 <= 3

_C19: - 2 A98 - B98 + X1 + 2 X5 + Y2 = -3

_C20: X3 + Y2 <= 3

_C21: - 2 A99 - B99 + X3 + Y2 = -3

_C22: X3 + Y4 <= 2

_C23: - 2 A100 - B100 + X3 + Y4 = -2

_C24: - 2 A101 - B101 - Y4 = -2

VARIABLES
0 <= A100 Integer
0 <= A101 Integer
0 <= A96 Integer
0 <= A97 Integer
0 <= A98 Integer
0 <= A99 Integer
0 <= B100 <= 1 Integer
0 <= B101 <= 1 Integer
0 <= B96 <= 1 Integer
0 <= B97 <= 1 Integer
0 <= B98 <= 1 Integer
0 <= B99 <= 1 Integer
0 <= T5 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X5 Integer
Y0 free Integer
Y2 free Integer
Y4 free Integer
Z0 free Integer
Z2 free Integer
Z4 free Integer

Optimal
[A100, A101, A96, A97, A98, A99, B100, B101, B96, B97, B98, B99, T5, X1, X3, X5, Y0, Y2, Y4, Z0, Z2, Z4]
97 98 1.0 R
99 100 2.0 R
98 98 1.0 SV
A100 = 2.0
A101 = 1.0
A96 = 1.0
A97 = 1.0
A98 = 3.0
A99 = 2.0
B100 = 0.0
B101 = 0.0
B96 = 0.0
B97 = 1.0
B98 = 0.0
B99 = 1.0
T5 = 1.0
X1 = 1.0
X3 = 2.0
X5 = 1.0
Y0 = 0.0
Y2 = 0.0
Y4 = 0.0
Z0 = 0.0
Z2 = 0.0
Z4 = 0.0
52.0 Objective Answer
Siavash [(103, 102, 2, 'S'), (103, 104, 0, 'R'), (105, 104, 2, 'S'), (104, 106, 0, 'SV'), (105, 106, 0, 'R'), (106, 107, 2, 'S')]
Y0 (103, 102, 2, 'S')
X1 (103, 104, 0, 'R')
Y2 (105, 104, 2, 'S')
X3 (104, 106, 0, 'SV')
X4 (105, 106, 0, 'R')
Y5 (106, 107, 2, 'S')
A102 A102
B102 B102
A103 A103
B103 B103
A104 A104
B104 B104
A105 A105
B105 B105
A106 A106
B106 B106
A107 A107
B107 B107
obj -2*X1 - 2*X3 - 2*X4 - 2*Y0 - 2*Y2 - 2*Y5 + 12
Sv_sum T3
CN_tune 28*Z0 + 2*Z2 + 60*Z5
obj B102 + B103 + B104 + B105 + B106 + B107 - 10*T3 - 20*X1 - 20*X3 - 20*X4 - 20*Y0 - 20*Y2 - 20*Y5 + 280*Z0 + 20*Z2 + 600*Z5 + 120
Problem:
MINIMIZE
1*B102 + 1*B103 + 1*B104 + 1*B105 + 1*B106 + 1*B107 + -10*T3 + -20*X1 + -20*X3 + -20*X4 + -20*Y0 + -20*Y2 + -20*Y5 + 280*Z0 + 20*Z2 + 600*Z5 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A102 - B102 - Y0 = -2

_C16: X1 + Y0 <= 2

_C17: - 2 A103 - B103 + X1 + Y0 = -2

_C18: X1 + X3 + Y2 <= 2

_C19: - 2 A104 - B104 + X1 + X3 + Y2 = -2

_C20: X4 + Y2 <= 2

_C21: - 2 A105 - B105 + X4 + Y2 = -2

_C22: X3 + X4 + Y5 <= 2

_C23: - 2 A106 - B106 + X3 + X4 + Y5 = -2

_C24: - 2 A107 - B107 - Y5 = -2

VARIABLES
0 <= A102 Integer
0 <= A103 Integer
0 <= A104 Integer
0 <= A105 Integer
0 <= A106 Integer
0 <= A107 Integer
0 <= B102 <= 1 Integer
0 <= B103 <= 1 Integer
0 <= B104 <= 1 Integer
0 <= B105 <= 1 Integer
0 <= B106 <= 1 Integer
0 <= B107 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer

Optimal
[A102, A103, A104, A105, A106, A107, B102, B103, B104, B105, B106, B107, T3, X1, X3, X4, Y0, Y2, Y5, Z0, Z2, Z5]
103 104 2.0 R
104 106 0.0 SV
105 106 2.0 R
A102 = 1.0
A103 = 2.0
A104 = 2.0
A105 = 2.0
A106 = 2.0
A107 = 1.0
B102 = 0.0
B103 = 0.0
B104 = 0.0
B105 = 0.0
B106 = 0.0
B107 = 0.0
T3 = 0.0
X1 = 2.0
X3 = 0.0
X4 = 2.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
40.0 Objective Answer
Siavash [(118, 119, 2, 'S'), (119, 120, 0, 'R'), (120, 121, 3, 'S'), (120, 121, 0, 'SV'), (121, 122, 0, 'R'), (122, 123, 2, 'S')]
Y0 (118, 119, 2, 'S')
X1 (119, 120, 0, 'R')
Y2 (120, 121, 3, 'S')
X3 (120, 121, 0, 'SV')
X4 (121, 122, 0, 'R')
Y5 (122, 123, 2, 'S')
A118 A118
B118 B118
A119 A119
B119 B119
A120 A120
B120 B120
A121 A121
B121 B121
A122 A122
B122 B122
A123 A123
B123 B123
obj -2*X1 - 2*X3 - 2*X4 - 2*Y0 - 2*Y2 - 2*Y5 + 14
Sv_sum T3
CN_tune 12*Z0 + 6*Z2 + 56*Z5
obj B118 + B119 + B120 + B121 + B122 + B123 - 10*T3 - 20*X1 - 20*X3 - 20*X4 - 20*Y0 - 20*Y2 - 20*Y5 + 120*Z0 + 60*Z2 + 560*Z5 + 140
Problem:
MINIMIZE
1*B118 + 1*B119 + 1*B120 + 1*B121 + 1*B122 + 1*B123 + -10*T3 + -20*X1 + -20*X3 + -20*X4 + -20*Y0 + -20*Y2 + -20*Y5 + 120*Z0 + 60*Z2 + 560*Z5 + 140
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A118 - B118 - Y0 = -2

_C16: X1 + Y0 <= 2

_C17: - 2 A119 - B119 + X1 + Y0 = -2

_C18: X1 + X3 + Y2 <= 3

_C19: - 2 A120 - B120 + X1 + X3 + Y2 = -3

_C20: X3 + X4 + Y2 <= 3

_C21: - 2 A121 - B121 + X3 + X4 + Y2 = -3

_C22: X4 + Y5 <= 2

_C23: - 2 A122 - B122 + X4 + Y5 = -2

_C24: - 2 A123 - B123 - Y5 = -2

VARIABLES
0 <= A118 Integer
0 <= A119 Integer
0 <= A120 Integer
0 <= A121 Integer
0 <= A122 Integer
0 <= A123 Integer
0 <= B118 <= 1 Integer
0 <= B119 <= 1 Integer
0 <= B120 <= 1 Integer
0 <= B121 <= 1 Integer
0 <= B122 <= 1 Integer
0 <= B123 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer

Optimal
[A118, A119, A120, A121, A122, A123, B118, B119, B120, B121, B122, B123, T3, X1, X3, X4, Y0, Y2, Y5, Z0, Z2, Z5]
119 120 2.0 R
120 121 1.0 SV
121 122 2.0 R
A118 = 1.0
A119 = 2.0
A120 = 3.0
A121 = 3.0
A122 = 2.0
A123 = 1.0
B118 = 0.0
B119 = 0.0
B120 = 0.0
B121 = 0.0
B122 = 0.0
B123 = 0.0
T3 = 1.0
X1 = 2.0
X3 = 1.0
X4 = 2.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(124, 125, 2, 'S'), (125, 126, 0, 'R'), (126, 127, 3, 'S'), (126, 127, 0, 'SV'), (127, 128, 0, 'R'), (128, 129, 2, 'S')]
Y0 (124, 125, 2, 'S')
X1 (125, 126, 0, 'R')
Y2 (126, 127, 3, 'S')
X3 (126, 127, 0, 'SV')
X4 (127, 128, 0, 'R')
Y5 (128, 129, 2, 'S')
A124 A124
B124 B124
A125 A125
B125 B125
A126 A126
B126 B126
A127 A127
B127 B127
A128 A128
B128 B128
A129 A129
B129 B129
obj -2*X1 - 2*X3 - 2*X4 - 2*Y0 - 2*Y2 - 2*Y5 + 14
Sv_sum T3
CN_tune 4*Z0 + 12*Z2 + 60*Z5
obj B124 + B125 + B126 + B127 + B128 + B129 - 10*T3 - 20*X1 - 20*X3 - 20*X4 - 20*Y0 - 20*Y2 - 20*Y5 + 40*Z0 + 120*Z2 + 600*Z5 + 140
Problem:
MINIMIZE
1*B124 + 1*B125 + 1*B126 + 1*B127 + 1*B128 + 1*B129 + -10*T3 + -20*X1 + -20*X3 + -20*X4 + -20*Y0 + -20*Y2 + -20*Y5 + 40*Z0 + 120*Z2 + 600*Z5 + 140
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A124 - B124 - Y0 = -2

_C16: X1 + Y0 <= 2

_C17: - 2 A125 - B125 + X1 + Y0 = -2

_C18: X1 + X3 + Y2 <= 3

_C19: - 2 A126 - B126 + X1 + X3 + Y2 = -3

_C20: X3 + X4 + Y2 <= 3

_C21: - 2 A127 - B127 + X3 + X4 + Y2 = -3

_C22: X4 + Y5 <= 2

_C23: - 2 A128 - B128 + X4 + Y5 = -2

_C24: - 2 A129 - B129 - Y5 = -2

VARIABLES
0 <= A124 Integer
0 <= A125 Integer
0 <= A126 Integer
0 <= A127 Integer
0 <= A128 Integer
0 <= A129 Integer
0 <= B124 <= 1 Integer
0 <= B125 <= 1 Integer
0 <= B126 <= 1 Integer
0 <= B127 <= 1 Integer
0 <= B128 <= 1 Integer
0 <= B129 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer

Optimal
[A124, A125, A126, A127, A128, A129, B124, B125, B126, B127, B128, B129, T3, X1, X3, X4, Y0, Y2, Y5, Z0, Z2, Z5]
125 126 2.0 R
126 127 1.0 SV
127 128 2.0 R
A124 = 1.0
A125 = 2.0
A126 = 3.0
A127 = 3.0
A128 = 2.0
A129 = 1.0
B124 = 0.0
B125 = 0.0
B126 = 0.0
B127 = 0.0
B128 = 0.0
B129 = 0.0
T3 = 1.0
X1 = 2.0
X3 = 1.0
X4 = 2.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(130, 131, 2, 'S')]
Y0 (130, 131, 2, 'S')
A130 A130
B130 B130
A131 A131
B131 B131
obj -2*Y0 + 4
Sv_sum 0
CN_tune 72*Z0
obj B130 + B131 - 20*Y0 + 720*Z0 + 40
Problem:
MINIMIZE
1*B130 + 1*B131 + -20*Y0 + 720*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A130 - B130 - Y0 = -2

_C5: - 2 A131 - B131 - Y0 = -2

VARIABLES
0 <= A130 Integer
0 <= A131 Integer
0 <= B130 <= 1 Integer
0 <= B131 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A130, A131, B130, B131, Y0, Z0]
A130 = 1.0
A131 = 1.0
B130 = 0.0
B131 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(132, 133, 2, 'S'), (133, 134, 0, 'R'), (134, 138, 0, 'SV'), (134, 135, 3, 'S'), (137, 138, 0, 'R'), (138, 139, 2, 'S'), (137, 136, 2, 'S'), (135, 136, 0, 'R'), (135, 135, 0, 'SV')]
Y0 (132, 133, 2, 'S')
X1 (133, 134, 0, 'R')
X2 (134, 138, 0, 'SV')
Y3 (134, 135, 3, 'S')
X4 (137, 138, 0, 'R')
Y5 (138, 139, 2, 'S')
Y6 (137, 136, 2, 'S')
X7 (135, 136, 0, 'R')
X8 (135, 135, 0, 'SV')
A132 A132
B132 B132
A133 A133
B133 B133
A134 A134
B134 B134
A138 A138
B138 B138
A137 A137
B137 B137
A136 A136
B136 B136
A135 A135
B135 B135
A139 A139
B139 B139
obj -2*X1 - 2*X2 - 2*X4 - 2*X7 - 2*X8 - 2*Y0 - 2*Y3 - 2*Y5 - 2*Y6 + 18
Sv_sum T2 + T8
CN_tune 16*Z0 + 6*Z3 + 36*Z5 + 2*Z6
obj B132 + B133 + B134 + B135 + B136 + B137 + B138 + B139 - 10*T2 - 10*T8 - 20*X1 - 20*X2 - 20*X4 - 20*X7 - 20*X8 - 20*Y0 - 20*Y3 - 20*Y5 - 20*Y6 + 160*Z0 + 60*Z3 + 360*Z5 + 20*Z6 + 180
Problem:
MINIMIZE
1*B132 + 1*B133 + 1*B134 + 1*B135 + 1*B136 + 1*B137 + 1*B138 + 1*B139 + -10*T2 + -10*T8 + -20*X1 + -20*X2 + -20*X4 + -20*X7 + -20*X8 + -20*Y0 + -20*Y3 + -20*Y5 + -20*Y6 + 160*Z0 + 60*Z3 + 360*Z5 + 20*Z6 + 180
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: X7 >= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: - 2 A132 - B132 - Y0 = -2

_C23: X1 + Y0 <= 2

_C24: - 2 A133 - B133 + X1 + Y0 = -2

_C25: X1 + X2 + Y3 <= 3

_C26: - 2 A134 - B134 + X1 + X2 + Y3 = -3

_C27: X2 + X4 + Y5 <= 2

_C28: - 2 A138 - B138 + X2 + X4 + Y5 = -2

_C29: X4 + Y6 <= 2

_C30: - 2 A137 - B137 + X4 + Y6 = -2

_C31: X7 + Y6 <= 2

_C32: - 2 A136 - B136 + X7 + Y6 = -2

_C33: X7 + 2 X8 + Y3 <= 3

_C34: - 2 A135 - B135 + X7 + 2 X8 + Y3 = -3

_C35: - 2 A139 - B139 - Y5 = -2

VARIABLES
0 <= A132 Integer
0 <= A133 Integer
0 <= A134 Integer
0 <= A135 Integer
0 <= A136 Integer
0 <= A137 Integer
0 <= A138 Integer
0 <= A139 Integer
0 <= B132 <= 1 Integer
0 <= B133 <= 1 Integer
0 <= B134 <= 1 Integer
0 <= B135 <= 1 Integer
0 <= B136 <= 1 Integer
0 <= B137 <= 1 Integer
0 <= B138 <= 1 Integer
0 <= B139 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X7 Integer
0 <= X8 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Y6 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer
Z6 free Integer

Optimal
[A132, A133, A134, A135, A136, A137, A138, A139, B132, B133, B134, B135, B136, B137, B138, B139, T2, T8, X1, X2, X4, X7, X8, Y0, Y3, Y5, Y6, Z0, Z3, Z5, Z6]
133 134 2.0 R
134 138 1.0 SV
137 138 1.0 R
135 136 1.0 R
135 135 1.0 SV
A132 = 1.0
A133 = 2.0
A134 = 3.0
A135 = 3.0
A136 = 2.0
A137 = 2.0
A138 = 2.0
A139 = 1.0
B132 = 0.0
B133 = 0.0
B134 = 0.0
B135 = 0.0
B136 = 0.0
B137 = 0.0
B138 = 0.0
B139 = 0.0
T2 = 1.0
T8 = 1.0
X1 = 2.0
X2 = 1.0
X4 = 1.0
X7 = 1.0
X8 = 1.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Y6 = 1.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
Z6 = 1.0
40.0 Objective Answer
Siavash [(140, 141, 2, 'S')]
Y0 (140, 141, 2, 'S')
A140 A140
B140 B140
A141 A141
B141 B141
obj -2*Y0 + 4
Sv_sum 0
CN_tune 60*Z0
obj B140 + B141 - 20*Y0 + 600*Z0 + 40
Problem:
MINIMIZE
1*B140 + 1*B141 + -20*Y0 + 600*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A140 - B140 - Y0 = -2

_C5: - 2 A141 - B141 - Y0 = -2

VARIABLES
0 <= A140 Integer
0 <= A141 Integer
0 <= B140 <= 1 Integer
0 <= B141 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A140, A141, B140, B141, Y0, Z0]
A140 = 1.0
A141 = 1.0
B140 = 0.0
B141 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(142, 143, 2, 'S')]
Y0 (142, 143, 2, 'S')
A142 A142
B142 B142
A143 A143
B143 B143
obj -2*Y0 + 4
Sv_sum 0
CN_tune 66*Z0
obj B142 + B143 - 20*Y0 + 660*Z0 + 40
Problem:
MINIMIZE
1*B142 + 1*B143 + -20*Y0 + 660*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A142 - B142 - Y0 = -2

_C5: - 2 A143 - B143 - Y0 = -2

VARIABLES
0 <= A142 Integer
0 <= A143 Integer
0 <= B142 <= 1 Integer
0 <= B143 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A142, A143, B142, B143, Y0, Z0]
A142 = 1.0
A143 = 1.0
B142 = 0.0
B143 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(144, 145, 1, 'S')]
Y0 (144, 145, 1, 'S')
A144 A144
B144 B144
A145 A145
B145 B145
obj -2*Y0 + 2
Sv_sum 0
CN_tune 192*Z0
obj B144 + B145 - 20*Y0 + 1920*Z0 + 20
Problem:
MINIMIZE
1*B144 + 1*B145 + -20*Y0 + 1920*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A144 - B144 - Y0 = -1

_C5: - 2 A145 - B145 - Y0 = -1

VARIABLES
0 <= A144 Integer
0 <= A145 Integer
0 <= B144 <= 1 Integer
0 <= B145 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A144, A145, B144, B145, Y0, Z0]
A144 = 0.0
A145 = 0.0
B144 = 1.0
B145 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
Siavash [(146, 147, 1, 'S')]
Y0 (146, 147, 1, 'S')
A146 A146
B146 B146
A147 A147
B147 B147
obj -2*Y0 + 2
Sv_sum 0
CN_tune 72*Z0
obj B146 + B147 - 20*Y0 + 720*Z0 + 20
Problem:
MINIMIZE
1*B146 + 1*B147 + -20*Y0 + 720*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A146 - B146 - Y0 = -1

_C5: - 2 A147 - B147 - Y0 = -1

VARIABLES
0 <= A146 Integer
0 <= A147 Integer
0 <= B146 <= 1 Integer
0 <= B147 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A146, A147, B146, B147, Y0, Z0]
A146 = 0.0
A147 = 0.0
B146 = 1.0
B147 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
[0, 1, 2, 3, 4, 5, 6, 7]
[(0, 1, 3, 'S'), (1, 2, 3, 'R'), (2, 3, 3, 'S'), (3, 4, 3, 'R'), (4, 5, 3, 'S'), (5, 6, 2, 'R'), (6, 7, 2, 'S')]
Component [0, 1, 2, 3, 4, 5, 6, 7]
Component edges [(0, 1, 3, 'S'), (1, 2, 3, 'R'), (2, 3, 3, 'S'), (3, 4, 3, 'R'), (4, 5, 3, 'S'), (5, 6, 2, 'R'), (6, 7, 2, 'S')]
ODD vertices [0, 5]
TOUR
[0, 7]
all edges with dummy:  [(0, 1, 3, 'S'), (1, 2, 3, 'R'), (2, 3, 3, 'S'), (3, 4, 3, 'R'), (4, 5, 3, 'S'), (5, 6, 2, 'R'), (6, 7, 2, 'S')]
0 1 14453.0 3 H [1]
1 1 47096352.0 3 T [0, 2]
2 1 47098825.0 3 H [1, 3]
3 1 120052812.0 3 T [2, 4]
4 1 120059309.0 3 H [3, 5]
5 1 121608073.0 3 T [4, 6]
6 1 121608074 2 H [5, 7]
7 1 248943332 2 T [6]
Answer [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5]
[8, 9, 10, 11, 12, 13]
[(8, 9, 2, 'S'), (9, 10, 2, 'R'), (10, 11, 1, 'SV'), (10, 11, 3, 'S'), (11, 12, 2, 'R'), (12, 13, 2, 'S')]
Component [8, 9, 10, 11, 12, 13]
Component edges [(8, 9, 2, 'S'), (9, 10, 2, 'R'), (10, 11, 1, 'SV'), (10, 11, 3, 'S'), (11, 12, 2, 'R'), (12, 13, 2, 'S')]
ODD vertices []
TOUR
[8, 13]
paths_score 0 [[8, 9, 10, 11, 12, 13], [13, 12, 11, 10, 11, 10, 9, 8]]
paths_score 0 [[13, 12, 11, 10, 9, 8], [8, 9, 10, 11, 10, 11, 12, 13]]
all edges with dummy:  [(8, 9, 2, 'S'), (9, 10, 2, 'R'), (10, 11, 1, 'SV'), (10, 11, 3, 'S'), (11, 12, 2, 'R'), (12, 13, 2, 'S')]
8 2 15925 2 H [9]
9 2 105416603.0 2 T [8, 10]
10 2 105416604.0 3 H [9, 11]
11 2 109475870.0 3 T [10, 12]
12 2 109475871 2 H [11, 13]
13 2 242181356 2 T [12]
Answer [8, 9, 10, 11, 12, 13, 12, 11, 10, 11, 10, 9, 8]
[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 49, 48, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 46]
[(14, 15, 2, 'S'), (15, 16, 2, 'R'), (16, 17, 1, 'SV'), (16, 17, 3, 'S'), (17, 18, 2, 'R'), (19, 18, 2, 'S'), (19, 20, 1, 'R'), (19, 23, 1, 'SV'), (20, 21, 1, 'S'), (21, 22, 1, 'R'), (22, 23, 3, 'S'), (23, 24, 2, 'R'), (25, 24, 2, 'S'), (25, 26, 1, 'R'), (25, 48, 1, 'SV'), (26, 27, 2, 'S'), (26, 49, 1, 'SV'), (49, 48, 2, 'S'), (49, 50, 1, 'R'), (47, 48, 1, 'R'), (47, 50, 1, 'SV'), (47, 46, 2, 'S'), (50, 51, 2, 'S'), (51, 52, 2, 'R'), (52, 53, 3, 'S'), (53, 54, 3, 'R'), (54, 55, 3, 'S'), (55, 56, 1, 'R'), (55, 61, 2, 'SV'), (56, 57, 5, 'S'), (57, 58, 5, 'R'), (58, 59, 6, 'S'), (59, 60, 5, 'R'), (60, 61, 5, 'S'), (61, 62, 3, 'R'), (62, 63, 3, 'S'), (63, 64, 3, 'R'), (64, 65, 3, 'S'), (65, 66, 3, 'R'), (66, 67, 3, 'S'), (67, 68, 2, 'R'), (68, 69, 2, 'S'), (22, 22, 1, 'SV'), (56, 56, 2, 'SV')]
Component [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 49, 48, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 46]
Component edges [(14, 15, 2, 'S'), (15, 16, 2, 'R'), (16, 17, 1, 'SV'), (16, 17, 3, 'S'), (17, 18, 2, 'R'), (19, 18, 2, 'S'), (19, 20, 1, 'R'), (19, 23, 1, 'SV'), (20, 21, 1, 'S'), (21, 22, 1, 'R'), (22, 23, 3, 'S'), (23, 24, 2, 'R'), (25, 24, 2, 'S'), (25, 26, 1, 'R'), (25, 48, 1, 'SV'), (26, 27, 2, 'S'), (26, 49, 1, 'SV'), (49, 48, 2, 'S'), (49, 50, 1, 'R'), (47, 48, 1, 'R'), (47, 50, 1, 'SV'), (47, 46, 2, 'S'), (50, 51, 2, 'S'), (51, 52, 2, 'R'), (52, 53, 3, 'S'), (53, 54, 3, 'R'), (54, 55, 3, 'S'), (55, 56, 1, 'R'), (55, 61, 2, 'SV'), (56, 57, 5, 'S'), (57, 58, 5, 'R'), (58, 59, 6, 'S'), (59, 60, 5, 'R'), (60, 61, 5, 'S'), (61, 62, 3, 'R'), (62, 63, 3, 'S'), (63, 64, 3, 'R'), (64, 65, 3, 'S'), (65, 66, 3, 'R'), (66, 67, 3, 'S'), (67, 68, 2, 'R'), (68, 69, 2, 'S'), (22, 22, 1, 'SV'), (56, 56, 2, 'SV')]
ODD vertices [52, 58, 59, 67]
TOUR
[14, 27, 46, 69]
paths_score 20 [[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], [27, 26, 49, 48, 47, 46], [46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 55, 54, 53, 52, 58, 59, 60, 61, 55, 54, 53, 52, 51, 50, 49, 48, 25, 24, 23, 22, 22, 23, 19, 18, 17, 16, 17, 16, 15, 14]]
paths_score 20 [[27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14], [14, 15, 16, 17, 16, 17, 18, 19, 23, 22, 22, 23, 24, 25, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 55, 54, 53, 52, 58, 59, 60, 61, 55, 54, 53, 52, 51, 50, 47, 46], [46, 47, 48, 49, 26, 27]]
paths_score 20 [[46, 47, 48, 49, 26, 27], [27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14], [14, 15, 16, 17, 16, 17, 18, 19, 23, 22, 22, 23, 24, 25, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 55, 54, 53, 52, 58, 59, 60, 61, 55, 54, 53, 52, 51, 50, 47, 46]]
paths_score 20 [[69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14], [14, 15, 16, 17, 16, 17, 18, 19, 23, 22, 22, 23, 24, 25, 26, 27], [27, 26, 49, 48, 47, 46], [46, 47, 50, 51, 52, 53, 54, 55, 61, 60, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 55, 54, 53, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]]
all edges with dummy:  [(14, 15, 2, 'S'), (15, 16, 2, 'R'), (16, 17, 1, 'SV'), (16, 17, 3, 'S'), (17, 18, 2, 'R'), (19, 18, 2, 'S'), (19, 20, 1, 'R'), (19, 23, 1, 'SV'), (20, 21, 1, 'S'), (21, 22, 1, 'R'), (22, 23, 3, 'S'), (23, 24, 2, 'R'), (25, 24, 2, 'S'), (25, 26, 1, 'R'), (25, 48, 1, 'SV'), (26, 27, 2, 'S'), (26, 49, 1, 'SV'), (49, 48, 2, 'S'), (49, 50, 1, 'R'), (47, 48, 1, 'R'), (47, 50, 1, 'SV'), (47, 46, 2, 'S'), (50, 51, 2, 'S'), (51, 52, 2, 'R'), (52, 53, 3, 'S'), (53, 54, 3, 'R'), (54, 55, 3, 'S'), (55, 56, 1, 'R'), (55, 61, 2, 'SV'), (56, 57, 5, 'S'), (57, 58, 5, 'R'), (58, 59, 6, 'S'), (59, 60, 5, 'R'), (60, 61, 5, 'S'), (61, 62, 3, 'R'), (62, 63, 3, 'S'), (63, 64, 3, 'R'), (64, 65, 3, 'S'), (65, 66, 3, 'R'), (66, 67, 3, 'S'), (67, 68, 2, 'R'), (68, 69, 2, 'S'), (22, 22, 1, 'SV'), (56, 56, 2, 'SV'), (52, 58, 1, 'D'), (59, 67, 1, 'D')]
14 3 12920 2 H [15]
15 3 38598242.0 2 T [16, 14]
16 3 38598243.0 3 H [17, 15]
17 3 41915130.0 3 T [16, 18]
18 3 41915131.0 2 H [17, 19]
19 3 77970098.0 2 T [18, 20, 23]
20 3 77970099.0 2 H [19, 21]
21 3 78023973.0 2 T [20, 22]
22 3 78023974.0 3 H [21, 22, 23]
23 3 85456420.5 3 T [24, 19, 22]
24 3 85460505.0 2 H [25, 23]
25 3 130684428.25 2 T [24, 26, 48]
26 3 130684429.25 2 H [25, 27, 49]
27 3 198230595.0 2 T [26]
49 7 45898341.0 2 T [48, 50, 26]
48 7 38382783.666666664 2 H [49, 25, 47]
47 7 38382782.666666664 2 T [48, 50, 46]
50 7 45898342.0 2 H [49, 51, 47]
51 7 63008785.0 2 T [50, 52]
52 7 63008786.0 3 H [58, 51, 53]
53 7 72504423.0 3 T [52, 54]
54 7 72514593.0 3 H [53, 55]
55 7 103779755.5 3 T [56, 61, 54]
56 7 103797537.0 5 H [56, 57, 55]
57 7 109083898.0 5 T [56, 58]
58 7 109091421.0 6 H [57, 59, 52]
59 7 111189749.0 6 T [58, 67, 60]
60 7 111206245.0 5 H [59, 61]
61 7 113362532.0 5 T [60, 62, 55]
62 7 113366996.5 3 H [61, 63]
63 7 150214081.0 3 T [64, 62]
64 7 150217565.0 3 H [65, 63]
65 7 152409050.0 3 T [64, 66]
66 7 152426468.0 3 H [65, 67]
67 7 157625834.0 3 T [66, 59, 68]
68 7 157625835 2 H [67, 69]
69 7 159334983 2 T [68]
46 7 10488.0 2 H [47]
Answer [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 26, 49, 48, 47, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 55, 54, 53, 52, 58, 59, 60, 61, 55, 54, 53, 52, 51, 50, 49, 48, 25, 24, 23, 22, 22, 23, 19, 18, 17, 16, 17, 16, 15, 14]
[28, 29]
[(28, 29, 2, 'S')]
Component [28, 29]
Component edges [(28, 29, 2, 'S')]
ODD vertices []
TOUR
[28, 29]
paths_score 0 [[28, 29], [29, 28]]
paths_score 0 [[29, 28], [28, 29]]
all edges with dummy:  [(28, 29, 2, 'S')]
28 4 0 2 H [29]
29 4 190202564 2 T [28]
Answer [28, 29, 28]
[30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]
[(30, 31, 2, 'S'), (31, 32, 1, 'R'), (32, 33, 1, 'S'), (33, 34, 1, 'R'), (34, 35, 1, 'S'), (35, 36, 1, 'R'), (36, 37, 1, 'S'), (37, 38, 1, 'R'), (38, 39, 1, 'S'), (39, 40, 1, 'R'), (40, 41, 2, 'S')]
Component [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]
Component edges [(30, 31, 2, 'S'), (31, 32, 1, 'R'), (32, 33, 1, 'S'), (33, 34, 1, 'R'), (34, 35, 1, 'S'), (35, 36, 1, 'R'), (36, 37, 1, 'S'), (37, 38, 1, 'R'), (38, 39, 1, 'S'), (39, 40, 1, 'R'), (40, 41, 2, 'S')]
ODD vertices [31, 40]
TOUR
[30, 41]
paths_score 10 [[30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 31, 30]]
paths_score 10 [[41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30], [30, 31, 40, 41]]
all edges with dummy:  [(30, 31, 2, 'S'), (31, 32, 1, 'R'), (32, 33, 1, 'S'), (33, 34, 1, 'R'), (34, 35, 1, 'S'), (35, 36, 1, 'R'), (36, 37, 1, 'S'), (37, 38, 1, 'R'), (38, 39, 1, 'S'), (39, 40, 1, 'R'), (40, 41, 2, 'S'), (31, 40, 1, 'D')]
30 5 19315 2 H [31]
31 5 254718.0 2 T [32, 40, 30]
32 5 254719.0 1 H [33, 31]
33 5 46400789.0 1 T [32, 34]
34 5 46400790 2 H [33, 35]
35 5 49709238.0 2 T [34, 36]
36 5 49709239.0 1 H [35, 37]
37 5 70612428.0 1 T [36, 38]
38 5 70612429.0 1 H [37, 39]
39 5 181301991.0 1 T [40, 38]
40 5 181301992 2 H [41, 31, 39]
41 5 181472713 2 T [40]
Answer [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 40, 31, 30]
[42, 43, 44, 45]
[(42, 43, 2, 'S'), (43, 44, 1, 'R'), (43, 45, 1, 'SV'), (44, 45, 3, 'S'), (44, 44, 1, 'SV')]
Component [42, 43, 44, 45]
Component edges [(42, 43, 2, 'S'), (43, 44, 1, 'R'), (43, 45, 1, 'SV'), (44, 45, 3, 'S'), (44, 44, 1, 'SV')]
ODD vertices []
TOUR
[42, 45]
paths_score 0 [[42, 43, 44, 45], [45, 44, 44, 45, 43, 42]]
paths_score 0 [[45, 44, 43, 42], [42, 43, 45, 44, 44, 45]]
all edges with dummy:  [(42, 43, 2, 'S'), (43, 44, 1, 'R'), (43, 45, 1, 'SV'), (44, 45, 3, 'S'), (44, 44, 1, 'SV')]
42 6 76217.0 2 H [43]
43 6 168423375.5 2 T [42, 44, 45]
44 6 168446971.0 3 H [43, 44, 45]
45 6 170739897.0 3 T [43, 44]
Answer [42, 43, 44, 45, 44, 44, 45, 43, 42]
[70, 71]
[(70, 71, 2, 'S')]
Component [70, 71]
Component edges [(70, 71, 2, 'S')]
ODD vertices []
TOUR
[70, 71]
paths_score 0 [[70, 71], [71, 70]]
paths_score 0 [[71, 70], [70, 71]]
all edges with dummy:  [(70, 71, 2, 'S')]
70 8 0 2 H [71]
71 8 145076125 2 T [70]
Answer [70, 71, 70]
[72, 73]
[(72, 73, 2, 'S')]
Component [72, 73]
Component edges [(72, 73, 2, 'S')]
ODD vertices []
TOUR
[72, 73]
paths_score 0 [[72, 73], [73, 72]]
paths_score 0 [[73, 72], [72, 73]]
all edges with dummy:  [(72, 73, 2, 'S')]
72 9 0 2 H [73]
73 9 138334464 2 T [72]
Answer [72, 73, 72]
[74, 75, 76, 77, 78, 79]
[(75, 74, 2, 'S'), (75, 76, 1, 'R'), (75, 77, 1, 'SV'), (77, 76, 2, 'S'), (76, 78, 1, 'SV'), (77, 78, 1, 'R'), (78, 79, 2, 'S')]
Component [74, 75, 76, 77, 78, 79]
Component edges [(75, 74, 2, 'S'), (75, 76, 1, 'R'), (75, 77, 1, 'SV'), (77, 76, 2, 'S'), (76, 78, 1, 'SV'), (77, 78, 1, 'R'), (78, 79, 2, 'S')]
ODD vertices []
TOUR
[74, 79]
paths_score 0 [[74, 75, 76, 77, 78, 79], [79, 78, 76, 77, 75, 74]]
paths_score 0 [[79, 78, 77, 76, 75, 74], [74, 75, 77, 76, 78, 79]]
all edges with dummy:  [(75, 74, 2, 'S'), (75, 76, 1, 'R'), (75, 77, 1, 'SV'), (77, 76, 2, 'S'), (76, 78, 1, 'SV'), (77, 78, 1, 'R'), (78, 79, 2, 'S')]
74 10 0.0 2 H [75]
75 10 20925919.0 2 T [74, 76, 77]
76 10 20925920.0 2 H [75, 77, 78]
77 10 23542523.0 2 T [75, 76, 78]
78 10 23542524.0 2 H [76, 77, 79]
79 10 133785266.0 2 T [78]
Answer [74, 75, 76, 77, 78, 79, 78, 76, 77, 75, 74]
[80, 81]
[(80, 81, 2, 'S')]
Component [80, 81]
Component edges [(80, 81, 2, 'S')]
ODD vertices []
TOUR
[80, 81]
paths_score 0 [[80, 81], [81, 80]]
paths_score 0 [[81, 80], [80, 81]]
all edges with dummy:  [(80, 81, 2, 'S')]
80 11 0 2 H [81]
81 11 135069565 2 T [80]
Answer [80, 81, 80]
[82, 83]
[(82, 83, 2, 'S')]
Component [82, 83]
Component edges [(82, 83, 2, 'S')]
ODD vertices []
TOUR
[82, 83]
paths_score 0 [[82, 83], [83, 82]]
paths_score 0 [[83, 82], [82, 83]]
all edges with dummy:  [(82, 83, 2, 'S')]
82 12 0 2 H [83]
83 12 133263960 2 T [82]
Answer [82, 83, 82]
[84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 114, 113, 112, 111, 110, 109, 108, 116, 115, 94, 95, 117]
[(85, 84, 2, 'S'), (85, 86, 2, 'R'), (86, 87, 2, 'S'), (87, 88, 2, 'R'), (88, 89, 3, 'S'), (89, 90, 2, 'R'), (91, 90, 2, 'S'), (91, 92, 2, 'R'), (93, 92, 2, 'S'), (93, 114, 1, 'SV'), (93, 94, 1, 'R'), (113, 114, 1, 'R'), (115, 114, 2, 'S'), (113, 112, 2, 'S'), (113, 116, 1, 'SV'), (111, 112, 2, 'R'), (111, 110, 2, 'S'), (109, 110, 2, 'R'), (109, 108, 2, 'S'), (115, 116, 1, 'R'), (116, 117, 2, 'S'), (94, 115, 1, 'SV'), (94, 95, 2, 'S')]
Component [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 114, 113, 112, 111, 110, 109, 108, 116, 115, 94, 95, 117]
Component edges [(85, 84, 2, 'S'), (85, 86, 2, 'R'), (86, 87, 2, 'S'), (87, 88, 2, 'R'), (88, 89, 3, 'S'), (89, 90, 2, 'R'), (91, 90, 2, 'S'), (91, 92, 2, 'R'), (93, 92, 2, 'S'), (93, 114, 1, 'SV'), (93, 94, 1, 'R'), (113, 114, 1, 'R'), (115, 114, 2, 'S'), (113, 112, 2, 'S'), (113, 116, 1, 'SV'), (111, 112, 2, 'R'), (111, 110, 2, 'S'), (109, 110, 2, 'R'), (109, 108, 2, 'S'), (115, 116, 1, 'R'), (116, 117, 2, 'S'), (94, 115, 1, 'SV'), (94, 95, 2, 'S')]
ODD vertices [88, 89]
TOUR
[84, 95, 108, 117]
paths_score 0 [[84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 115, 114, 113, 112, 111, 110, 109, 108], [108, 109, 110, 111, 112, 113, 116, 117], [117, 116, 115, 114, 93, 92, 91, 90, 89, 88, 89, 88, 87, 86, 85, 84]]
paths_score 0 [[95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84], [84, 85, 86, 87, 88, 89, 88, 89, 90, 91, 92, 93, 114, 115, 116, 117], [117, 116, 113, 112, 111, 110, 109, 108], [108, 109, 110, 111, 112, 113, 114, 115, 94, 95]]
paths_score 0 [[108, 109, 110, 111, 112, 113, 114, 115, 94, 95], [95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84], [84, 85, 86, 87, 88, 89, 88, 89, 90, 91, 92, 93, 114, 115, 116, 117], [117, 116, 113, 112, 111, 110, 109, 108]]
paths_score 0 [[117, 116, 115, 114, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84], [84, 85, 86, 87, 88, 89, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 115, 114, 113, 112, 111, 110, 109, 108], [108, 109, 110, 111, 112, 113, 116, 117]]
all edges with dummy:  [(85, 84, 2, 'S'), (85, 86, 2, 'R'), (86, 87, 2, 'S'), (87, 88, 2, 'R'), (88, 89, 3, 'S'), (89, 90, 2, 'R'), (91, 90, 2, 'S'), (91, 92, 2, 'R'), (93, 92, 2, 'S'), (93, 114, 1, 'SV'), (93, 94, 1, 'R'), (113, 114, 1, 'R'), (115, 114, 2, 'S'), (113, 112, 2, 'S'), (113, 116, 1, 'SV'), (111, 112, 2, 'R'), (111, 110, 2, 'S'), (109, 110, 2, 'R'), (109, 108, 2, 'S'), (115, 116, 1, 'R'), (116, 117, 2, 'S'), (94, 115, 1, 'SV'), (94, 95, 2, 'S'), (88, 89, 1, 'D')]
84 13 16004726.0 2 H [85]
85 13 21571255.0 2 T [84, 86]
86 13 21571256.0 2 H [85, 87]
87 13 21626565.0 2 T [88, 86]
88 13 21626566.0 3 H [89, 87]
89 13 28772181.0 3 T [88, 90]
90 13 28772182.0 2 H [89, 91]
91 13 28859623.0 2 T [90, 92]
92 13 28859624.0 2 H [91, 93]
93 13 98281906.5 2 T [114, 92, 94]
114 16 53038719.0 2 H [113, 115, 93]
113 16 53038718.0 2 T [112, 114, 116]
112 16 22438803.0 2 H [113, 111]
111 16 22438802.0 2 T [112, 110]
110 16 21500435.0 2 H [109, 111]
109 16 21500434.0 2 T [108, 110]
108 16 0.0 2 H [109]
116 16 59096888.5 2 H [113, 115, 117]
115 16 59096887.5 2 T [114, 116, 94]
94 13 98281907.5 2 H [115, 93, 95]
95 13 114352101.0 2 T [94]
117 16 90224751.0 2 T [116]
Answer [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 94, 115, 114, 113, 112, 111, 110, 109, 108, 109, 110, 111, 112, 113, 116, 117, 116, 115, 114, 93, 92, 91, 90, 89, 88, 89, 88, 87, 86, 85, 84]
[96, 97, 98, 99, 100, 101]
[(96, 97, 2, 'S'), (97, 98, 1, 'R'), (98, 99, 3, 'S'), (99, 100, 2, 'R'), (100, 101, 2, 'S'), (98, 98, 1, 'SV')]
Component [96, 97, 98, 99, 100, 101]
Component edges [(96, 97, 2, 'S'), (97, 98, 1, 'R'), (98, 99, 3, 'S'), (99, 100, 2, 'R'), (100, 101, 2, 'S'), (98, 98, 1, 'SV')]
ODD vertices [97, 99]
TOUR
[96, 101]
paths_score 0 [[96, 97, 98, 99, 100, 101], [101, 100, 99, 98, 98, 99, 97, 96]]
paths_score 0 [[101, 100, 99, 98, 97, 96], [96, 97, 99, 98, 98, 99, 100, 101]]
all edges with dummy:  [(96, 97, 2, 'S'), (97, 98, 1, 'R'), (98, 99, 3, 'S'), (99, 100, 2, 'R'), (100, 101, 2, 'S'), (98, 98, 1, 'SV'), (97, 99, 1, 'D')]
96 14 16004726 2 H [97]
97 14 101442898.0 2 T [96, 98, 99]
98 14 101442899.0 3 H [97, 98, 99]
99 14 104169671.0 3 T [97, 98, 100]
100 14 104169672 2 H [99, 101]
101 14 106873281 2 T [100]
Answer [96, 97, 98, 99, 100, 101, 100, 99, 98, 98, 99, 97, 96]
[102, 103, 104, 105, 106, 107]
[(103, 102, 2, 'S'), (103, 104, 2, 'R'), (105, 104, 2, 'S'), (105, 106, 2, 'R'), (106, 107, 2, 'S')]
Component [102, 103, 104, 105, 106, 107]
Component edges [(103, 102, 2, 'S'), (103, 104, 2, 'R'), (105, 104, 2, 'S'), (105, 106, 2, 'R'), (106, 107, 2, 'S')]
ODD vertices []
TOUR
[102, 107]
paths_score 0 [[102, 103, 104, 105, 106, 107], [107, 106, 105, 104, 103, 102]]
paths_score 0 [[107, 106, 105, 104, 103, 102], [102, 103, 104, 105, 106, 107]]
all edges with dummy:  [(103, 102, 2, 'S'), (103, 104, 2, 'R'), (105, 104, 2, 'S'), (105, 106, 2, 'R'), (106, 107, 2, 'S')]
102 15 0.0 2 H [103]
103 15 30766282.0 2 T [104, 102]
104 15 30766283.0 2 H [105, 103]
105 15 31639515.0 2 T [104, 106]
106 15 31639516.0 2 H [105, 107]
107 15 101976509.0 2 T [106]
Answer [102, 103, 104, 105, 106, 107, 106, 105, 104, 103, 102]
[118, 119, 120, 121, 122, 123]
[(118, 119, 2, 'S'), (119, 120, 2, 'R'), (120, 121, 1, 'SV'), (120, 121, 3, 'S'), (121, 122, 2, 'R'), (122, 123, 2, 'S')]
Component [118, 119, 120, 121, 122, 123]
Component edges [(118, 119, 2, 'S'), (119, 120, 2, 'R'), (120, 121, 1, 'SV'), (120, 121, 3, 'S'), (121, 122, 2, 'R'), (122, 123, 2, 'S')]
ODD vertices []
TOUR
[118, 123]
paths_score 0 [[118, 119, 120, 121, 122, 123], [123, 122, 121, 120, 121, 120, 119, 118]]
paths_score 0 [[123, 122, 121, 120, 119, 118], [118, 119, 120, 121, 120, 121, 122, 123]]
all edges with dummy:  [(118, 119, 2, 'S'), (119, 120, 2, 'R'), (120, 121, 1, 'SV'), (120, 121, 3, 'S'), (121, 122, 2, 'R'), (122, 123, 2, 'S')]
118 17 66654 2 H [119]
119 17 14209212.0 2 T [120, 118]
120 17 14209213.0 3 H [121, 119]
121 17 15479623.0 3 T [120, 122]
122 17 15479624 2 H [121, 123]
123 17 83246391 2 T [122]
Answer [118, 119, 120, 121, 122, 123, 122, 121, 120, 121, 120, 119, 118]
[124, 125, 126, 127, 128, 129]
[(124, 125, 2, 'S'), (125, 126, 2, 'R'), (126, 127, 1, 'SV'), (126, 127, 3, 'S'), (127, 128, 2, 'R'), (128, 129, 2, 'S')]
Component [124, 125, 126, 127, 128, 129]
Component edges [(124, 125, 2, 'S'), (125, 126, 2, 'R'), (126, 127, 1, 'SV'), (126, 127, 3, 'S'), (127, 128, 2, 'R'), (128, 129, 2, 'S')]
ODD vertices []
TOUR
[124, 129]
paths_score 0 [[124, 125, 126, 127, 128, 129], [129, 128, 127, 126, 127, 126, 125, 124]]
paths_score 0 [[129, 128, 127, 126, 125, 124], [124, 125, 126, 127, 126, 127, 128, 129]]
all edges with dummy:  [(124, 125, 2, 'S'), (125, 126, 2, 'R'), (126, 127, 1, 'SV'), (126, 127, 3, 'S'), (127, 128, 2, 'R'), (128, 129, 2, 'S')]
124 18 18869 2 H [125]
125 18 2115879.0 2 T [124, 126]
126 18 2118721.0 3 H [125, 127]
127 18 8215501.0 3 T [128, 126]
128 18 8232915.5 2 H [129, 127]
129 18 80256373.0 2 T [128]
Answer [124, 125, 126, 127, 128, 129, 128, 127, 126, 127, 126, 125, 124]
[130, 131]
[(130, 131, 2, 'S')]
Component [130, 131]
Component edges [(130, 131, 2, 'S')]
ODD vertices []
TOUR
[130, 131]
paths_score 0 [[130, 131], [131, 130]]
paths_score 0 [[131, 130], [130, 131]]
all edges with dummy:  [(130, 131, 2, 'S')]
130 19 0 2 H [131]
131 19 58605715 2 T [130]
Answer [130, 131, 130]
[132, 133, 134, 138, 137, 136, 135, 139]
[(132, 133, 2, 'S'), (133, 134, 2, 'R'), (134, 138, 1, 'SV'), (134, 135, 3, 'S'), (137, 138, 1, 'R'), (138, 139, 2, 'S'), (137, 136, 1, 'S'), (135, 136, 1, 'R'), (135, 135, 1, 'SV')]
Component [132, 133, 134, 138, 137, 136, 135, 139]
Component edges [(132, 133, 2, 'S'), (133, 134, 2, 'R'), (134, 138, 1, 'SV'), (134, 135, 3, 'S'), (137, 138, 1, 'R'), (138, 139, 2, 'S'), (137, 136, 1, 'S'), (135, 136, 1, 'R'), (135, 135, 1, 'SV')]
ODD vertices []
TOUR
[132, 139]
paths_score 0 [[132, 133, 134, 135, 136, 137, 138, 139], [139, 138, 134, 135, 135, 134, 133, 132]]
paths_score 0 [[139, 138, 137, 136, 135, 134, 133, 132], [132, 133, 134, 135, 135, 134, 138, 139]]
all edges with dummy:  [(132, 133, 2, 'S'), (133, 134, 2, 'R'), (134, 138, 1, 'SV'), (134, 135, 3, 'S'), (137, 138, 1, 'R'), (138, 139, 2, 'S'), (137, 136, 1, 'S'), (135, 136, 1, 'R'), (135, 135, 1, 'SV')]
132 20 70157 2 H [133]
133 20 16240040.0 2 T [132, 134]
134 20 16247007.5 3 H [138, 133, 135]
138 20 20647797.0 2 H [137, 139, 134]
137 20 20647796.0 2 T [136, 138]
136 20 20558668.0 2 H [137, 135]
135 20 20558667.0 3 T [136, 134, 135]
139 20 64333717.0 2 T [138]
Answer [132, 133, 134, 135, 136, 137, 138, 139, 138, 134, 135, 135, 134, 133, 132]
[140, 141]
[(140, 141, 2, 'S')]
Component [140, 141]
Component edges [(140, 141, 2, 'S')]
ODD vertices []
TOUR
[140, 141]
paths_score 0 [[140, 141], [141, 140]]
paths_score 0 [[141, 140], [140, 141]]
all edges with dummy:  [(140, 141, 2, 'S')]
140 21 0 2 H [141]
141 21 46697230 2 T [140]
Answer [140, 141, 140]
[142, 143]
[(142, 143, 2, 'S')]
Component [142, 143]
Component edges [(142, 143, 2, 'S')]
ODD vertices []
TOUR
[142, 143]
paths_score 0 [[142, 143], [143, 142]]
paths_score 0 [[143, 142], [142, 143]]
all edges with dummy:  [(142, 143, 2, 'S')]
142 22 0 2 H [143]
143 22 50805587 2 T [142]
Answer [142, 143, 142]
[144, 145]
[(144, 145, 1, 'S')]
Component [144, 145]
Component edges [(144, 145, 1, 'S')]
ODD vertices [144, 145]
TOUR
[144, 145]
all edges with dummy:  [(144, 145, 1, 'S')]
144 23 0 1 H [145]
145 23 156025612 1 T [144]
Answer [144, 145]
[146, 147]
[(146, 147, 1, 'S')]
Component [146, 147]
Component edges [(146, 147, 1, 'S')]
ODD vertices [146, 147]
TOUR
[146, 147]
all edges with dummy:  [(146, 147, 1, 'S')]
146 24 0 1 H [147]
147 24 57212132 1 T [146]
Answer [146, 147]
{(0, 1, 'S'): 3, (1, 2, 'R'): 3, (2, 3, 'S'): 3, (3, 4, 'R'): 3, (4, 5, 'S'): 3, (5, 6, 'R'): 2, (6, 7, 'S'): 2}
split node indices:  [7, 14]
debug paths separation:  [[0, 1, 2, 3, 4, 5, 6, 7], [7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 4, 5]]
Ger ['1+ 2+ 3+ 4+ ', '4- 3- 2- 1- ', '1+ 2+ 3+ '] [1, 1, 0] set() 2 [1, 2, 3] ['+', '+', '+'] [1, 2, 3, 4] ['+', '+', '+', '+'] 0
Ger ['1+ 2+ 3+ 4+ ', '4- 3- 2- 1- ', '1+ 2+ 3+ '] [1, 1, 0] set() 2 [1, 2, 3] ['+', '+', '+'] [4, 3, 2, 1] ['-', '-', '-', '-'] 1
{(8, 9, 'S'): 2, (9, 10, 'R'): 2, (10, 11, 'SV'): 1, (10, 11, 'S'): 3, (11, 12, 'R'): 2, (12, 13, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[8, 9, 10, 11, 12, 13], [13, 12, 11, 10, 11, 10, 9, 8]]
{(14, 15, 'S'): 2, (15, 16, 'R'): 2, (16, 17, 'SV'): 1, (16, 17, 'S'): 3, (17, 18, 'R'): 2, (19, 18, 'S'): 2, (19, 20, 'R'): 1, (19, 23, 'SV'): 1, (20, 21, 'S'): 1, (21, 22, 'R'): 1, (22, 23, 'S'): 3, (23, 24, 'R'): 2, (25, 24, 'S'): 2, (25, 26, 'R'): 1, (25, 48, 'SV'): 1, (26, 27, 'S'): 2, (26, 49, 'SV'): 1, (49, 48, 'S'): 2, (49, 50, 'R'): 1, (47, 48, 'R'): 1, (47, 50, 'SV'): 1, (47, 46, 'S'): 2, (50, 51, 'S'): 2, (51, 52, 'R'): 2, (52, 53, 'S'): 3, (53, 54, 'R'): 3, (54, 55, 'S'): 3, (55, 56, 'R'): 1, (55, 61, 'SV'): 2, (56, 57, 'S'): 5, (57, 58, 'R'): 5, (58, 59, 'S'): 6, (59, 60, 'R'): 5, (60, 61, 'S'): 5, (61, 62, 'R'): 3, (62, 63, 'S'): 3, (63, 64, 'R'): 3, (64, 65, 'S'): 3, (65, 66, 'R'): 3, (66, 67, 'S'): 3, (67, 68, 'R'): 2, (68, 69, 'S'): 2, (22, 22, 'SV'): 1, (56, 56, 'SV'): 2, (52, 58, 'D'): 1, (59, 67, 'D'): 1}
split node indices:  [13, 18, 39]
debug paths separation:  [[14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], [27, 26, 49, 48, 47, 46], [46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 59, 58, 57, 56, 56, 57, 58, 59, 60, 61, 55, 54, 53, 52, 58, 59, 60, 61, 55, 54, 53, 52, 51, 50, 49, 48, 25, 24, 23, 22, 22, 23, 19, 18, 17, 16, 17, 16, 15, 14]]
{(28, 29, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[28, 29], [29, 28]]
{(30, 31, 'S'): 2, (31, 32, 'R'): 1, (32, 33, 'S'): 1, (33, 34, 'R'): 1, (34, 35, 'S'): 1, (35, 36, 'R'): 1, (36, 37, 'S'): 1, (37, 38, 'R'): 1, (38, 39, 'S'): 1, (39, 40, 'R'): 1, (40, 41, 'S'): 2, (31, 40, 'D'): 1}
split node indices:  [11]
debug paths separation:  [[30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 31, 30]]
Ger ['16+ 17+ 18+ 19+ 20+ 21+ ', '21- 16- '] [1, 0] set() 1 [21, 16] ['-', '-'] [16, 17, 18, 19, 20, 21] ['+', '+', '+', '+', '+', '+'] 0
{(42, 43, 'S'): 2, (43, 44, 'R'): 1, (43, 45, 'SV'): 1, (44, 45, 'S'): 3, (44, 44, 'SV'): 1}
split node indices:  [3]
debug paths separation:  [[42, 43, 44, 45], [45, 44, 44, 45, 43, 42]]
{(70, 71, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[70, 71], [71, 70]]
{(72, 73, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[72, 73], [73, 72]]
{(75, 74, 'S'): 2, (75, 76, 'R'): 1, (75, 77, 'SV'): 1, (77, 76, 'S'): 2, (76, 78, 'SV'): 1, (77, 78, 'R'): 1, (78, 79, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[74, 75, 76, 77, 78, 79], [79, 78, 76, 77, 75, 74]]
{(80, 81, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[80, 81], [81, 80]]
{(82, 83, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[82, 83], [83, 82]]
{(85, 84, 'S'): 2, (85, 86, 'R'): 2, (86, 87, 'S'): 2, (87, 88, 'R'): 2, (88, 89, 'S'): 3, (89, 90, 'R'): 2, (91, 90, 'S'): 2, (91, 92, 'R'): 2, (93, 92, 'S'): 2, (93, 114, 'SV'): 1, (93, 94, 'R'): 1, (113, 114, 'R'): 1, (115, 114, 'S'): 2, (113, 112, 'S'): 2, (113, 116, 'SV'): 1, (111, 112, 'R'): 2, (111, 110, 'S'): 2, (109, 110, 'R'): 2, (109, 108, 'S'): 2, (115, 116, 'R'): 1, (116, 117, 'S'): 2, (94, 115, 'SV'): 1, (94, 95, 'S'): 2, (88, 89, 'D'): 1}
split node indices:  [11, 20, 27]
debug paths separation:  [[84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 115, 114, 113, 112, 111, 110, 109, 108], [108, 109, 110, 111, 112, 113, 116, 117], [117, 116, 115, 114, 93, 92, 91, 90, 89, 88, 89, 88, 87, 86, 85, 84]]
{(96, 97, 'S'): 2, (97, 98, 'R'): 1, (98, 99, 'S'): 3, (99, 100, 'R'): 2, (100, 101, 'S'): 2, (98, 98, 'SV'): 1, (97, 99, 'D'): 1}
split node indices:  [5]
debug paths separation:  [[96, 97, 98, 99, 100, 101], [101, 100, 99, 98, 98, 99, 97, 96]]
{(103, 102, 'S'): 2, (103, 104, 'R'): 2, (105, 104, 'S'): 2, (105, 106, 'R'): 2, (106, 107, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[102, 103, 104, 105, 106, 107], [107, 106, 105, 104, 103, 102]]
{(118, 119, 'S'): 2, (119, 120, 'R'): 2, (120, 121, 'SV'): 1, (120, 121, 'S'): 3, (121, 122, 'R'): 2, (122, 123, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[118, 119, 120, 121, 122, 123], [123, 122, 121, 120, 121, 120, 119, 118]]
{(124, 125, 'S'): 2, (125, 126, 'R'): 2, (126, 127, 'SV'): 1, (126, 127, 'S'): 3, (127, 128, 'R'): 2, (128, 129, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[124, 125, 126, 127, 128, 129], [129, 128, 127, 126, 127, 126, 125, 124]]
{(130, 131, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[130, 131], [131, 130]]
{(132, 133, 'S'): 2, (133, 134, 'R'): 2, (134, 138, 'SV'): 1, (134, 135, 'S'): 3, (137, 138, 'R'): 1, (138, 139, 'S'): 2, (137, 136, 'S'): 1, (135, 136, 'R'): 1, (135, 135, 'SV'): 1}
split node indices:  [7]
debug paths separation:  [[132, 133, 134, 135, 136, 137, 138, 139], [139, 138, 134, 135, 135, 134, 133, 132]]
{(140, 141, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[140, 141], [141, 140]]
{(142, 143, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[142, 143], [143, 142]]
{(144, 145, 'S'): 1}
split node indices:  []
debug paths separation:  [[144, 145]]
{(146, 147, 'S'): 1}
split node indices:  []
debug paths separation:  [[146, 147]]
