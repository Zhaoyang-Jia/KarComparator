Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/c759d04f4f7e44cfa639a4789e3017a3-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/c759d04f4f7e44cfa639a4789e3017a3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 208 COLUMNS
At line 1174 RHS
At line 1378 BOUNDS
At line 1555 ENDATA
Problem MODEL has 203 rows, 176 columns and 481 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -1160 - 0.00 seconds
Cgl0003I 0 fixed, 53 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 145 rows, 174 columns (174 integer (89 of which binary)) and 428 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 6 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1130 iterations 11
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -1130 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -1130 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -81 iterations 21
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -81 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -81 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -81 iterations 0
Cbc0038I Pass   8: suminf.    4.66667 (13) obj. 867 iterations 36
Cbc0038I Pass   9: suminf.    4.66667 (13) obj. 867 iterations 1
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 1827 iterations 10
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 1827 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 1827 iterations 0
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 1776 iterations 20
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 1776 iterations 0
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 1776 iterations 0
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 1776 iterations 0
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 1629 iterations 22
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 1629 iterations 0
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 1629 iterations 0
Cbc0038I Pass  20: suminf.    1.00000 (3) obj. 1724.33 iterations 16
Cbc0038I Pass  21: suminf.    1.00000 (3) obj. 1724.33 iterations 2
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. 1991 iterations 3
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. 1991 iterations 0
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. 1991 iterations 0
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. 2629 iterations 31
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 2629 iterations 1
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. 2629 iterations 0
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 2629 iterations 0
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. 2657 iterations 20
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 2657 iterations 3
Cbc0038I Rounding solution of -1130 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous of which 11 were internal integer and 0 internal continuous
Cbc0038I Full problem 145 rows 174 columns, reduced to 30 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -1130 to -1150 (0.02 seconds)
Cbc0038I Round again with cutoff of -1151.9
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass  30: suminf.    0.73000 (2) obj. -1151.9 iterations 11
Cbc0038I Pass  31: suminf.    0.56997 (2) obj. -1151.9 iterations 9
Cbc0038I Pass  32: suminf.    0.39666 (1) obj. -1151.9 iterations 2
Cbc0038I Pass  33: suminf.    0.56997 (2) obj. -1151.9 iterations 4
Cbc0038I Pass  34: suminf.    1.01001 (3) obj. -1151.9 iterations 11
Cbc0038I Pass  35: suminf.    1.01001 (3) obj. -1151.9 iterations 0
Cbc0038I Pass  36: suminf.    1.01001 (3) obj. -1151.9 iterations 3
Cbc0038I Pass  37: suminf.    1.01001 (3) obj. -1151.9 iterations 3
Cbc0038I Pass  38: suminf.    1.10009 (3) obj. -1151.9 iterations 12
Cbc0038I Pass  39: suminf.    0.99666 (2) obj. -1151.9 iterations 3
Cbc0038I Pass  40: suminf.    1.01001 (3) obj. -1151.9 iterations 8
Cbc0038I Pass  41: suminf.    1.01001 (3) obj. -1151.9 iterations 0
Cbc0038I Pass  42: suminf.    1.01001 (3) obj. -1151.9 iterations 3
Cbc0038I Pass  43: suminf.    1.01001 (3) obj. -1151.9 iterations 3
Cbc0038I Pass  44: suminf.    1.10009 (3) obj. -1151.9 iterations 10
Cbc0038I Pass  45: suminf.    0.99666 (2) obj. -1151.9 iterations 3
Cbc0038I Pass  46: suminf.    1.01001 (3) obj. -1151.9 iterations 8
Cbc0038I Pass  47: suminf.    1.01001 (3) obj. -1151.9 iterations 0
Cbc0038I Pass  48: suminf.    1.01001 (3) obj. -1151.9 iterations 3
Cbc0038I Pass  49: suminf.    1.01001 (3) obj. -1151.9 iterations 3
Cbc0038I Pass  50: suminf.    1.10009 (3) obj. -1151.9 iterations 12
Cbc0038I Pass  51: suminf.    0.99666 (2) obj. -1151.9 iterations 4
Cbc0038I Pass  52: suminf.    1.01001 (3) obj. -1151.9 iterations 8
Cbc0038I Pass  53: suminf.    1.01001 (3) obj. -1151.9 iterations 0
Cbc0038I Pass  54: suminf.    1.01001 (3) obj. -1151.9 iterations 3
Cbc0038I Pass  55: suminf.    1.01001 (3) obj. -1151.9 iterations 3
Cbc0038I Pass  56: suminf.    1.10009 (3) obj. -1151.9 iterations 8
Cbc0038I Pass  57: suminf.    0.99666 (2) obj. -1151.9 iterations 4
Cbc0038I Pass  58: suminf.    1.01001 (3) obj. -1151.9 iterations 8
Cbc0038I Pass  59: suminf.    1.01001 (3) obj. -1151.9 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 112 integers at bound fixed and 0 continuous of which 35 were internal integer and 0 internal continuous
Cbc0038I Full problem 145 rows 174 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1150 - took 0.03 seconds
Cbc0012I Integer solution of -1146 found by DiveCoefficient after 11 iterations and 0 nodes (0.04 seconds)
Cbc0031I 7 added rows had average density of 7.2857143
Cbc0013I At root node, 7 cuts changed objective from -1160 to -1146 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 9 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1146, took 11 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -1160 to -1146
Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 3 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                -1146.00000000
Enumerated nodes:               0
Total iterations:               11
Time (CPU seconds):             0.04
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/2122976eeff54c4aa4c9ef890874653c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/2122976eeff54c4aa4c9ef890874653c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 84 COLUMNS
At line 466 RHS
At line 546 BOUNDS
At line 615 ENDATA
Problem MODEL has 79 rows, 68 columns and 193 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -590 - 0.00 seconds
Cgl0003I 0 fixed, 20 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 68 columns (68 integer (35 of which binary)) and 176 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 4.21885e-15
Cbc0038I Solution found of -590
Cbc0038I Cleaned solution of -590
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 2 continuous of which 15 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -590 - took 0.00 seconds
Cbc0012I Integer solution of -590 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -590, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -590 to -590
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -590.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ad1a0df7b9664547baa9aa043a5cfab5-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/ad1a0df7b9664547baa9aa043a5cfab5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -70 - 0.00 seconds
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 22 columns (22 integer (14 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -70
Cbc0038I Cleaned solution of -70
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -70 - took 0.00 seconds
Cbc0012I Integer solution of -70 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -70, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -70 to -70
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -70.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d358812b9bb747f39572f90fb8464b10-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/d358812b9bb747f39572f90fb8464b10-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/7bc8ca2949394e38a03c2dd73e006bdc-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/7bc8ca2949394e38a03c2dd73e006bdc-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 40 COLUMNS
At line 207 RHS
At line 243 BOUNDS
At line 275 ENDATA
Problem MODEL has 35 rows, 31 columns and 81 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -145 - 0.00 seconds
Cgl0003I 0 fixed, 10 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 30 columns (30 integer (16 of which binary)) and 70 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -130 iterations 2
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 662 iterations 5
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 662 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 662 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -119 iterations 7
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -119 iterations 1
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -119 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -119 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -119 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -89 iterations 4
Cbc0038I Solution found of -89
Cbc0038I Cleaned solution of -89
Cbc0038I Rounding solution of -139 is better than previous of -89

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 1 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 24 rows 30 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -139 to -140 (0.00 seconds)
Cbc0038I Round again with cutoff of -141.4
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass  13: suminf.    0.38000 (1) obj. -141.4 iterations 2
Cbc0038I Pass  14: suminf.    0.41997 (2) obj. -141.4 iterations 2
Cbc0038I Pass  15: suminf.    0.38000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  16: suminf.    1.30004 (4) obj. -141.4 iterations 3
Cbc0038I Pass  17: suminf.    0.66001 (2) obj. -141.4 iterations 1
Cbc0038I Pass  18: suminf.    0.44666 (1) obj. -141.4 iterations 1
Cbc0038I Pass  19: suminf.    0.66001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  20: suminf.    0.56001 (2) obj. -141.4 iterations 1
Cbc0038I Pass  21: suminf.    0.56001 (2) obj. -141.4 iterations 0
Cbc0038I Pass  22: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  23: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  24: suminf.    0.56001 (2) obj. -141.4 iterations 0
Cbc0038I Pass  25: suminf.    0.56001 (2) obj. -141.4 iterations 0
Cbc0038I Pass  26: suminf.    1.67994 (4) obj. -141.4 iterations 5
Cbc0038I Pass  27: suminf.    1.67994 (4) obj. -141.4 iterations 1
Cbc0038I Pass  28: suminf.    0.41333 (1) obj. -141.4 iterations 1
Cbc0038I Pass  29: suminf.    0.71997 (2) obj. -141.4 iterations 2
Cbc0038I Pass  30: suminf.    0.41333 (1) obj. -141.4 iterations 1
Cbc0038I Pass  31: suminf.    0.41333 (1) obj. -141.4 iterations 0
Cbc0038I Pass  32: suminf.    0.44666 (1) obj. -141.4 iterations 3
Cbc0038I Pass  33: suminf.    0.66001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  34: suminf.    0.44666 (1) obj. -141.4 iterations 1
Cbc0038I Pass  35: suminf.    0.89991 (2) obj. -141.4 iterations 4
Cbc0038I Pass  36: suminf.    0.89991 (2) obj. -141.4 iterations 0
Cbc0038I Pass  37: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  38: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  39: suminf.    0.89991 (2) obj. -141.4 iterations 4
Cbc0038I Pass  40: suminf.    0.89991 (2) obj. -141.4 iterations 1
Cbc0038I Pass  41: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  42: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 24 rows 30 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -140 - took 0.00 seconds
Cbc0012I Integer solution of -140 found by DiveCoefficient after 3 iterations and 0 nodes (0.01 seconds)
Cbc0031I 2 added rows had average density of 7
Cbc0013I At root node, 2 cuts changed objective from -145 to -140 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -140, took 3 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -145 to -140
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -140.00000000
Enumerated nodes:               0
Total iterations:               3
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/eebc436612c941c49b2a25c7e34f2521-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/eebc436612c941c49b2a25c7e34f2521-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/2a8e05a7153f497e88bbb8288d681738-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/2a8e05a7153f497e88bbb8288d681738-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 164 RHS
At line 192 BOUNDS
At line 217 ENDATA
Problem MODEL has 27 rows, 24 columns and 65 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -100 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 24 columns (24 integer (13 of which binary)) and 60 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -100
Cbc0038I Cleaned solution of -100
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -100 - took 0.00 seconds
Cbc0012I Integer solution of -100 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -100, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -100 to -100
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -100.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/4b7a712dc86b41f3a637bbd487d28ed1-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/4b7a712dc86b41f3a637bbd487d28ed1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 164 RHS
At line 192 BOUNDS
At line 217 ENDATA
Problem MODEL has 27 rows, 24 columns and 65 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -100 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 24 columns (24 integer (13 of which binary)) and 60 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -100
Cbc0038I Cleaned solution of -100
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -100 - took 0.00 seconds
Cbc0012I Integer solution of -100 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -100, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -100 to -100
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -100.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/19ce79cf58de41da943a7a442db1c43d-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/19ce79cf58de41da943a7a442db1c43d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -110 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 1.11022e-15
Cbc0038I Solution found of -110
Cbc0038I Cleaned solution of -110
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -110 - took 0.00 seconds
Cbc0012I Integer solution of -110 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -110, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -110 to -110
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -110.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/830c9ae4df8c49f3a1a06cbdf314d140-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/830c9ae4df8c49f3a1a06cbdf314d140-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/750d6e4acdce44978a8c59cbd5d85c74-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/750d6e4acdce44978a8c59cbd5d85c74-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 164 RHS
At line 192 BOUNDS
At line 217 ENDATA
Problem MODEL has 27 rows, 24 columns and 65 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -100 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 24 columns (24 integer (13 of which binary)) and 60 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -100
Cbc0038I Cleaned solution of -100
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -100 - took 0.00 seconds
Cbc0012I Integer solution of -100 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -100, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -100 to -100
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -100.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/4c7fad967cd24cddbb992d13f28ed677-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/4c7fad967cd24cddbb992d13f28ed677-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -80 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -80 - took 0.00 seconds
Cbc0012I Integer solution of -80 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -80, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -80 to -80
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -80.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/8123f336ea024b0dac722dafb2625245-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/8123f336ea024b0dac722dafb2625245-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -110 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 1.11022e-15
Cbc0038I Solution found of -110
Cbc0038I Cleaned solution of -110
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 6 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -110 - took 0.00 seconds
Cbc0012I Integer solution of -110 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -110, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -110 to -110
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -110.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/163f50104b494cc4b9752c90b01cf78a-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/163f50104b494cc4b9752c90b01cf78a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/6eb3b59aebd54ca29a2649b75ad9d083-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/6eb3b59aebd54ca29a2649b75ad9d083-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/fcda715a2bec45439b1cd0acb19d8c04-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/fcda715a2bec45439b1cd0acb19d8c04-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1924e631b22340ae9d823822e3a540c4-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/1924e631b22340ae9d823822e3a540c4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/7294b74d994846439620aead4d519344-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/7294b74d994846439620aead4d519344-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/c90bfcbe210441efa6ed43bf98a5471d-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/c90bfcbe210441efa6ed43bf98a5471d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d89fafbbc6f043dc8ccb1ff1b47974b9-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/d89fafbbc6f043dc8ccb1ff1b47974b9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

dashag 1.0028177320533402
79	1321	1	1	327366.8	335060.0	40826906.0	41936520.0	1.0	inversion	4	8	80	59	60	6344	6534	heterozygous	1	17	-1.0	76.02	46.84	-1.0	303117.0	0.18	NA	0.37 40523789.0 41936520.0 left
80	1321	1	-1	24184.3	-1.0	40523789.0	-1.0	1.0	inversion_partial	4	-1	79	1	-1	6284	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	303117.0	0.18	NA	0.37
81	1322	1	1	330796.0	338489.2	40826906.0	41936520.0	1.0	inversion	5	9	82	59	60	6344	6534	heterozygous	1	17	-1.0	75.52	67.62	-1.0	303117.0	0.204	NA	0.37 40523789.0 41936520.0 left
82	1322	1	-1	27999.8	-1.0	40523789.0	-1.0	1.0	inversion_partial	5	-1	81	1	-1	6284	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	303117.0	0.204	NA	0.37
83	1490	1	1	59775.3	570479.8	41678850.0	41932911.0	-1.0	duplication_inverted	6	7	-1	6	93	6490	6533	unknown	-1	-1	-1.0	59.13	51.75	-1.0	254061.0	0.256	NA	0.32
157	1050	1	1	498396.0	505376.9	147057352.0	148413697.0	0.99	deletion	33	36	-1	91	92	24308	24571	heterozygous	1	37	78.39	118.11	78.39	4386.62	1349364.2	0.35200000000000004	NA	0.38
157	1050	1	1	498396.0	505376.9	147057352.0	148413697.0	0.99	deletion	33	36	-1	91	92	24308	24571	heterozygous	1	37	78.39	118.11	78.39	4386.62	1349364.2	0.35200000000000004	NA	0.38
186	231	1	1	20468822.6	20470339.8	185127593.5	185959240.0	0.99	deletion	41	49	-1	4131	4132	32073	32280	heterozygous	1	47	4415.55	8981.33	5229.57	4415.55	830129.2	0.244	NA	0.68
186	231	1	1	20468822.6	20470339.8	185127593.5	185959240.0	0.99	deletion	41	49	-1	4131	4132	32073	32280	heterozygous	1	47	4415.55	8981.33	5229.57	4415.55	830129.2	0.244	NA	0.68
209	232	1	1	20433929.2	20435446.5	185127593.5	185959240.0	0.99	deletion	42	48	-1	4125	4126	32073	32280	heterozygous	1	47	4415.55	8982.83	5220.73	4415.55	830129.2	0.266	NA	0.68
209	232	1	1	20433929.2	20435446.5	185127593.5	185959240.0	0.99	deletion	42	48	-1	4125	4126	32073	32280	heterozygous	1	47	4415.55	8982.83	5220.73	4415.55	830129.2	0.266	NA	0.68
214	281	1	8	31406800.7	31416744.9	185954042.0	32875965.0	0.07	translocation_interchr	45	153	-1	6169	6170	32279	6380	heterozygous	1	-1	-1.0	244.72	2702.45	-1.0	-1.0	0.255	+/+	0.44
302	81	2	2	17089044.4	18918365.0	17104876.0	18276181.0	0.99	insertion	53	60	-1	3080	3461	3141	3390	heterozygous	1	69	1399.14	3992.14	17633.48	1399.14	658015.6	0.321	NA	0.56
320	351	2	11	19311577.7	19298192.8	17111367.0	73784783.5	0.08	translocation_interchr	57	255	-1	3014	3013	3142	13180	heterozygous	1	70	-1.0	296.0	4083.19	-1.0	-1.0	0.196	+/+	0.62
303	81	2	11	17089044.4	17096619.9	17104876.0	73799268.0	0.48	translocation_interchr	53	259	-1	3080	3081	3141	13181	heterozygous	1	70	-1.0	3992.14	469.21	-1.0	-1.0	0.166	+/+	0.61
317	82	2	2	17067741.3	18897062.0	17104876.0	18276181.0	0.99	insertion	54	61	-1	3074	3455	3141	3390	heterozygous	1	69	1399.14	3997.0	17629.21	1399.14	658015.7	0.295	NA	0.56
320	351	2	11	19311577.7	19298192.8	17111367.0	73784783.5	0.08	translocation_interchr	57	255	-1	3014	3013	3142	13180	heterozygous	1	70	-1.0	296.0	4083.19	-1.0	-1.0	0.196	+/+	0.62
318	82	2	11	17067741.3	17075316.7	17104876.0	73799268.0	0.12	translocation_interchr	54	260	-1	3074	3075	3141	13181	heterozygous	1	70	-1.0	3997.0	464.65	-1.0	-1.0	0.181	+/+	0.61
303	81	2	11	17089044.4	17096619.9	17104876.0	73799268.0	0.48	translocation_interchr	53	259	-1	3080	3081	3141	13181	heterozygous	1	70	-1.0	3992.14	469.21	-1.0	-1.0	0.166	+/+	0.61
320	351	2	11	19311577.7	19298192.8	17111367.0	73784783.5	0.08	translocation_interchr	57	255	-1	3014	3013	3142	13180	heterozygous	1	70	-1.0	296.0	4083.19	-1.0	-1.0	0.196	+/+	0.62
365	81	2	11	18918365.0	18918365.0	18276181.0	75620387.0	0.5	translocation_interchr	60	259	-1	3461	3461	3390	13570	heterozygous	1	71	-1.0	17633.48	469.21	-1.0	-1.0	0.17600000000000002	+/+	0.56
321	351	2	11	20475757.8	20475757.8	18276181.0	75620387.0	0.83	translocation_interchr	57	263	-1	3250	3250	3390	13570	heterozygous	1	71	-1.0	296.0	3645.16	-1.0	-1.0	0.173	+/+	0.53
303	81	2	11	17089044.4	17096619.9	17104876.0	73799268.0	0.48	translocation_interchr	53	259	-1	3080	3081	3141	13181	heterozygous	1	70	-1.0	3992.14	469.21	-1.0	-1.0	0.166	+/+	0.61
324	352	2	11	19325116.7	19311731.9	17111367.0	73784783.5	0.15	translocation_interchr	58	256	-1	3014	3013	3142	13180	heterozygous	1	70	-1.0	296.6	4082.45	-1.0	-1.0	0.193	+/+	0.62
365	81	2	11	18918365.0	18918365.0	18276181.0	75620387.0	0.5	translocation_interchr	60	259	-1	3461	3461	3390	13570	heterozygous	1	71	-1.0	17633.48	469.21	-1.0	-1.0	0.17600000000000002	+/+	0.56
325	352	2	11	20489643.6	20489643.6	18276181.0	75620387.0	0.34	translocation_interchr	58	264	-1	3250	3250	3390	13570	heterozygous	1	71	-1.0	296.6	3655.27	-1.0	-1.0	0.172	+/+	0.53
321	351	2	11	20475757.8	20475757.8	18276181.0	75620387.0	0.83	translocation_interchr	57	263	-1	3250	3250	3390	13570	heterozygous	1	71	-1.0	296.0	3645.16	-1.0	-1.0	0.173	+/+	0.53
365	81	2	11	18918365.0	18918365.0	18276181.0	75620387.0	0.5	translocation_interchr	60	259	-1	3461	3461	3390	13570	heterozygous	1	71	-1.0	17633.48	469.21	-1.0	-1.0	0.17600000000000002	+/+	0.56
321	351	2	11	20475757.8	20475757.8	18276181.0	75620387.0	0.83	translocation_interchr	57	263	-1	3250	3250	3390	13570	heterozygous	1	71	-1.0	296.0	3645.16	-1.0	-1.0	0.173	+/+	0.53
409	82	2	11	18897062.0	18897062.0	18276181.0	75620387.0	0.21	translocation_interchr	61	260	-1	3455	3455	3390	13570	heterozygous	1	71	-1.0	17629.21	464.65	-1.0	-1.0	0.203	+/+	0.56
578	1381	2	2	-1422131.8	2027322.4	167609396.0	169331957.0	-1.0	duplication_split	83	85	-1	0	136	33384	33772	unknown	-1	-1	-1.0	85.25	81.64	-1.0	1722561.0	0.219	NA	0.26
579	1382	2	2	-1422131.8	2027717.1	167609396.0	169331957.0	-1.0	duplication_split	84	86	-1	0	123	33384	33772	unknown	-1	-1	-1.0	85.25	61.97	-1.0	1722561.0	0.201	NA	0.23
693	1442	3	9	324540.8	295622.1	13062759.0	84188185.0	0.34	translocation_interchr	89	225	-1	74	73	2623	13866	heterozygous	1	155	-1.0	50.01	81.07	-1.0	-1.0	0.241	-/-	0.63
694	1441	3	9	320375.7	291456.8	13062759.0	84188185.0	0.74	translocation_interchr	90	224	-1	73	72	2623	13866	heterozygous	1	155	-1.0	46.31	79.52	-1.0	-1.0	0.207	-/-	0.63
695	1280	3	9	323005.1	311674.1	13098379.0	84960052.0	0.85	translocation_interchr	91	226	-1	60	59	2624	14044	heterozygous	2	155	-1.0	55.82	78.04	-1.0	-1.0	0.311	+/+	0.52
853	1260	3	3	308550.8	321635.8	123062863.0	124576454.0	1.0	inversion	95	100	854	46	47	25111	25421	heterozygous	1	-1	-1.0	58.16	85.04	-1.0	302780.0	0.3	NA	0.22 122760083.0 124576454.0 left
854	1260	3	-1	5981.8	-1.0	122760083.0	-1.0	1.0	inversion_partial	95	-1	853	1	-1	25063	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	302780.0	0.3	NA	0.22
855	1522	3	3	60934.8	548833.4	124323374.0	124558617.0	-1.0	duplication_inverted	96	98	-1	13	101	25376	25420	unknown	-1	-1	-1.0	72.05	53.91	-1.0	235243.0	0.095	NA	0.13
856	1521	3	3	9975.6	470865.8	124337044.0	124558617.0	-1.0	duplication_inverted	97	99	-1	1	85	25378	25420	unknown	-1	-1	-1.0	53.91	56.22	-1.0	221573.0	0.158	NA	0.22
935	131	4	4	30577814.5	30584952.2	82336357.0	82891044.0	0.99	deletion	104	106	-1	6605	6607	16550	16668	heterozygous	1	-1	4317.82	8132.94	13218.43	4317.82	547549.3	0.481	NA	0.5
935	131	4	4	30577814.5	30584952.2	82336357.0	82891044.0	0.99	deletion	104	106	-1	6605	6607	16550	16668	heterozygous	1	-1	4317.82	8132.94	13218.43	4317.82	547549.3	0.481	NA	0.5
1201	11	5	5	278993.6	534776.6	70107744.0	71363699.0	0.01	deletion	115	120	-1	62	114	13865	14123	heterozygous	1	-1	0.01	122.31	28588.06	-1.0	1000172.0	0.203	NA	0.23
1553	1401	6	6	306077.1	306077.1	73236461.0	74143806.0	0.73	inversion	130	134	1554	65	65	14503	14677	heterozygous	1	360	-1.0	72.86	73.68	-1.0	303219.0	0.181	NA	0.35 72933242.0 74143806.0 left
1554	1401	6	-1	2360.8	-1.0	72933242.0	-1.0	0.73	inversion_partial	130	-1	1553	1	-1	14436	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	303219.0	0.181	NA	0.35
1555	1402	6	6	306119.5	306119.5	73236461.0	74143806.0	0.91	inversion	131	135	1556	65	65	14503	14677	heterozygous	1	360	-1.0	72.68	74.5	-1.0	303219.0	0.194	NA	0.35 72933242.0 74143806.0 left
1556	1402	6	-1	2403.1	-1.0	72933242.0	-1.0	0.91	inversion_partial	131	-1	1555	1	-1	14436	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	303219.0	0.194	NA	0.35
1557	1500	6	6	14255.5	550940.4	73872683.0	74139329.0	-1.0	duplication_inverted	132	133	-1	1	111	14620	14676	unknown	-1	-1	-1.0	82.49	73.78	-1.0	266646.0	0.35700000000000004	NA	0.38
1848	171	8	8	62559340.8	62568555.1	81258723.0	82543623.0	0.99	deletion	156	161	-1	12612	12613	15919	16191	heterozygous	1	425	86.8	86.8	15840.25	4368.75	1275685.7	0.217	NA	0.55
1848	171	8	8	62559340.8	62568555.1	81258723.0	82543623.0	0.99	deletion	156	161	-1	12612	12613	15919	16191	heterozygous	1	425	86.8	86.8	15840.25	4368.75	1275685.7	0.217	NA	0.55
1850	710	8	9	1598359.9	1601777.8	82535852.0	28058760.0	0.34	translocation_interchr	157	168	-1	344	345	16190	6345	heterozygous	1	426	-1.0	430.56	81.4	-1.0	-1.0	0.321	+/+	0.42
1851	172	8	8	62553894.2	62563108.5	81258723.0	82543623.0	0.99	deletion	158	162	-1	12615	12616	15919	16191	heterozygous	1	425	81.29	81.29	15845.99	4368.75	1275685.7	0.147	NA	0.55
1851	172	8	8	62553894.2	62563108.5	81258723.0	82543623.0	0.99	deletion	158	162	-1	12615	12616	15919	16191	heterozygous	1	425	81.29	81.29	15845.99	4368.75	1275685.7	0.147	NA	0.55
1852	1230	8	9	326394.5	325500.6	81261655.0	28056026.0	0.7	translocation_interchr	159	167	-1	69	68	15920	6343	heterozygous	2	426	-1.0	83.98	85.36	-1.0	-1.0	0.39	+/+	0.51
2023	1121	9	9	150317.3	260767.8	61552686.0	65594150.0	0.01	deletion	192	212	-1	21	40	9387	10011	heterozygous	1	467	0.01	55.03	48.56	-1.0	3931013.5	0.141	NA	0.13
2045	152	9	9	16046817.7	16050877.8	84184814.0	84965036.0	0.99	deletion	222	227	-1	3447	3448	13865	14045	heterozygous	1	475	4198.99	4198.99	12267.92	4385.63	776161.9	0.25	NA	0.46
2045	152	9	9	16046817.7	16050877.8	84184814.0	84965036.0	0.99	deletion	222	227	-1	3447	3448	13865	14045	heterozygous	1	475	4198.99	4198.99	12267.92	4385.63	776161.9	0.25	NA	0.46
2179	1661	10	10	153630.4	268747.5	45876427.0	49960781.0	0.01	deletion	235	247	-1	30	60	8627	9365	heterozygous	1	501	0.01	73.87	68.58	-1.0	3969237.0	0.081	NA	0.09
2183	1302	10	10	250044.7	250044.7	46991592.0	47870426.5	0.95	inversion	238	245	2184	34	34	8849	8998	heterozygous	1	502	-1.0	106.98	76.75	-1.0	189840.5	0.07400000000000001	NA	0.19 46991592.0 48060267.0 right
2184	1302	10	-1	60263.3	-1.0	48060267.0	-1.0	0.95	inversion_partial	245	-1	2183	1	-1	9033	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	189840.5	0.07400000000000001	NA	0.19
2185	1301	10	10	227503.6	227503.6	46991592.0	47870426.5	0.93	inversion	239	244	2186	34	34	8849	8998	heterozygous	1	502	-1.0	87.39	77.0	-1.0	189840.5	0.087	NA	0.19 46991592.0 48060267.0 right
2186	1301	10	-1	37360.1	-1.0	48060267.0	-1.0	0.93	inversion_partial	244	-1	2185	1	-1	9033	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	189840.5	0.087	NA	0.19
2188	1240	10	10	360540.3	360540.3	47213220.0	48060267.0	0.96	inversion	241	246	2189	67	67	8894	9033	heterozygous	2	502	-1.0	87.04	92.22	-1.0	221628.0	0.193	NA	0.19 46991592.0 48060267.0 left
2189	1240	10	-1	581923.9	-1.0	46991592.0	-1.0	0.96	inversion_partial	241	-1	2188	109	-1	8849	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	221628.0	0.193	NA	0.19
2366	351	11	11	19298192.8	20475757.8	73784783.5	75620387.0	0.99	deletion	255	263	-1	3013	3250	13180	13570	heterozygous	1	533	570.3	4083.19	3645.16	570.3	658038.5	0.25	NA	0.53
2366	351	11	11	19298192.8	20475757.8	73784783.5	75620387.0	0.99	deletion	255	263	-1	3013	3250	13180	13570	heterozygous	1	533	570.3	4083.19	3645.16	570.3	658038.5	0.25	NA	0.53
2368	352	11	11	19311731.9	20489643.6	73784783.5	75620387.0	0.99	deletion	256	264	-1	3013	3250	13180	13570	heterozygous	1	533	569.7	4082.45	3655.27	569.7	657691.8	0.261	NA	0.53
2368	352	11	11	19311731.9	20489643.6	73784783.5	75620387.0	0.99	deletion	256	264	-1	3013	3250	13180	13570	heterozygous	1	533	569.7	4082.45	3655.27	569.7	657691.8	0.261	NA	0.53
2515	61	12	12	26528796.8	26533539.4	63786531.0	63788671.0	1.0	inversion	269	272	2516	5169	5170	12457	12458	heterozygous	1	574	-1.0	6450.03	452.15	-1.0	1645398.0	0.157	NA	0.92 63786531.0 65434069.0 right
2516	61	12	-1	28178771.2	-1.0	65434069.0	-1.0	1.0	inversion_partial	272	-1	2515	5546	-1	12836	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1645398.0	0.157	NA	0.92
2538	62	12	12	26529025.2	26533767.8	63786531.0	63788671.0	1.0	inversion	270	273	2539	5171	5172	12457	12458	heterozygous	1	574	-1.0	6451.65	452.47	-1.0	1645398.0	0.128	NA	0.92 63786531.0 65434069.0 right
2539	62	12	-1	28178999.6	-1.0	65434069.0	-1.0	1.0	inversion_partial	273	-1	2538	5548	-1	12836	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1645398.0	0.128	NA	0.92
2541	61	12	12	28178771.2	28179341.3	65434069.0	65437243.0	1.0	inversion	272	277	2542	5546	5547	12836	12837	heterozygous	1	575	-1.0	452.15	16691.8	-1.0	1645398.0	0.235	NA	0.92 63788671.0 65437243.0 left
2542	61	12	-1	26533539.4	-1.0	63788671.0	-1.0	1.0	inversion_partial	272	-1	2541	5170	-1	12458	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1645398.0	0.235	NA	0.92
2543	62	12	12	28178999.6	28179569.7	65434069.0	65437243.0	1.0	inversion	273	276	2544	5548	5549	12836	12837	heterozygous	1	575	-1.0	452.47	16673.25	-1.0	1645398.0	0.227	NA	0.92 63788671.0 65437243.0 left
2544	62	12	-1	26533767.8	-1.0	63788671.0	-1.0	1.0	inversion_partial	273	-1	2543	5172	-1	12458	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1645398.0	0.227	NA	0.92
2801	1370	13	13	-213775.6	815445.8	50480710.0	50994566.0	-1.0	duplication_split	280	281	-1	0	131	6668	6784	unknown	-1	-1	-1.0	79.38	84.26	-1.0	513856.0	0.228	NA	0.21
2909	552	15	15	1656077.3	2037144.8	21391082.5	22214510.0	0.01	deletion	291	295	-1	236	313	250	407	heterozygous	1	-1	0.01	405.74	1942.71	-1.0	442360.0	0.403	NA	0.37
2945	141	15	15	38466178.2	38474518.8	63471437.0	63473162.0	1.0	inversion	299	303	2946	7215	7216	8900	8901	heterozygous	1	668	-1.0	8237.74	463.01	-1.0	1944556.0	0.237	NA	0.94 63471437.0 65417718.0 right
2946	141	15	-1	36522014.8	-1.0	65417718.0	-1.0	1.0	inversion_partial	303	-1	2945	6860	-1	9264	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1944556.0	0.237	NA	0.94
2961	142	15	15	38442524.3	38450865.0	63471437.0	63473162.0	1.0	inversion	300	304	2962	7206	7207	8900	8901	heterozygous	1	668	-1.0	8259.08	463.08	-1.0	1944556.0	0.23	NA	0.94 63471437.0 65417718.0 right
2962	142	15	-1	36498360.9	-1.0	65417718.0	-1.0	1.0	inversion_partial	304	-1	2961	6851	-1	9264	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1944556.0	0.23	NA	0.94
2963	141	15	15	36503384.2	36522014.8	65417718.0	65442966.0	1.0	inversion	303	307	2964	6859	6860	9264	9265	heterozygous	1	669	-1.0	463.01	8847.67	-1.0	1944556.0	0.202	NA	0.94 63473162.0 65442966.0 left
2964	141	15	-1	38466178.2	-1.0	63473162.0	-1.0	1.0	inversion_partial	303	-1	2963	7215	-1	8901	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1944556.0	0.202	NA	0.94
2965	142	15	15	36479730.3	36498360.9	65417718.0	65442966.0	1.0	inversion	304	306	2966	6850	6851	9264	9265	heterozygous	1	669	-1.0	463.08	8831.51	-1.0	1944556.0	0.193	NA	0.94 63473162.0 65442966.0 left
2966	142	15	-1	38442524.3	-1.0	63473162.0	-1.0	1.0	inversion_partial	304	-1	2965	7206	-1	8901	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1944556.0	0.193	NA	0.94
3028	1621	16	16	245938.5	245938.5	21500434.0	22240599.0	0.74	inversion	322	323	3029	38	38	3551	3683	heterozygous	1	-1	-1.0	46.97	67.06	-1.0	198203.0	0.091	NA	0.08 21500434.0 22438802.0 right
3029	1621	16	-1	443841.7	-1.0	22438802.0	-1.0	0.74	inversion_partial	323	-1	3028	71	-1	3717	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	198203.0	0.091	NA	0.08
3126	222	17	17	36499511.1	36700216.3	46284336.0	46702870.0	0.01	deletion	336	340	-1	6311	6345	6912	6986	heterozygous	1	707	0.01	4326.36	8279.84	-1.0	217828.7	0.259	NA	0.31
3194	1460	17	17	-473794.3	1074461.0	71089691.0	71863978.0	-1.0	duplication_split	341	342	-1	0	111	11714	11877	unknown	-1	-1	-1.0	79.03	66.48	-1.0	774287.0	0.18	NA	0.18
0 1 14454 2 H [1]
1 1 40512185.0 2 T [0, 2]
2 1 40517987.5 3 H [1, 3, 6]
3 1 41774747.0 3 T [2, 3, 4]
4 1 41774748.0 2 H [3, 5]
5 1 41936520.0 2 T [4, 6]
6 1 41936521.0 2 H [2, 5, 7]
7 1 147055819.0 2 T [8, 10, 6]
8 1 147055820.0 1 H [9, 7]
9 1 148404176.0 1 T [8, 10]
10 1 148404177.0 2 H [9, 11, 7]
11 1 185127593.5 2 T [10, 12, 14]
12 1 185127594.5 2 H [11, 13]
13 1 185956641.0 2 T [58, 12, 14]
14 1 185956642.0 2 H [11, 13, 15]
15 1 248943332.0 2 T [14]
16 2 15925.0 2 H [17]
17 2 17108121.5 2 T [16, 18, 80, 20]
18 2 17108122.5 2 H [17, 19, 79]
19 2 18276181.0 2 T [18, 20, 82]
20 2 18276182.0 2 H [81, 17, 19, 21]
21 2 167593131.0 2 T [20, 22]
22 2 167593132.0 3 H [21, 23]
23 2 169252765.0 3 T [24, 22]
24 2 169252766 2 H [25, 23]
25 2 242181356 2 T [24]
26 3 12920.0 2 H [27]
27 3 13080569.0 2 T [26, 28, 68]
28 3 13080570.0 2 H [27, 69, 29]
29 3 122760083.0 2 T [28, 30]
30 3 122760084.0 2 H [36, 29, 31]
31 3 122825619.0 2 T [32, 30]
32 3 122825620.0 3 H [33, 31]
33 3 124474912.0 3 T [32, 33, 34]
34 3 124474913.0 2 H [33, 35]
35 3 124576454.0 2 T [34, 36]
36 3 124576455.0 2 H [35, 37, 30]
37 3 198230595.0 2 T [36]
38 4 12986 2 H [39]
39 4 82336356.0 2 T [40, 42, 38]
40 4 82336357.0 1 H [41, 39]
41 4 82929518.0 1 T [40, 42]
42 4 82929519 2 H [41, 43, 39]
43 4 190202563 2 T [42]
44 5 0 2 H [45]
45 5 181472714 2 T [44]
46 6 76217 2 H [47]
47 6 72930097.0 2 T [48, 46]
48 6 72931670.0 3 H [49, 52, 47]
49 6 74063873.0 3 T [48, 49, 50]
50 6 74063874.0 2 H [49, 51]
51 6 74143806.0 2 T [50, 52]
52 6 74143807.0 2 H [48, 51, 53]
53 6 170739896.0 2 T [52]
54 7 0 2 H [55]
55 7 159334984 2 T [54]
56 8 0.0 2 H [57]
57 8 32875965.0 2 T [56, 58]
58 8 32875966.0 2 H [57, 59, 13]
59 8 81260189.0 2 T [58, 60, 62]
60 8 81260190.0 2 H [65, 59, 61]
61 8 82539737.5 2 T [66, 60, 62]
62 8 82539738.5 2 H [59, 61, 63]
63 8 145076125.0 2 T [62]
64 9 0.0 2 H [65]
65 9 28057393.0 2 T [64, 66, 60]
66 9 28057394.0 2 H [65, 67, 61]
67 9 84186499.5 2 T [66, 68, 70]
68 9 84186500.5 2 H [27, 67, 69]
69 9 84962544.0 2 T [68, 28, 70]
70 9 84962545.0 2 H [67, 69, 71]
71 9 138334464.0 2 T [70]
72 10 0.0 2 H [73]
73 10 46991592.0 2 T [72, 74, 75]
74 10 46991593.0 2 H [73, 75, 76]
75 10 48060267.0 2 T [73, 74, 76]
76 10 48060268.0 2 H [74, 75, 77]
77 10 133785266.0 2 T [76]
78 11 0.0 2 H [79]
79 11 73792025.75 2 T [80, 18, 82, 78]
80 11 73792026.75 2 H [81, 17, 79]
81 11 75620387.0 2 T [80, 82, 20]
82 11 75620388.0 2 H [81, 83, 19, 79]
83 11 135069565.0 2 T [82]
84 12 0.0 2 H [85]
85 12 63787601.0 2 T [84, 86, 87]
86 12 63787602.0 2 H [88, 85, 87]
87 12 65435656.0 2 T [88, 85, 86]
88 12 65435657.0 2 H [89, 86, 87]
89 12 133263960.0 2 T [88]
90 13 16004726 2 H [91]
91 13 50480709.0 2 T [90, 92]
92 13 50480710.0 3 H [91, 93]
93 13 50993749.0 3 T [92, 94]
94 13 50993750 2 H [93, 95]
95 13 114352101 2 T [94]
96 14 0 2 H [97]
97 14 106873282 2 T [96]
98 15 0.0 2 H [99]
99 15 63472299.5 2 T [98, 100, 101]
100 15 63472300.5 2 H [99, 101, 102]
101 15 65430342.0 2 T [99, 100, 102]
102 15 65430343.0 2 H [100, 101, 103]
103 15 101976509.0 2 T [102]
104 16 0.0 2 H [105]
105 16 21500434.0 2 T [104, 106, 107]
106 16 21500435.0 2 H [105, 107]
107 16 22438802.0 2 T [105, 106, 108]
108 16 22438803.0 2 H [107, 109]
109 16 90224751.0 2 T [108]
110 17 66654 2 H [111]
111 17 71115536.0 2 T [112, 110]
112 17 71115537.0 3 H [113, 111]
113 17 71780527.0 3 T [112, 114]
114 17 71780528 2 H [113, 115]
115 17 83246391 2 T [114]
116 18 0 2 H [117]
117 18 80256374 2 T [116]
118 19 0 2 H [119]
119 19 58605715 2 T [118]
120 20 0 2 H [121]
121 20 64333718 2 T [120]
122 21 0 2 H [123]
123 21 46697230 2 T [122]
124 22 0 2 H [125]
125 22 50805587 2 T [124]
126 23 0 1 H [127]
127 23 156025612 1 T [126]
128 24 0 1 H [129]
129 24 57212132 1 T [128]
Siavash
[(0, 1, 2, 'S'), (1, 2, 0, 'R'), (2, 3, 3, 'S'), (3, 4, 0, 'R'), (5, 4, 2, 'S'), (5, 6, 0, 'R'), (6, 7, 2, 'S'), (7, 8, 0, 'R'), (8, 9, 1, 'S'), (9, 10, 0, 'R'), (11, 10, 2, 'S'), (11, 12, 0, 'R'), (13, 12, 2, 'S'), (13, 14, 0, 'R'), (14, 15, 2, 'S'), (17, 16, 2, 'S'), (17, 18, 0, 'R'), (19, 18, 2, 'S'), (19, 20, 0, 'R'), (20, 21, 2, 'S'), (21, 22, 0, 'R'), (22, 23, 3, 'S'), (23, 24, 0, 'R'), (24, 25, 2, 'S'), (27, 26, 2, 'S'), (27, 28, 0, 'R'), (29, 28, 2, 'S'), (29, 30, 0, 'R'), (30, 31, 2, 'S'), (31, 32, 0, 'R'), (32, 33, 3, 'S'), (33, 34, 0, 'R'), (35, 34, 2, 'S'), (35, 36, 0, 'R'), (36, 37, 2, 'S'), (38, 39, 2, 'S'), (39, 40, 0, 'R'), (40, 41, 1, 'S'), (41, 42, 0, 'R'), (42, 43, 2, 'S'), (44, 45, 2, 'S'), (46, 47, 2, 'S'), (47, 48, 0, 'R'), (48, 49, 3, 'S'), (49, 50, 0, 'R'), (51, 50, 2, 'S'), (51, 52, 0, 'R'), (52, 53, 2, 'S'), (54, 55, 2, 'S'), (57, 56, 2, 'S'), (57, 58, 0, 'R'), (59, 58, 2, 'S'), (59, 60, 0, 'R'), (61, 60, 2, 'S'), (61, 62, 0, 'R'), (62, 63, 2, 'S'), (65, 64, 2, 'S'), (65, 66, 0, 'R'), (67, 66, 2, 'S'), (67, 68, 0, 'R'), (69, 68, 2, 'S'), (69, 70, 0, 'R'), (70, 71, 2, 'S'), (73, 72, 2, 'S'), (73, 74, 0, 'R'), (75, 74, 2, 'S'), (75, 76, 0, 'R'), (76, 77, 2, 'S'), (79, 78, 2, 'S'), (79, 80, 0, 'R'), (81, 80, 2, 'S'), (81, 82, 0, 'R'), (82, 83, 2, 'S'), (85, 84, 2, 'S'), (85, 86, 0, 'R'), (87, 86, 2, 'S'), (87, 88, 0, 'R'), (88, 89, 2, 'S'), (90, 91, 2, 'S'), (91, 92, 0, 'R'), (92, 93, 3, 'S'), (93, 94, 0, 'R'), (94, 95, 2, 'S'), (96, 97, 2, 'S'), (99, 98, 2, 'S'), (99, 100, 0, 'R'), (101, 100, 2, 'S'), (101, 102, 0, 'R'), (102, 103, 2, 'S'), (105, 104, 2, 'S'), (105, 106, 0, 'R'), (107, 106, 2, 'S'), (107, 108, 0, 'R'), (108, 109, 2, 'S'), (110, 111, 2, 'S'), (111, 112, 0, 'R'), (112, 113, 3, 'S'), (113, 114, 0, 'R'), (114, 115, 2, 'S'), (116, 117, 2, 'S'), (118, 119, 2, 'S'), (120, 121, 2, 'S'), (122, 123, 2, 'S'), (124, 125, 2, 'S'), (126, 127, 1, 'S'), (128, 129, 1, 'S'), (2, 6, 0, 'SV'), (3, 3, 0, 'SV'), (7, 10, 0, 'SV'), (11, 14, 0, 'SV'), (13, 58, 0, 'SV'), (17, 20, 0, 'SV'), (17, 80, 0, 'SV'), (18, 79, 0, 'SV'), (19, 82, 0, 'SV'), (20, 81, 0, 'SV'), (22, 23, 0, 'SV'), (27, 68, 0, 'SV'), (28, 69, 0, 'SV'), (30, 36, 0, 'SV'), (33, 33, 0, 'SV'), (39, 42, 0, 'SV'), (48, 52, 0, 'SV'), (49, 49, 0, 'SV'), (59, 62, 0, 'SV'), (61, 66, 0, 'SV'), (60, 65, 0, 'SV'), (67, 70, 0, 'SV'), (73, 75, 0, 'SV'), (74, 76, 0, 'SV'), (79, 82, 0, 'SV'), (85, 87, 0, 'SV'), (86, 88, 0, 'SV'), (92, 93, 0, 'SV'), (99, 101, 0, 'SV'), (100, 102, 0, 'SV'), (105, 107, 0, 'SV'), (112, 113, 0, 'SV')]
Siavash [(0, 1, 2, 'S'), (1, 2, 0, 'R'), (2, 3, 3, 'S'), (2, 6, 0, 'SV'), (3, 4, 0, 'R'), (5, 4, 2, 'S'), (5, 6, 0, 'R'), (6, 7, 2, 'S'), (7, 8, 0, 'R'), (7, 10, 0, 'SV'), (8, 9, 1, 'S'), (9, 10, 0, 'R'), (11, 10, 2, 'S'), (11, 12, 0, 'R'), (11, 14, 0, 'SV'), (13, 12, 2, 'S'), (13, 58, 0, 'SV'), (13, 14, 0, 'R'), (57, 58, 0, 'R'), (59, 58, 2, 'S'), (57, 56, 2, 'S'), (59, 60, 0, 'R'), (59, 62, 0, 'SV'), (60, 65, 0, 'SV'), (61, 60, 2, 'S'), (65, 64, 2, 'S'), (65, 66, 0, 'R'), (67, 66, 2, 'S'), (61, 66, 0, 'SV'), (67, 68, 0, 'R'), (67, 70, 0, 'SV'), (27, 68, 0, 'SV'), (69, 68, 2, 'S'), (27, 26, 2, 'S'), (27, 28, 0, 'R'), (28, 69, 0, 'SV'), (29, 28, 2, 'S'), (69, 70, 0, 'R'), (70, 71, 2, 'S'), (29, 30, 0, 'R'), (30, 36, 0, 'SV'), (30, 31, 2, 'S'), (35, 36, 0, 'R'), (36, 37, 2, 'S'), (35, 34, 2, 'S'), (33, 34, 0, 'R'), (32, 33, 3, 'S'), (31, 32, 0, 'R'), (61, 62, 0, 'R'), (62, 63, 2, 'S'), (14, 15, 2, 'S'), (3, 3, 0, 'SV'), (33, 33, 0, 'SV')]
Y0 (0, 1, 2, 'S')
X1 (1, 2, 0, 'R')
Y2 (2, 3, 3, 'S')
X3 (2, 6, 0, 'SV')
X4 (3, 4, 0, 'R')
Y5 (5, 4, 2, 'S')
X6 (5, 6, 0, 'R')
Y7 (6, 7, 2, 'S')
X8 (7, 8, 0, 'R')
X9 (7, 10, 0, 'SV')
Y10 (8, 9, 1, 'S')
X11 (9, 10, 0, 'R')
Y12 (11, 10, 2, 'S')
X13 (11, 12, 0, 'R')
X14 (11, 14, 0, 'SV')
Y15 (13, 12, 2, 'S')
X16 (13, 58, 0, 'SV')
X17 (13, 14, 0, 'R')
X18 (57, 58, 0, 'R')
Y19 (59, 58, 2, 'S')
Y20 (57, 56, 2, 'S')
X21 (59, 60, 0, 'R')
X22 (59, 62, 0, 'SV')
X23 (60, 65, 0, 'SV')
Y24 (61, 60, 2, 'S')
Y25 (65, 64, 2, 'S')
X26 (65, 66, 0, 'R')
Y27 (67, 66, 2, 'S')
X28 (61, 66, 0, 'SV')
X29 (67, 68, 0, 'R')
X30 (67, 70, 0, 'SV')
X31 (27, 68, 0, 'SV')
Y32 (69, 68, 2, 'S')
Y33 (27, 26, 2, 'S')
X34 (27, 28, 0, 'R')
X35 (28, 69, 0, 'SV')
Y36 (29, 28, 2, 'S')
X37 (69, 70, 0, 'R')
Y38 (70, 71, 2, 'S')
X39 (29, 30, 0, 'R')
X40 (30, 36, 0, 'SV')
Y41 (30, 31, 2, 'S')
X42 (35, 36, 0, 'R')
Y43 (36, 37, 2, 'S')
Y44 (35, 34, 2, 'S')
X45 (33, 34, 0, 'R')
Y46 (32, 33, 3, 'S')
X47 (31, 32, 0, 'R')
X48 (61, 62, 0, 'R')
Y49 (62, 63, 2, 'S')
Y50 (14, 15, 2, 'S')
X51 (3, 3, 0, 'SV')
X52 (33, 33, 0, 'SV')
A0 A0
B0 B0
A1 A1
B1 B1
A2 A2
B2 B2
A3 A3
B3 B3
A4 A4
B4 B4
A5 A5
B5 B5
A6 A6
B6 B6
A7 A7
B7 B7
A8 A8
B8 B8
A9 A9
B9 B9
A10 A10
B10 B10
A11 A11
B11 B11
A12 A12
B12 B12
A13 A13
B13 B13
A58 A58
B58 B58
A57 A57
B57 B57
A56 A56
B56 B56
A59 A59
B59 B59
A60 A60
B60 B60
A65 A65
B65 B65
A64 A64
B64 B64
A66 A66
B66 B66
A67 A67
B67 B67
A68 A68
B68 B68
A27 A27
B27 B27
A26 A26
B26 B26
A28 A28
B28 B28
A69 A69
B69 B69
A70 A70
B70 B70
A71 A71
B71 B71
A29 A29
B29 B29
A30 A30
B30 B30
A36 A36
B36 B36
A35 A35
B35 B35
A34 A34
B34 B34
A33 A33
B33 B33
A32 A32
B32 B32
A31 A31
B31 B31
A37 A37
B37 B37
A61 A61
B61 B61
A62 A62
B62 B62
A63 A63
B63 B63
A14 A14
B14 B14
A15 A15
B15 B15
obj -2*X1 - 2*X11 - 2*X13 - 2*X14 - 2*X16 - 2*X17 - 2*X18 - 2*X21 - 2*X22 - 2*X23 - 2*X26 - 2*X28 - 2*X29 - 2*X3 - 2*X30 - 2*X31 - 2*X34 - 2*X35 - 2*X37 - 2*X39 - 2*X4 - 2*X40 - 2*X42 - 2*X45 - 2*X47 - 2*X48 - 2*X51 - 2*X52 - 2*X6 - 2*X8 - 2*X9 - 2*Y0 - 2*Y10 - 2*Y12 - 2*Y15 - 2*Y19 - 2*Y2 - 2*Y20 - 2*Y24 - 2*Y25 - 2*Y27 - 2*Y32 - 2*Y33 - 2*Y36 - 2*Y38 - 2*Y41 - 2*Y43 - 2*Y44 - 2*Y46 - 2*Y49 - 2*Y5 - 2*Y50 - 2*Y7 + 90
Sv_sum T14 + 8*T16 + T22 + 8*T23 + 8*T28 + T3 + T30 + 8*T31 + 8*T35 + T40 + T51 + T52 + T9
CN_tune 36*Z0 + 6*Z10 + 16*Z12 + 2*Z15 + 20*Z19 + 6*Z2 + 28*Z20 + 2*Z24 + 24*Z25 + 24*Z27 + 2*Z32 + 12*Z33 + 44*Z36 + 44*Z38 + 2*Z41 + 60*Z43 + 2*Z44 + 6*Z46 + 52*Z49 + 2*Z5 + 52*Z50 + 44*Z7
obj B0 + B1 + B10 + B11 + B12 + B13 + B14 + B15 + B2 + B26 + B27 + B28 + B29 + B3 + B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 + B4 + B5 + B56 + B57 + B58 + B59 + B6 + B60 + B61 + B62 + B63 + B64 + B65 + B66 + B67 + B68 + B69 + B7 + B70 + B71 + B8 + B9 - 10*T14 - 80*T16 - 10*T22 - 80*T23 - 80*T28 - 10*T3 - 10*T30 - 80*T31 - 80*T35 - 10*T40 - 10*T51 - 10*T52 - 10*T9 - 20*X1 - 20*X11 - 20*X13 - 20*X14 - 20*X16 - 20*X17 - 20*X18 - 20*X21 - 20*X22 - 20*X23 - 20*X26 - 20*X28 - 20*X29 - 20*X3 - 20*X30 - 20*X31 - 20*X34 - 20*X35 - 20*X37 - 20*X39 - 20*X4 - 20*X40 - 20*X42 - 20*X45 - 20*X47 - 20*X48 - 20*X51 - 20*X52 - 20*X6 - 20*X8 - 20*X9 - 20*Y0 - 20*Y10 - 20*Y12 - 20*Y15 - 20*Y19 - 20*Y2 - 20*Y20 - 20*Y24 - 20*Y25 - 20*Y27 - 20*Y32 - 20*Y33 - 20*Y36 - 20*Y38 - 20*Y41 - 20*Y43 - 20*Y44 - 20*Y46 - 20*Y49 - 20*Y5 - 20*Y50 - 20*Y7 + 360*Z0 + 60*Z10 + 160*Z12 + 20*Z15 + 200*Z19 + 60*Z2 + 280*Z20 + 20*Z24 + 240*Z25 + 240*Z27 + 20*Z32 + 120*Z33 + 440*Z36 + 440*Z38 + 20*Z41 + 600*Z43 + 20*Z44 + 60*Z46 + 520*Z49 + 20*Z5 + 520*Z50 + 440*Z7 + 900
Problem:
MINIMIZE
1*B0 + 1*B1 + 1*B10 + 1*B11 + 1*B12 + 1*B13 + 1*B14 + 1*B15 + 1*B2 + 1*B26 + 1*B27 + 1*B28 + 1*B29 + 1*B3 + 1*B30 + 1*B31 + 1*B32 + 1*B33 + 1*B34 + 1*B35 + 1*B36 + 1*B37 + 1*B4 + 1*B5 + 1*B56 + 1*B57 + 1*B58 + 1*B59 + 1*B6 + 1*B60 + 1*B61 + 1*B62 + 1*B63 + 1*B64 + 1*B65 + 1*B66 + 1*B67 + 1*B68 + 1*B69 + 1*B7 + 1*B70 + 1*B71 + 1*B8 + 1*B9 + -10*T14 + -80*T16 + -10*T22 + -80*T23 + -80*T28 + -10*T3 + -10*T30 + -80*T31 + -80*T35 + -10*T40 + -10*T51 + -10*T52 + -10*T9 + -20*X1 + -20*X11 + -20*X13 + -20*X14 + -20*X16 + -20*X17 + -20*X18 + -20*X21 + -20*X22 + -20*X23 + -20*X26 + -20*X28 + -20*X29 + -20*X3 + -20*X30 + -20*X31 + -20*X34 + -20*X35 + -20*X37 + -20*X39 + -20*X4 + -20*X40 + -20*X42 + -20*X45 + -20*X47 + -20*X48 + -20*X51 + -20*X52 + -20*X6 + -20*X8 + -20*X9 + -20*Y0 + -20*Y10 + -20*Y12 + -20*Y15 + -20*Y19 + -20*Y2 + -20*Y20 + -20*Y24 + -20*Y25 + -20*Y27 + -20*Y32 + -20*Y33 + -20*Y36 + -20*Y38 + -20*Y41 + -20*Y43 + -20*Y44 + -20*Y46 + -20*Y49 + -20*Y5 + -20*Y50 + -20*Y7 + 360*Z0 + 60*Z10 + 160*Z12 + 20*Z15 + 200*Z19 + 60*Z2 + 280*Z20 + 20*Z24 + 240*Z25 + 240*Z27 + 20*Z32 + 120*Z33 + 440*Z36 + 440*Z38 + 20*Z41 + 600*Z43 + 20*Z44 + 60*Z46 + 520*Z49 + 20*Z5 + 520*Z50 + 440*Z7 + 900
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: X8 >= 1

_C20: - 10 T9 + X9 <= 0

_C21: - T9 + X9 >= 0

_C22: X9 >= 0

_C23: Y10 + Z10 >= 0

_C24: - Y10 + Z10 >= 0

_C25: Z10 <= 1

_C26: X11 >= 1

_C27: Y12 + Z12 >= 0

_C28: - Y12 + Z12 >= 0

_C29: Z12 <= 1

_C30: X13 >= 1

_C31: - 10 T14 + X14 <= 0

_C32: - T14 + X14 >= 0

_C33: X14 >= 0

_C34: Y15 + Z15 >= 0

_C35: - Y15 + Z15 >= 0

_C36: Z15 <= 1

_C37: - 10 T16 + X16 <= 0

_C38: - T16 + X16 >= 0

_C39: X16 >= 0

_C40: X17 >= 1

_C41: X18 >= 1

_C42: Y19 + Z19 >= 0

_C43: - Y19 + Z19 >= 0

_C44: Z19 <= 1

_C45: Y20 + Z20 >= 0

_C46: - Y20 + Z20 >= 0

_C47: Z20 <= 1

_C48: X21 >= 1

_C49: - 10 T22 + X22 <= 0

_C50: - T22 + X22 >= 0

_C51: X22 >= 0

_C52: - 10 T23 + X23 <= 0

_C53: - T23 + X23 >= 0

_C54: X23 >= 0

_C55: Y24 + Z24 >= 0

_C56: - Y24 + Z24 >= 0

_C57: Z24 <= 1

_C58: Y25 + Z25 >= 0

_C59: - Y25 + Z25 >= 0

_C60: Z25 <= 1

_C61: X26 >= 1

_C62: Y27 + Z27 >= 0

_C63: - Y27 + Z27 >= 0

_C64: Z27 <= 1

_C65: - 10 T28 + X28 <= 0

_C66: - T28 + X28 >= 0

_C67: X28 >= 0

_C68: X29 >= 1

_C69: - 10 T30 + X30 <= 0

_C70: - T30 + X30 >= 0

_C71: X30 >= 0

_C72: - 10 T31 + X31 <= 0

_C73: - T31 + X31 >= 0

_C74: X31 >= 0

_C75: Y32 + Z32 >= 0

_C76: - Y32 + Z32 >= 0

_C77: Z32 <= 1

_C78: Y33 + Z33 >= 0

_C79: - Y33 + Z33 >= 0

_C80: Z33 <= 1

_C81: X34 >= 1

_C82: - 10 T35 + X35 <= 0

_C83: - T35 + X35 >= 0

_C84: X35 >= 0

_C85: Y36 + Z36 >= 0

_C86: - Y36 + Z36 >= 0

_C87: Z36 <= 1

_C88: X37 >= 1

_C89: Y38 + Z38 >= 0

_C90: - Y38 + Z38 >= 0

_C91: Z38 <= 1

_C92: X39 >= 1

_C93: - 10 T40 + X40 <= 0

_C94: - T40 + X40 >= 0

_C95: X40 >= 0

_C96: Y41 + Z41 >= 0

_C97: - Y41 + Z41 >= 0

_C98: Z41 <= 1

_C99: X42 >= 1

_C100: Y43 + Z43 >= 0

_C101: - Y43 + Z43 >= 0

_C102: Z43 <= 1

_C103: Y44 + Z44 >= 0

_C104: - Y44 + Z44 >= 0

_C105: Z44 <= 1

_C106: X45 >= 1

_C107: Y46 + Z46 >= 0

_C108: - Y46 + Z46 >= 0

_C109: Z46 <= 1

_C110: X47 >= 1

_C111: X48 >= 1

_C112: Y49 + Z49 >= 0

_C113: - Y49 + Z49 >= 0

_C114: Z49 <= 1

_C115: Y50 + Z50 >= 0

_C116: - Y50 + Z50 >= 0

_C117: Z50 <= 1

_C118: - 10 T51 + X51 <= 0

_C119: - T51 + X51 >= 0

_C120: X51 >= 0

_C121: - 10 T52 + X52 <= 0

_C122: - T52 + X52 >= 0

_C123: X52 >= 0

_C124: - 2 A0 - B0 - Y0 = -2

_C125: X1 + Y0 <= 2

_C126: - 2 A1 - B1 + X1 + Y0 = -2

_C127: X1 + X3 + Y2 <= 3

_C128: - 2 A2 - B2 + X1 + X3 + Y2 = -3

_C129: X4 + 2 X51 + Y2 <= 3

_C130: - 2 A3 - B3 + X4 + 2 X51 + Y2 = -3

_C131: X4 + Y5 <= 2

_C132: - 2 A4 - B4 + X4 + Y5 = -2

_C133: X6 + Y5 <= 2

_C134: - 2 A5 - B5 + X6 + Y5 = -2

_C135: X3 + X6 + Y7 <= 2

_C136: - 2 A6 - B6 + X3 + X6 + Y7 = -2

_C137: X8 + X9 + Y7 <= 2

_C138: - 2 A7 - B7 + X8 + X9 + Y7 = -2

_C139: X8 + Y10 <= 1

_C140: - 2 A8 - B8 + X8 + Y10 = -1

_C141: X11 + Y10 <= 1

_C142: - 2 A9 - B9 + X11 + Y10 = -1

_C143: X11 + X9 + Y12 <= 2

_C144: - 2 A10 - B10 + X11 + X9 + Y12 = -2

_C145: X13 + X14 + Y12 <= 2

_C146: - 2 A11 - B11 + X13 + X14 + Y12 = -2

_C147: X13 + Y15 <= 2

_C148: - 2 A12 - B12 + X13 + Y15 = -2

_C149: X16 + X17 + Y15 <= 2

_C150: - 2 A13 - B13 + X16 + X17 + Y15 = -2

_C151: X16 + X18 + Y19 <= 2

_C152: - 2 A58 - B58 + X16 + X18 + Y19 = -2

_C153: X18 + Y20 <= 2

_C154: - 2 A57 - B57 + X18 + Y20 = -2

_C155: - 2 A56 - B56 - Y20 = -2

_C156: X21 + X22 + Y19 <= 2

_C157: - 2 A59 - B59 + X21 + X22 + Y19 = -2

_C158: X21 + X23 + Y24 <= 2

_C159: - 2 A60 - B60 + X21 + X23 + Y24 = -2

_C160: X23 + X26 + Y25 <= 2

_C161: - 2 A65 - B65 + X23 + X26 + Y25 = -2

_C162: - 2 A64 - B64 - Y25 = -2

_C163: X26 + X28 + Y27 <= 2

_C164: - 2 A66 - B66 + X26 + X28 + Y27 = -2

_C165: X29 + X30 + Y27 <= 2

_C166: - 2 A67 - B67 + X29 + X30 + Y27 = -2

_C167: X29 + X31 + Y32 <= 2

_C168: - 2 A68 - B68 + X29 + X31 + Y32 = -2

_C169: X31 + X34 + Y33 <= 2

_C170: - 2 A27 - B27 + X31 + X34 + Y33 = -2

_C171: - 2 A26 - B26 - Y33 = -2

_C172: X34 + X35 + Y36 <= 2

_C173: - 2 A28 - B28 + X34 + X35 + Y36 = -2

_C174: X35 + X37 + Y32 <= 2

_C175: - 2 A69 - B69 + X35 + X37 + Y32 = -2

_C176: X30 + X37 + Y38 <= 2

_C177: - 2 A70 - B70 + X30 + X37 + Y38 = -2

_C178: - 2 A71 - B71 - Y38 = -2

_C179: X39 + Y36 <= 2

_C180: - 2 A29 - B29 + X39 + Y36 = -2

_C181: X39 + X40 + Y41 <= 2

_C182: - 2 A30 - B30 + X39 + X40 + Y41 = -2

_C183: X40 + X42 + Y43 <= 2

_C184: - 2 A36 - B36 + X40 + X42 + Y43 = -2

_C185: X42 + Y44 <= 2

_C186: - 2 A35 - B35 + X42 + Y44 = -2

_C187: X45 + Y44 <= 2

_C188: - 2 A34 - B34 + X45 + Y44 = -2

_C189: X45 + 2 X52 + Y46 <= 3

_C190: - 2 A33 - B33 + X45 + 2 X52 + Y46 = -3

_C191: X47 + Y46 <= 3

_C192: - 2 A32 - B32 + X47 + Y46 = -3

_C193: X47 + Y41 <= 2

_C194: - 2 A31 - B31 + X47 + Y41 = -2

_C195: - 2 A37 - B37 - Y43 = -2

_C196: X28 + X48 + Y24 <= 2

_C197: - 2 A61 - B61 + X28 + X48 + Y24 = -2

_C198: X22 + X48 + Y49 <= 2

_C199: - 2 A62 - B62 + X22 + X48 + Y49 = -2

_C200: - 2 A63 - B63 - Y49 = -2

_C201: X14 + X17 + Y50 <= 2

_C202: - 2 A14 - B14 + X14 + X17 + Y50 = -2

_C203: - 2 A15 - B15 - Y50 = -2

VARIABLES
0 <= A0 Integer
0 <= A1 Integer
0 <= A10 Integer
0 <= A11 Integer
0 <= A12 Integer
0 <= A13 Integer
0 <= A14 Integer
0 <= A15 Integer
0 <= A2 Integer
0 <= A26 Integer
0 <= A27 Integer
0 <= A28 Integer
0 <= A29 Integer
0 <= A3 Integer
0 <= A30 Integer
0 <= A31 Integer
0 <= A32 Integer
0 <= A33 Integer
0 <= A34 Integer
0 <= A35 Integer
0 <= A36 Integer
0 <= A37 Integer
0 <= A4 Integer
0 <= A5 Integer
0 <= A56 Integer
0 <= A57 Integer
0 <= A58 Integer
0 <= A59 Integer
0 <= A6 Integer
0 <= A60 Integer
0 <= A61 Integer
0 <= A62 Integer
0 <= A63 Integer
0 <= A64 Integer
0 <= A65 Integer
0 <= A66 Integer
0 <= A67 Integer
0 <= A68 Integer
0 <= A69 Integer
0 <= A7 Integer
0 <= A70 Integer
0 <= A71 Integer
0 <= A8 Integer
0 <= A9 Integer
0 <= B0 <= 1 Integer
0 <= B1 <= 1 Integer
0 <= B10 <= 1 Integer
0 <= B11 <= 1 Integer
0 <= B12 <= 1 Integer
0 <= B13 <= 1 Integer
0 <= B14 <= 1 Integer
0 <= B15 <= 1 Integer
0 <= B2 <= 1 Integer
0 <= B26 <= 1 Integer
0 <= B27 <= 1 Integer
0 <= B28 <= 1 Integer
0 <= B29 <= 1 Integer
0 <= B3 <= 1 Integer
0 <= B30 <= 1 Integer
0 <= B31 <= 1 Integer
0 <= B32 <= 1 Integer
0 <= B33 <= 1 Integer
0 <= B34 <= 1 Integer
0 <= B35 <= 1 Integer
0 <= B36 <= 1 Integer
0 <= B37 <= 1 Integer
0 <= B4 <= 1 Integer
0 <= B5 <= 1 Integer
0 <= B56 <= 1 Integer
0 <= B57 <= 1 Integer
0 <= B58 <= 1 Integer
0 <= B59 <= 1 Integer
0 <= B6 <= 1 Integer
0 <= B60 <= 1 Integer
0 <= B61 <= 1 Integer
0 <= B62 <= 1 Integer
0 <= B63 <= 1 Integer
0 <= B64 <= 1 Integer
0 <= B65 <= 1 Integer
0 <= B66 <= 1 Integer
0 <= B67 <= 1 Integer
0 <= B68 <= 1 Integer
0 <= B69 <= 1 Integer
0 <= B7 <= 1 Integer
0 <= B70 <= 1 Integer
0 <= B71 <= 1 Integer
0 <= B8 <= 1 Integer
0 <= B9 <= 1 Integer
0 <= T14 <= 1 Integer
0 <= T16 <= 1 Integer
0 <= T22 <= 1 Integer
0 <= T23 <= 1 Integer
0 <= T28 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= T30 <= 1 Integer
0 <= T31 <= 1 Integer
0 <= T35 <= 1 Integer
0 <= T40 <= 1 Integer
0 <= T51 <= 1 Integer
0 <= T52 <= 1 Integer
0 <= T9 <= 1 Integer
0 <= X1 Integer
0 <= X11 Integer
0 <= X13 Integer
0 <= X14 Integer
0 <= X16 Integer
0 <= X17 Integer
0 <= X18 Integer
0 <= X21 Integer
0 <= X22 Integer
0 <= X23 Integer
0 <= X26 Integer
0 <= X28 Integer
0 <= X29 Integer
0 <= X3 Integer
0 <= X30 Integer
0 <= X31 Integer
0 <= X34 Integer
0 <= X35 Integer
0 <= X37 Integer
0 <= X39 Integer
0 <= X4 Integer
0 <= X40 Integer
0 <= X42 Integer
0 <= X45 Integer
0 <= X47 Integer
0 <= X48 Integer
0 <= X51 Integer
0 <= X52 Integer
0 <= X6 Integer
0 <= X8 Integer
0 <= X9 Integer
Y0 free Integer
Y10 free Integer
Y12 free Integer
Y15 free Integer
Y19 free Integer
Y2 free Integer
Y20 free Integer
Y24 free Integer
Y25 free Integer
Y27 free Integer
Y32 free Integer
Y33 free Integer
Y36 free Integer
Y38 free Integer
Y41 free Integer
Y43 free Integer
Y44 free Integer
Y46 free Integer
Y49 free Integer
Y5 free Integer
Y50 free Integer
Y7 free Integer
Z0 free Integer
Z10 free Integer
Z12 free Integer
Z15 free Integer
Z19 free Integer
Z2 free Integer
Z20 free Integer
Z24 free Integer
Z25 free Integer
Z27 free Integer
Z32 free Integer
Z33 free Integer
Z36 free Integer
Z38 free Integer
Z41 free Integer
Z43 free Integer
Z44 free Integer
Z46 free Integer
Z49 free Integer
Z5 free Integer
Z50 free Integer
Z7 free Integer

Optimal
[A0, A1, A10, A11, A12, A13, A14, A15, A2, A26, A27, A28, A29, A3, A30, A31, A32, A33, A34, A35, A36, A37, A4, A5, A56, A57, A58, A59, A6, A60, A61, A62, A63, A64, A65, A66, A67, A68, A69, A7, A70, A71, A8, A9, B0, B1, B10, B11, B12, B13, B14, B15, B2, B26, B27, B28, B29, B3, B30, B31, B32, B33, B34, B35, B36, B37, B4, B5, B56, B57, B58, B59, B6, B60, B61, B62, B63, B64, B65, B66, B67, B68, B69, B7, B70, B71, B8, B9, T14, T16, T22, T23, T28, T3, T30, T31, T35, T40, T51, T52, T9, X1, X11, X13, X14, X16, X17, X18, X21, X22, X23, X26, X28, X29, X3, X30, X31, X34, X35, X37, X39, X4, X40, X42, X45, X47, X48, X51, X52, X6, X8, X9, Y0, Y10, Y12, Y15, Y19, Y2, Y20, Y24, Y25, Y27, Y32, Y33, Y36, Y38, Y41, Y43, Y44, Y46, Y49, Y5, Y50, Y7, Z0, Z10, Z12, Z15, Z19, Z2, Z20, Z24, Z25, Z27, Z32, Z33, Z36, Z38, Z41, Z43, Z44, Z46, Z49, Z5, Z50, Z7]
1 2 2.0 R
9 10 1.0 R
11 12 1.0 R
11 14 1.0 SV
13 58 1.0 SV
13 14 1.0 R
57 58 1.0 R
59 60 1.0 R
59 62 1.0 SV
60 65 1.0 SV
65 66 1.0 R
61 66 1.0 SV
67 68 1.0 R
2 6 1.0 SV
67 70 1.0 SV
27 68 1.0 SV
27 28 1.0 R
28 69 1.0 SV
69 70 1.0 R
29 30 2.0 R
3 4 1.0 R
30 36 0.0 SV
35 36 2.0 R
33 34 1.0 R
31 32 2.0 R
61 62 1.0 R
3 3 1.0 SV
33 33 1.0 SV
5 6 1.0 R
7 8 1.0 R
7 10 1.0 SV
A0 = 1.0
A1 = 2.0
A10 = 2.0
A11 = 2.0
A12 = 1.0
A13 = 2.0
A14 = 2.0
A15 = 1.0
A2 = 3.0
A26 = 1.0
A27 = 2.0
A28 = 2.0
A29 = 2.0
A3 = 3.0
A30 = 2.0
A31 = 2.0
A32 = 2.0
A33 = 3.0
A34 = 1.0
A35 = 2.0
A36 = 2.0
A37 = 1.0
A4 = 2.0
A5 = 2.0
A56 = 1.0
A57 = 1.0
A58 = 2.0
A59 = 2.0
A6 = 2.0
A60 = 2.0
A61 = 2.0
A62 = 2.0
A63 = 1.0
A64 = 1.0
A65 = 2.0
A66 = 2.0
A67 = 2.0
A68 = 2.0
A69 = 2.0
A7 = 2.0
A70 = 2.0
A71 = 1.0
A8 = 1.0
A9 = 1.0
B0 = 0.0
B1 = 0.0
B10 = 0.0
B11 = 0.0
B12 = 1.0
B13 = 0.0
B14 = 0.0
B15 = 0.0
B2 = 0.0
B26 = 0.0
B27 = 0.0
B28 = 0.0
B29 = 0.0
B3 = 0.0
B30 = 0.0
B31 = 0.0
B32 = 1.0
B33 = 0.0
B34 = 1.0
B35 = 0.0
B36 = 0.0
B37 = 0.0
B4 = 0.0
B5 = 0.0
B56 = 0.0
B57 = 1.0
B58 = 0.0
B59 = 0.0
B6 = 0.0
B60 = 0.0
B61 = 0.0
B62 = 0.0
B63 = 0.0
B64 = 0.0
B65 = 0.0
B66 = 0.0
B67 = 0.0
B68 = 0.0
B69 = 0.0
B7 = 0.0
B70 = 0.0
B71 = 0.0
B8 = 0.0
B9 = 0.0
T14 = 1.0
T16 = 1.0
T22 = 1.0
T23 = 1.0
T28 = 1.0
T3 = 1.0
T30 = 1.0
T31 = 1.0
T35 = 1.0
T40 = 0.0
T51 = 1.0
T52 = 1.0
T9 = 1.0
X1 = 2.0
X11 = 1.0
X13 = 1.0
X14 = 1.0
X16 = 1.0
X17 = 1.0
X18 = 1.0
X21 = 1.0
X22 = 1.0
X23 = 1.0
X26 = 1.0
X28 = 1.0
X29 = 1.0
X3 = 1.0
X30 = 1.0
X31 = 1.0
X34 = 1.0
X35 = 1.0
X37 = 1.0
X39 = 2.0
X4 = 1.0
X40 = 0.0
X42 = 2.0
X45 = 1.0
X47 = 2.0
X48 = 1.0
X51 = 1.0
X52 = 1.0
X6 = 1.0
X8 = 1.0
X9 = 1.0
Y0 = 0.0
Y10 = 0.0
Y12 = 0.0
Y15 = 0.0
Y19 = 0.0
Y2 = 0.0
Y20 = 0.0
Y24 = 0.0
Y25 = 0.0
Y27 = 0.0
Y32 = 0.0
Y33 = 0.0
Y36 = 0.0
Y38 = 0.0
Y41 = 0.0
Y43 = 0.0
Y44 = 0.0
Y46 = 0.0
Y49 = 0.0
Y5 = 1.0
Y50 = 0.0
Y7 = 0.0
Z0 = 0.0
Z10 = 0.0
Z12 = 0.0
Z15 = 0.0
Z19 = 0.0
Z2 = 0.0
Z20 = 0.0
Z24 = 0.0
Z25 = 0.0
Z27 = 0.0
Z32 = 0.0
Z33 = 0.0
Z36 = 0.0
Z38 = 0.0
Z41 = 0.0
Z43 = 0.0
Z44 = 0.0
Z46 = 0.0
Z49 = 0.0
Z5 = 1.0
Z50 = 0.0
Z7 = 0.0
-246.0 Objective Answer
Siavash [(17, 16, 2, 'S'), (17, 18, 0, 'R'), (17, 20, 0, 'SV'), (17, 80, 0, 'SV'), (19, 18, 2, 'S'), (18, 79, 0, 'SV'), (19, 20, 0, 'R'), (19, 82, 0, 'SV'), (20, 81, 0, 'SV'), (20, 21, 2, 'S'), (81, 80, 2, 'S'), (81, 82, 0, 'R'), (79, 80, 0, 'R'), (79, 82, 0, 'SV'), (79, 78, 2, 'S'), (82, 83, 2, 'S'), (21, 22, 0, 'R'), (22, 23, 3, 'S'), (22, 23, 0, 'SV'), (23, 24, 0, 'R'), (24, 25, 2, 'S')]
Y0 (17, 16, 2, 'S')
X1 (17, 18, 0, 'R')
X2 (17, 20, 0, 'SV')
X3 (17, 80, 0, 'SV')
Y4 (19, 18, 2, 'S')
X5 (18, 79, 0, 'SV')
X6 (19, 20, 0, 'R')
X7 (19, 82, 0, 'SV')
X8 (20, 81, 0, 'SV')
Y9 (20, 21, 2, 'S')
Y10 (81, 80, 2, 'S')
X11 (81, 82, 0, 'R')
X12 (79, 80, 0, 'R')
X13 (79, 82, 0, 'SV')
Y14 (79, 78, 2, 'S')
Y15 (82, 83, 2, 'S')
X16 (21, 22, 0, 'R')
Y17 (22, 23, 3, 'S')
X18 (22, 23, 0, 'SV')
X19 (23, 24, 0, 'R')
Y20 (24, 25, 2, 'S')
A16 A16
B16 B16
A17 A17
B17 B17
A18 A18
B18 B18
A19 A19
B19 B19
A20 A20
B20 B20
A81 A81
B81 B81
A80 A80
B80 B80
A79 A79
B79 B79
A82 A82
B82 B82
A83 A83
B83 B83
A78 A78
B78 B78
A21 A21
B21 B21
A22 A22
B22 B22
A23 A23
B23 B23
A24 A24
B24 B24
A25 A25
B25 B25
obj -2*X1 - 2*X11 - 2*X12 - 2*X13 - 2*X16 - 2*X18 - 2*X19 - 2*X2 - 2*X3 - 2*X5 - 2*X6 - 2*X7 - 2*X8 - 2*Y0 - 2*Y10 - 2*Y14 - 2*Y15 - 2*Y17 - 2*Y20 - 2*Y4 - 2*Y9 + 34
Sv_sum T13 + T18 + T2 + 8*T3 + 8*T5 + 8*T7 + 8*T8
CN_tune 16*Z0 + 2*Z10 + 60*Z14 + 48*Z15 + 6*Z17 + 60*Z20 + 2*Z4 + 60*Z9
obj B16 + B17 + B18 + B19 + B20 + B21 + B22 + B23 + B24 + B25 + B78 + B79 + B80 + B81 + B82 + B83 - 10*T13 - 10*T18 - 10*T2 - 80*T3 - 80*T5 - 80*T7 - 80*T8 - 20*X1 - 20*X11 - 20*X12 - 20*X13 - 20*X16 - 20*X18 - 20*X19 - 20*X2 - 20*X3 - 20*X5 - 20*X6 - 20*X7 - 20*X8 - 20*Y0 - 20*Y10 - 20*Y14 - 20*Y15 - 20*Y17 - 20*Y20 - 20*Y4 - 20*Y9 + 160*Z0 + 20*Z10 + 600*Z14 + 480*Z15 + 60*Z17 + 600*Z20 + 20*Z4 + 600*Z9 + 340
Problem:
MINIMIZE
1*B16 + 1*B17 + 1*B18 + 1*B19 + 1*B20 + 1*B21 + 1*B22 + 1*B23 + 1*B24 + 1*B25 + 1*B78 + 1*B79 + 1*B80 + 1*B81 + 1*B82 + 1*B83 + -10*T13 + -10*T18 + -10*T2 + -80*T3 + -80*T5 + -80*T7 + -80*T8 + -20*X1 + -20*X11 + -20*X12 + -20*X13 + -20*X16 + -20*X18 + -20*X19 + -20*X2 + -20*X3 + -20*X5 + -20*X6 + -20*X7 + -20*X8 + -20*Y0 + -20*Y10 + -20*Y14 + -20*Y15 + -20*Y17 + -20*Y20 + -20*Y4 + -20*Y9 + 160*Z0 + 20*Z10 + 600*Z14 + 480*Z15 + 60*Z17 + 600*Z20 + 20*Z4 + 600*Z9 + 340
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: Y4 + Z4 >= 0

_C12: - Y4 + Z4 >= 0

_C13: Z4 <= 1

_C14: - 10 T5 + X5 <= 0

_C15: - T5 + X5 >= 0

_C16: X5 >= 0

_C17: X6 >= 1

_C18: - 10 T7 + X7 <= 0

_C19: - T7 + X7 >= 0

_C20: X7 >= 0

_C21: - 10 T8 + X8 <= 0

_C22: - T8 + X8 >= 0

_C23: X8 >= 0

_C24: Y9 + Z9 >= 0

_C25: - Y9 + Z9 >= 0

_C26: Z9 <= 1

_C27: Y10 + Z10 >= 0

_C28: - Y10 + Z10 >= 0

_C29: Z10 <= 1

_C30: X11 >= 1

_C31: X12 >= 1

_C32: - 10 T13 + X13 <= 0

_C33: - T13 + X13 >= 0

_C34: X13 >= 0

_C35: Y14 + Z14 >= 0

_C36: - Y14 + Z14 >= 0

_C37: Z14 <= 1

_C38: Y15 + Z15 >= 0

_C39: - Y15 + Z15 >= 0

_C40: Z15 <= 1

_C41: X16 >= 1

_C42: Y17 + Z17 >= 0

_C43: - Y17 + Z17 >= 0

_C44: Z17 <= 1

_C45: - 10 T18 + X18 <= 0

_C46: - T18 + X18 >= 0

_C47: X18 >= 0

_C48: X19 >= 1

_C49: Y20 + Z20 >= 0

_C50: - Y20 + Z20 >= 0

_C51: Z20 <= 1

_C52: - 2 A16 - B16 - Y0 = -2

_C53: X1 + X2 + X3 + Y0 <= 2

_C54: - 2 A17 - B17 + X1 + X2 + X3 + Y0 = -2

_C55: X1 + X5 + Y4 <= 2

_C56: - 2 A18 - B18 + X1 + X5 + Y4 = -2

_C57: X6 + X7 + Y4 <= 2

_C58: - 2 A19 - B19 + X6 + X7 + Y4 = -2

_C59: X2 + X6 + X8 + Y9 <= 2

_C60: - 2 A20 - B20 + X2 + X6 + X8 + Y9 = -2

_C61: X11 + X8 + Y10 <= 2

_C62: - 2 A81 - B81 + X11 + X8 + Y10 = -2

_C63: X12 + X3 + Y10 <= 2

_C64: - 2 A80 - B80 + X12 + X3 + Y10 = -2

_C65: X12 + X13 + X5 + Y14 <= 2

_C66: - 2 A79 - B79 + X12 + X13 + X5 + Y14 = -2

_C67: X11 + X13 + X7 + Y15 <= 2

_C68: - 2 A82 - B82 + X11 + X13 + X7 + Y15 = -2

_C69: - 2 A83 - B83 - Y15 = -2

_C70: - 2 A78 - B78 - Y14 = -2

_C71: X16 + Y9 <= 2

_C72: - 2 A21 - B21 + X16 + Y9 = -2

_C73: X16 + X18 + Y17 <= 3

_C74: - 2 A22 - B22 + X16 + X18 + Y17 = -3

_C75: X18 + X19 + Y17 <= 3

_C76: - 2 A23 - B23 + X18 + X19 + Y17 = -3

_C77: X19 + Y20 <= 2

_C78: - 2 A24 - B24 + X19 + Y20 = -2

_C79: - 2 A25 - B25 - Y20 = -2

VARIABLES
0 <= A16 Integer
0 <= A17 Integer
0 <= A18 Integer
0 <= A19 Integer
0 <= A20 Integer
0 <= A21 Integer
0 <= A22 Integer
0 <= A23 Integer
0 <= A24 Integer
0 <= A25 Integer
0 <= A78 Integer
0 <= A79 Integer
0 <= A80 Integer
0 <= A81 Integer
0 <= A82 Integer
0 <= A83 Integer
0 <= B16 <= 1 Integer
0 <= B17 <= 1 Integer
0 <= B18 <= 1 Integer
0 <= B19 <= 1 Integer
0 <= B20 <= 1 Integer
0 <= B21 <= 1 Integer
0 <= B22 <= 1 Integer
0 <= B23 <= 1 Integer
0 <= B24 <= 1 Integer
0 <= B25 <= 1 Integer
0 <= B78 <= 1 Integer
0 <= B79 <= 1 Integer
0 <= B80 <= 1 Integer
0 <= B81 <= 1 Integer
0 <= B82 <= 1 Integer
0 <= B83 <= 1 Integer
0 <= T13 <= 1 Integer
0 <= T18 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= T5 <= 1 Integer
0 <= T7 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X11 Integer
0 <= X12 Integer
0 <= X13 Integer
0 <= X16 Integer
0 <= X18 Integer
0 <= X19 Integer
0 <= X2 Integer
0 <= X3 Integer
0 <= X5 Integer
0 <= X6 Integer
0 <= X7 Integer
0 <= X8 Integer
Y0 free Integer
Y10 free Integer
Y14 free Integer
Y15 free Integer
Y17 free Integer
Y20 free Integer
Y4 free Integer
Y9 free Integer
Z0 free Integer
Z10 free Integer
Z14 free Integer
Z15 free Integer
Z17 free Integer
Z20 free Integer
Z4 free Integer
Z9 free Integer

Optimal
[A16, A17, A18, A19, A20, A21, A22, A23, A24, A25, A78, A79, A80, A81, A82, A83, B16, B17, B18, B19, B20, B21, B22, B23, B24, B25, B78, B79, B80, B81, B82, B83, T13, T18, T2, T3, T5, T7, T8, X1, X11, X12, X13, X16, X18, X19, X2, X3, X5, X6, X7, X8, Y0, Y10, Y14, Y15, Y17, Y20, Y4, Y9, Z0, Z10, Z14, Z15, Z17, Z20, Z4, Z9]
17 18 1.0 R
81 82 1.0 R
79 80 1.0 R
79 82 0.0 SV
21 22 2.0 R
22 23 1.0 SV
23 24 2.0 R
17 20 0.0 SV
17 80 1.0 SV
18 79 1.0 SV
19 20 1.0 R
19 82 1.0 SV
20 81 1.0 SV
A16 = 1.0
A17 = 2.0
A18 = 2.0
A19 = 2.0
A20 = 2.0
A21 = 2.0
A22 = 3.0
A23 = 3.0
A24 = 2.0
A25 = 1.0
A78 = 1.0
A79 = 2.0
A80 = 2.0
A81 = 2.0
A82 = 2.0
A83 = 1.0
B16 = 0.0
B17 = 0.0
B18 = 0.0
B19 = 0.0
B20 = 0.0
B21 = 0.0
B22 = 0.0
B23 = 0.0
B24 = 0.0
B25 = 0.0
B78 = 0.0
B79 = 0.0
B80 = 0.0
B81 = 0.0
B82 = 0.0
B83 = 0.0
T13 = 0.0
T18 = 1.0
T2 = 0.0
T3 = 1.0
T5 = 1.0
T7 = 1.0
T8 = 1.0
X1 = 1.0
X11 = 1.0
X12 = 1.0
X13 = 0.0
X16 = 2.0
X18 = 1.0
X19 = 2.0
X2 = 0.0
X3 = 1.0
X5 = 1.0
X6 = 1.0
X7 = 1.0
X8 = 1.0
Y0 = 0.0
Y10 = 0.0
Y14 = 0.0
Y15 = 0.0
Y17 = 0.0
Y20 = 0.0
Y4 = 0.0
Y9 = 0.0
Z0 = 0.0
Z10 = 0.0
Z14 = 0.0
Z15 = 0.0
Z17 = 0.0
Z20 = 0.0
Z4 = 0.0
Z9 = 0.0
-250.0 Objective Answer
Siavash [(38, 39, 2, 'S'), (39, 40, 0, 'R'), (39, 42, 0, 'SV'), (40, 41, 1, 'S'), (41, 42, 0, 'R'), (42, 43, 2, 'S')]
Y0 (38, 39, 2, 'S')
X1 (39, 40, 0, 'R')
X2 (39, 42, 0, 'SV')
Y3 (40, 41, 1, 'S')
X4 (41, 42, 0, 'R')
Y5 (42, 43, 2, 'S')
A38 A38
B38 B38
A39 A39
B39 B39
A40 A40
B40 B40
A41 A41
B41 B41
A42 A42
B42 B42
A43 A43
B43 B43
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 - 2*Y5 + 10
Sv_sum T2
CN_tune 68*Z0 + 6*Z3 + 88*Z5
obj B38 + B39 + B40 + B41 + B42 + B43 - 10*T2 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 - 20*Y5 + 680*Z0 + 60*Z3 + 880*Z5 + 100
Problem:
MINIMIZE
1*B38 + 1*B39 + 1*B40 + 1*B41 + 1*B42 + 1*B43 + -10*T2 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + -20*Y5 + 680*Z0 + 60*Z3 + 880*Z5 + 100
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A38 - B38 - Y0 = -2

_C16: X1 + X2 + Y0 <= 2

_C17: - 2 A39 - B39 + X1 + X2 + Y0 = -2

_C18: X1 + Y3 <= 1

_C19: - 2 A40 - B40 + X1 + Y3 = -1

_C20: X4 + Y3 <= 1

_C21: - 2 A41 - B41 + X4 + Y3 = -1

_C22: X2 + X4 + Y5 <= 2

_C23: - 2 A42 - B42 + X2 + X4 + Y5 = -2

_C24: - 2 A43 - B43 - Y5 = -2

VARIABLES
0 <= A38 Integer
0 <= A39 Integer
0 <= A40 Integer
0 <= A41 Integer
0 <= A42 Integer
0 <= A43 Integer
0 <= B38 <= 1 Integer
0 <= B39 <= 1 Integer
0 <= B40 <= 1 Integer
0 <= B41 <= 1 Integer
0 <= B42 <= 1 Integer
0 <= B43 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A38, A39, A40, A41, A42, A43, B38, B39, B40, B41, B42, B43, T2, X1, X2, X4, Y0, Y3, Y5, Z0, Z3, Z5]
39 40 1.0 R
39 42 1.0 SV
41 42 1.0 R
A38 = 1.0
A39 = 2.0
A40 = 1.0
A41 = 1.0
A42 = 2.0
A43 = 1.0
B38 = 0.0
B39 = 0.0
B40 = 0.0
B41 = 0.0
B42 = 0.0
B43 = 0.0
T2 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(44, 45, 2, 'S')]
Y0 (44, 45, 2, 'S')
A44 A44
B44 B44
A45 A45
B45 B45
obj -2*Y0 + 4
Sv_sum 0
CN_tune 222*Z0
obj B44 + B45 - 20*Y0 + 2220*Z0 + 40
Problem:
MINIMIZE
1*B44 + 1*B45 + -20*Y0 + 2220*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A44 - B44 - Y0 = -2

_C5: - 2 A45 - B45 - Y0 = -2

VARIABLES
0 <= A44 Integer
0 <= A45 Integer
0 <= B44 <= 1 Integer
0 <= B45 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A44, A45, B44, B45, Y0, Z0]
A44 = 1.0
A45 = 1.0
B44 = 0.0
B45 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(46, 47, 2, 'S'), (47, 48, 0, 'R'), (48, 49, 3, 'S'), (48, 52, 0, 'SV'), (49, 50, 0, 'R'), (51, 50, 2, 'S'), (51, 52, 0, 'R'), (52, 53, 2, 'S'), (49, 49, 0, 'SV')]
Y0 (46, 47, 2, 'S')
X1 (47, 48, 0, 'R')
Y2 (48, 49, 3, 'S')
X3 (48, 52, 0, 'SV')
X4 (49, 50, 0, 'R')
Y5 (51, 50, 2, 'S')
X6 (51, 52, 0, 'R')
Y7 (52, 53, 2, 'S')
X8 (49, 49, 0, 'SV')
A46 A46
B46 B46
A47 A47
B47 B47
A48 A48
B48 B48
A49 A49
B49 B49
A50 A50
B50 B50
A51 A51
B51 B51
A52 A52
B52 B52
A53 A53
B53 B53
obj -2*X1 - 2*X3 - 2*X4 - 2*X6 - 2*X8 - 2*Y0 - 2*Y2 - 2*Y5 - 2*Y7 + 18
Sv_sum T3 + T8
CN_tune 60*Z0 + 6*Z2 + 2*Z5 + 80*Z7
obj B46 + B47 + B48 + B49 + B50 + B51 + B52 + B53 - 10*T3 - 10*T8 - 20*X1 - 20*X3 - 20*X4 - 20*X6 - 20*X8 - 20*Y0 - 20*Y2 - 20*Y5 - 20*Y7 + 600*Z0 + 60*Z2 + 20*Z5 + 800*Z7 + 180
Problem:
MINIMIZE
1*B46 + 1*B47 + 1*B48 + 1*B49 + 1*B50 + 1*B51 + 1*B52 + 1*B53 + -10*T3 + -10*T8 + -20*X1 + -20*X3 + -20*X4 + -20*X6 + -20*X8 + -20*Y0 + -20*Y2 + -20*Y5 + -20*Y7 + 600*Z0 + 60*Z2 + 20*Z5 + 800*Z7 + 180
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: - 2 A46 - B46 - Y0 = -2

_C23: X1 + Y0 <= 2

_C24: - 2 A47 - B47 + X1 + Y0 = -2

_C25: X1 + X3 + Y2 <= 3

_C26: - 2 A48 - B48 + X1 + X3 + Y2 = -3

_C27: X4 + 2 X8 + Y2 <= 3

_C28: - 2 A49 - B49 + X4 + 2 X8 + Y2 = -3

_C29: X4 + Y5 <= 2

_C30: - 2 A50 - B50 + X4 + Y5 = -2

_C31: X6 + Y5 <= 2

_C32: - 2 A51 - B51 + X6 + Y5 = -2

_C33: X3 + X6 + Y7 <= 2

_C34: - 2 A52 - B52 + X3 + X6 + Y7 = -2

_C35: - 2 A53 - B53 - Y7 = -2

VARIABLES
0 <= A46 Integer
0 <= A47 Integer
0 <= A48 Integer
0 <= A49 Integer
0 <= A50 Integer
0 <= A51 Integer
0 <= A52 Integer
0 <= A53 Integer
0 <= B46 <= 1 Integer
0 <= B47 <= 1 Integer
0 <= B48 <= 1 Integer
0 <= B49 <= 1 Integer
0 <= B50 <= 1 Integer
0 <= B51 <= 1 Integer
0 <= B52 <= 1 Integer
0 <= B53 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
0 <= X6 Integer
0 <= X8 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Y7 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer
Z7 free Integer

Optimal
[A46, A47, A48, A49, A50, A51, A52, A53, B46, B47, B48, B49, B50, B51, B52, B53, T3, T8, X1, X3, X4, X6, X8, Y0, Y2, Y5, Y7, Z0, Z2, Z5, Z7]
47 48 2.0 R
48 52 1.0 SV
49 50 1.0 R
51 52 1.0 R
49 49 1.0 SV
A46 = 1.0
A47 = 2.0
A48 = 3.0
A49 = 3.0
A50 = 2.0
A51 = 2.0
A52 = 2.0
A53 = 1.0
B46 = 0.0
B47 = 0.0
B48 = 0.0
B49 = 0.0
B50 = 0.0
B51 = 0.0
B52 = 0.0
B53 = 0.0
T3 = 1.0
T8 = 1.0
X1 = 2.0
X3 = 1.0
X4 = 1.0
X6 = 1.0
X8 = 1.0
Y0 = 0.0
Y2 = 0.0
Y5 = 1.0
Y7 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 1.0
Z7 = 0.0
40.0 Objective Answer
Siavash [(54, 55, 2, 'S')]
Y0 (54, 55, 2, 'S')
A54 A54
B54 B54
A55 A55
B55 B55
obj -2*Y0 + 4
Sv_sum 0
CN_tune 192*Z0
obj B54 + B55 - 20*Y0 + 1920*Z0 + 40
Problem:
MINIMIZE
1*B54 + 1*B55 + -20*Y0 + 1920*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A54 - B54 - Y0 = -2

_C5: - 2 A55 - B55 - Y0 = -2

VARIABLES
0 <= A54 Integer
0 <= A55 Integer
0 <= B54 <= 1 Integer
0 <= B55 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A54, A55, B54, B55, Y0, Z0]
A54 = 1.0
A55 = 1.0
B54 = 0.0
B55 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(73, 72, 2, 'S'), (73, 74, 0, 'R'), (73, 75, 0, 'SV'), (75, 74, 2, 'S'), (74, 76, 0, 'SV'), (75, 76, 0, 'R'), (76, 77, 2, 'S')]
Y0 (73, 72, 2, 'S')
X1 (73, 74, 0, 'R')
X2 (73, 75, 0, 'SV')
Y3 (75, 74, 2, 'S')
X4 (74, 76, 0, 'SV')
X5 (75, 76, 0, 'R')
Y6 (76, 77, 2, 'S')
A72 A72
B72 B72
A73 A73
B73 B73
A74 A74
B74 B74
A75 A75
B75 B75
A76 A76
B76 B76
A77 A77
B77 B77
obj -2*X1 - 2*X2 - 2*X4 - 2*X5 - 2*Y0 - 2*Y3 - 2*Y6 + 12
Sv_sum T2 + T4
CN_tune 40*Z0 + 2*Z3 + 72*Z6
obj B72 + B73 + B74 + B75 + B76 + B77 - 10*T2 - 10*T4 - 20*X1 - 20*X2 - 20*X4 - 20*X5 - 20*Y0 - 20*Y3 - 20*Y6 + 400*Z0 + 20*Z3 + 720*Z6 + 120
Problem:
MINIMIZE
1*B72 + 1*B73 + 1*B74 + 1*B75 + 1*B76 + 1*B77 + -10*T2 + -10*T4 + -20*X1 + -20*X2 + -20*X4 + -20*X5 + -20*Y0 + -20*Y3 + -20*Y6 + 400*Z0 + 20*Z3 + 720*Z6 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: - 2 A72 - B72 - Y0 = -2

_C19: X1 + X2 + Y0 <= 2

_C20: - 2 A73 - B73 + X1 + X2 + Y0 = -2

_C21: X1 + X4 + Y3 <= 2

_C22: - 2 A74 - B74 + X1 + X4 + Y3 = -2

_C23: X2 + X5 + Y3 <= 2

_C24: - 2 A75 - B75 + X2 + X5 + Y3 = -2

_C25: X4 + X5 + Y6 <= 2

_C26: - 2 A76 - B76 + X4 + X5 + Y6 = -2

_C27: - 2 A77 - B77 - Y6 = -2

VARIABLES
0 <= A72 Integer
0 <= A73 Integer
0 <= A74 Integer
0 <= A75 Integer
0 <= A76 Integer
0 <= A77 Integer
0 <= B72 <= 1 Integer
0 <= B73 <= 1 Integer
0 <= B74 <= 1 Integer
0 <= B75 <= 1 Integer
0 <= B76 <= 1 Integer
0 <= B77 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
Y0 free Integer
Y3 free Integer
Y6 free Integer
Z0 free Integer
Z3 free Integer
Z6 free Integer

Optimal
[A72, A73, A74, A75, A76, A77, B72, B73, B74, B75, B76, B77, T2, T4, X1, X2, X4, X5, Y0, Y3, Y6, Z0, Z3, Z6]
73 74 1.0 R
73 75 1.0 SV
74 76 1.0 SV
75 76 1.0 R
A72 = 1.0
A73 = 2.0
A74 = 2.0
A75 = 2.0
A76 = 2.0
A77 = 1.0
B72 = 0.0
B73 = 0.0
B74 = 0.0
B75 = 0.0
B76 = 0.0
B77 = 0.0
T2 = 1.0
T4 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
X5 = 1.0
Y0 = 0.0
Y3 = 0.0
Y6 = 0.0
Z0 = 0.0
Z3 = 0.0
Z6 = 0.0
20.0 Objective Answer
Siavash [(85, 84, 2, 'S'), (85, 86, 0, 'R'), (85, 87, 0, 'SV'), (86, 88, 0, 'SV'), (87, 86, 2, 'S'), (88, 89, 2, 'S'), (87, 88, 0, 'R')]
Y0 (85, 84, 2, 'S')
X1 (85, 86, 0, 'R')
X2 (85, 87, 0, 'SV')
X3 (86, 88, 0, 'SV')
Y4 (87, 86, 2, 'S')
Y5 (88, 89, 2, 'S')
X6 (87, 88, 0, 'R')
A84 A84
B84 B84
A85 A85
B85 B85
A86 A86
B86 B86
A88 A88
B88 B88
A89 A89
B89 B89
A87 A87
B87 B87
obj -2*X1 - 2*X2 - 2*X3 - 2*X6 - 2*Y0 - 2*Y4 - 2*Y5 + 12
Sv_sum T2 + T3
CN_tune 52*Z0 + 2*Z4 + 56*Z5
obj B84 + B85 + B86 + B87 + B88 + B89 - 10*T2 - 10*T3 - 20*X1 - 20*X2 - 20*X3 - 20*X6 - 20*Y0 - 20*Y4 - 20*Y5 + 520*Z0 + 20*Z4 + 560*Z5 + 120
Problem:
MINIMIZE
1*B84 + 1*B85 + 1*B86 + 1*B87 + 1*B88 + 1*B89 + -10*T2 + -10*T3 + -20*X1 + -20*X2 + -20*X3 + -20*X6 + -20*Y0 + -20*Y4 + -20*Y5 + 520*Z0 + 20*Z4 + 560*Z5 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: Y4 + Z4 >= 0

_C12: - Y4 + Z4 >= 0

_C13: Z4 <= 1

_C14: Y5 + Z5 >= 0

_C15: - Y5 + Z5 >= 0

_C16: Z5 <= 1

_C17: X6 >= 1

_C18: - 2 A84 - B84 - Y0 = -2

_C19: X1 + X2 + Y0 <= 2

_C20: - 2 A85 - B85 + X1 + X2 + Y0 = -2

_C21: X1 + X3 + Y4 <= 2

_C22: - 2 A86 - B86 + X1 + X3 + Y4 = -2

_C23: X3 + X6 + Y5 <= 2

_C24: - 2 A88 - B88 + X3 + X6 + Y5 = -2

_C25: - 2 A89 - B89 - Y5 = -2

_C26: X2 + X6 + Y4 <= 2

_C27: - 2 A87 - B87 + X2 + X6 + Y4 = -2

VARIABLES
0 <= A84 Integer
0 <= A85 Integer
0 <= A86 Integer
0 <= A87 Integer
0 <= A88 Integer
0 <= A89 Integer
0 <= B84 <= 1 Integer
0 <= B85 <= 1 Integer
0 <= B86 <= 1 Integer
0 <= B87 <= 1 Integer
0 <= B88 <= 1 Integer
0 <= B89 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X3 Integer
0 <= X6 Integer
Y0 free Integer
Y4 free Integer
Y5 free Integer
Z0 free Integer
Z4 free Integer
Z5 free Integer

Optimal
[A84, A85, A86, A87, A88, A89, B84, B85, B86, B87, B88, B89, T2, T3, X1, X2, X3, X6, Y0, Y4, Y5, Z0, Z4, Z5]
85 86 1.0 R
85 87 1.0 SV
86 88 1.0 SV
87 88 1.0 R
A84 = 1.0
A85 = 2.0
A86 = 2.0
A87 = 2.0
A88 = 2.0
A89 = 1.0
B84 = 0.0
B85 = 0.0
B86 = 0.0
B87 = 0.0
B88 = 0.0
B89 = 0.0
T2 = 1.0
T3 = 1.0
X1 = 1.0
X2 = 1.0
X3 = 1.0
X6 = 1.0
Y0 = 0.0
Y4 = 0.0
Y5 = 0.0
Z0 = 0.0
Z4 = 0.0
Z5 = 0.0
20.0 Objective Answer
Siavash [(90, 91, 2, 'S'), (91, 92, 0, 'R'), (92, 93, 3, 'S'), (92, 93, 0, 'SV'), (93, 94, 0, 'R'), (94, 95, 2, 'S')]
Y0 (90, 91, 2, 'S')
X1 (91, 92, 0, 'R')
Y2 (92, 93, 3, 'S')
X3 (92, 93, 0, 'SV')
X4 (93, 94, 0, 'R')
Y5 (94, 95, 2, 'S')
A90 A90
B90 B90
A91 A91
B91 B91
A92 A92
B92 B92
A93 A93
B93 B93
A94 A94
B94 B94
A95 A95
B95 B95
obj -2*X1 - 2*X3 - 2*X4 - 2*Y0 - 2*Y2 - 2*Y5 + 14
Sv_sum T3
CN_tune 28*Z0 + 6*Z2 + 52*Z5
obj B90 + B91 + B92 + B93 + B94 + B95 - 10*T3 - 20*X1 - 20*X3 - 20*X4 - 20*Y0 - 20*Y2 - 20*Y5 + 280*Z0 + 60*Z2 + 520*Z5 + 140
Problem:
MINIMIZE
1*B90 + 1*B91 + 1*B92 + 1*B93 + 1*B94 + 1*B95 + -10*T3 + -20*X1 + -20*X3 + -20*X4 + -20*Y0 + -20*Y2 + -20*Y5 + 280*Z0 + 60*Z2 + 520*Z5 + 140
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A90 - B90 - Y0 = -2

_C16: X1 + Y0 <= 2

_C17: - 2 A91 - B91 + X1 + Y0 = -2

_C18: X1 + X3 + Y2 <= 3

_C19: - 2 A92 - B92 + X1 + X3 + Y2 = -3

_C20: X3 + X4 + Y2 <= 3

_C21: - 2 A93 - B93 + X3 + X4 + Y2 = -3

_C22: X4 + Y5 <= 2

_C23: - 2 A94 - B94 + X4 + Y5 = -2

_C24: - 2 A95 - B95 - Y5 = -2

VARIABLES
0 <= A90 Integer
0 <= A91 Integer
0 <= A92 Integer
0 <= A93 Integer
0 <= A94 Integer
0 <= A95 Integer
0 <= B90 <= 1 Integer
0 <= B91 <= 1 Integer
0 <= B92 <= 1 Integer
0 <= B93 <= 1 Integer
0 <= B94 <= 1 Integer
0 <= B95 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer

Optimal
[A90, A91, A92, A93, A94, A95, B90, B91, B92, B93, B94, B95, T3, X1, X3, X4, Y0, Y2, Y5, Z0, Z2, Z5]
91 92 2.0 R
92 93 1.0 SV
93 94 2.0 R
A90 = 1.0
A91 = 2.0
A92 = 3.0
A93 = 3.0
A94 = 2.0
A95 = 1.0
B90 = 0.0
B91 = 0.0
B92 = 0.0
B93 = 0.0
B94 = 0.0
B95 = 0.0
T3 = 1.0
X1 = 2.0
X3 = 1.0
X4 = 2.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(96, 97, 2, 'S')]
Y0 (96, 97, 2, 'S')
A96 A96
B96 B96
A97 A97
B97 B97
obj -2*Y0 + 4
Sv_sum 0
CN_tune 132*Z0
obj B96 + B97 - 20*Y0 + 1320*Z0 + 40
Problem:
MINIMIZE
1*B96 + 1*B97 + -20*Y0 + 1320*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A96 - B96 - Y0 = -2

_C5: - 2 A97 - B97 - Y0 = -2

VARIABLES
0 <= A96 Integer
0 <= A97 Integer
0 <= B96 <= 1 Integer
0 <= B97 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A96, A97, B96, B97, Y0, Z0]
A96 = 1.0
A97 = 1.0
B96 = 0.0
B97 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(99, 98, 2, 'S'), (99, 100, 0, 'R'), (99, 101, 0, 'SV'), (101, 100, 2, 'S'), (100, 102, 0, 'SV'), (101, 102, 0, 'R'), (102, 103, 2, 'S')]
Y0 (99, 98, 2, 'S')
X1 (99, 100, 0, 'R')
X2 (99, 101, 0, 'SV')
Y3 (101, 100, 2, 'S')
X4 (100, 102, 0, 'SV')
X5 (101, 102, 0, 'R')
Y6 (102, 103, 2, 'S')
A98 A98
B98 B98
A99 A99
B99 B99
A100 A100
B100 B100
A101 A101
B101 B101
A102 A102
B102 B102
A103 A103
B103 B103
obj -2*X1 - 2*X2 - 2*X4 - 2*X5 - 2*Y0 - 2*Y3 - 2*Y6 + 12
Sv_sum T2 + T4
CN_tune 52*Z0 + 2*Z3 + 32*Z6
obj B100 + B101 + B102 + B103 + B98 + B99 - 10*T2 - 10*T4 - 20*X1 - 20*X2 - 20*X4 - 20*X5 - 20*Y0 - 20*Y3 - 20*Y6 + 520*Z0 + 20*Z3 + 320*Z6 + 120
Problem:
MINIMIZE
1*B100 + 1*B101 + 1*B102 + 1*B103 + 1*B98 + 1*B99 + -10*T2 + -10*T4 + -20*X1 + -20*X2 + -20*X4 + -20*X5 + -20*Y0 + -20*Y3 + -20*Y6 + 520*Z0 + 20*Z3 + 320*Z6 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: - 2 A98 - B98 - Y0 = -2

_C19: X1 + X2 + Y0 <= 2

_C20: - 2 A99 - B99 + X1 + X2 + Y0 = -2

_C21: X1 + X4 + Y3 <= 2

_C22: - 2 A100 - B100 + X1 + X4 + Y3 = -2

_C23: X2 + X5 + Y3 <= 2

_C24: - 2 A101 - B101 + X2 + X5 + Y3 = -2

_C25: X4 + X5 + Y6 <= 2

_C26: - 2 A102 - B102 + X4 + X5 + Y6 = -2

_C27: - 2 A103 - B103 - Y6 = -2

VARIABLES
0 <= A100 Integer
0 <= A101 Integer
0 <= A102 Integer
0 <= A103 Integer
0 <= A98 Integer
0 <= A99 Integer
0 <= B100 <= 1 Integer
0 <= B101 <= 1 Integer
0 <= B102 <= 1 Integer
0 <= B103 <= 1 Integer
0 <= B98 <= 1 Integer
0 <= B99 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
Y0 free Integer
Y3 free Integer
Y6 free Integer
Z0 free Integer
Z3 free Integer
Z6 free Integer

Optimal
[A100, A101, A102, A103, A98, A99, B100, B101, B102, B103, B98, B99, T2, T4, X1, X2, X4, X5, Y0, Y3, Y6, Z0, Z3, Z6]
99 100 1.0 R
99 101 1.0 SV
100 102 1.0 SV
101 102 1.0 R
A100 = 2.0
A101 = 2.0
A102 = 2.0
A103 = 1.0
A98 = 1.0
A99 = 2.0
B100 = 0.0
B101 = 0.0
B102 = 0.0
B103 = 0.0
B98 = 0.0
B99 = 0.0
T2 = 1.0
T4 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
X5 = 1.0
Y0 = 0.0
Y3 = 0.0
Y6 = 0.0
Z0 = 0.0
Z3 = 0.0
Z6 = 0.0
20.0 Objective Answer
Siavash [(105, 104, 2, 'S'), (105, 106, 0, 'R'), (105, 107, 0, 'SV'), (107, 106, 2, 'S'), (107, 108, 0, 'R'), (108, 109, 2, 'S')]
Y0 (105, 104, 2, 'S')
X1 (105, 106, 0, 'R')
X2 (105, 107, 0, 'SV')
Y3 (107, 106, 2, 'S')
X4 (107, 108, 0, 'R')
Y5 (108, 109, 2, 'S')
A104 A104
B104 B104
A105 A105
B105 B105
A106 A106
B106 B106
A107 A107
B107 B107
A108 A108
B108 B108
A109 A109
B109 B109
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 - 2*Y5 + 12
Sv_sum T2
CN_tune 20*Z0 + 2*Z3 + 56*Z5
obj B104 + B105 + B106 + B107 + B108 + B109 - 10*T2 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 - 20*Y5 + 200*Z0 + 20*Z3 + 560*Z5 + 120
Problem:
MINIMIZE
1*B104 + 1*B105 + 1*B106 + 1*B107 + 1*B108 + 1*B109 + -10*T2 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + -20*Y5 + 200*Z0 + 20*Z3 + 560*Z5 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A104 - B104 - Y0 = -2

_C16: X1 + X2 + Y0 <= 2

_C17: - 2 A105 - B105 + X1 + X2 + Y0 = -2

_C18: X1 + Y3 <= 2

_C19: - 2 A106 - B106 + X1 + Y3 = -2

_C20: X2 + X4 + Y3 <= 2

_C21: - 2 A107 - B107 + X2 + X4 + Y3 = -2

_C22: X4 + Y5 <= 2

_C23: - 2 A108 - B108 + X4 + Y5 = -2

_C24: - 2 A109 - B109 - Y5 = -2

VARIABLES
0 <= A104 Integer
0 <= A105 Integer
0 <= A106 Integer
0 <= A107 Integer
0 <= A108 Integer
0 <= A109 Integer
0 <= B104 <= 1 Integer
0 <= B105 <= 1 Integer
0 <= B106 <= 1 Integer
0 <= B107 <= 1 Integer
0 <= B108 <= 1 Integer
0 <= B109 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A104, A105, A106, A107, A108, A109, B104, B105, B106, B107, B108, B109, T2, X1, X2, X4, Y0, Y3, Y5, Z0, Z3, Z5]
105 106 2.0 R
105 107 0.0 SV
107 108 2.0 R
A104 = 1.0
A105 = 2.0
A106 = 2.0
A107 = 2.0
A108 = 2.0
A109 = 1.0
B104 = 0.0
B105 = 0.0
B106 = 0.0
B107 = 0.0
B108 = 0.0
B109 = 0.0
T2 = 0.0
X1 = 2.0
X2 = 0.0
X4 = 2.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
40.0 Objective Answer
Siavash [(110, 111, 2, 'S'), (111, 112, 0, 'R'), (112, 113, 3, 'S'), (112, 113, 0, 'SV'), (113, 114, 0, 'R'), (114, 115, 2, 'S')]
Y0 (110, 111, 2, 'S')
X1 (111, 112, 0, 'R')
Y2 (112, 113, 3, 'S')
X3 (112, 113, 0, 'SV')
X4 (113, 114, 0, 'R')
Y5 (114, 115, 2, 'S')
A110 A110
B110 B110
A111 A111
B111 B111
A112 A112
B112 B112
A113 A113
B113 B113
A114 A114
B114 B114
A115 A115
B115 B115
obj -2*X1 - 2*X3 - 2*X4 - 2*Y0 - 2*Y2 - 2*Y5 + 14
Sv_sum T3
CN_tune 60*Z0 + 6*Z2 + 12*Z5
obj B110 + B111 + B112 + B113 + B114 + B115 - 10*T3 - 20*X1 - 20*X3 - 20*X4 - 20*Y0 - 20*Y2 - 20*Y5 + 600*Z0 + 60*Z2 + 120*Z5 + 140
Problem:
MINIMIZE
1*B110 + 1*B111 + 1*B112 + 1*B113 + 1*B114 + 1*B115 + -10*T3 + -20*X1 + -20*X3 + -20*X4 + -20*Y0 + -20*Y2 + -20*Y5 + 600*Z0 + 60*Z2 + 120*Z5 + 140
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A110 - B110 - Y0 = -2

_C16: X1 + Y0 <= 2

_C17: - 2 A111 - B111 + X1 + Y0 = -2

_C18: X1 + X3 + Y2 <= 3

_C19: - 2 A112 - B112 + X1 + X3 + Y2 = -3

_C20: X3 + X4 + Y2 <= 3

_C21: - 2 A113 - B113 + X3 + X4 + Y2 = -3

_C22: X4 + Y5 <= 2

_C23: - 2 A114 - B114 + X4 + Y5 = -2

_C24: - 2 A115 - B115 - Y5 = -2

VARIABLES
0 <= A110 Integer
0 <= A111 Integer
0 <= A112 Integer
0 <= A113 Integer
0 <= A114 Integer
0 <= A115 Integer
0 <= B110 <= 1 Integer
0 <= B111 <= 1 Integer
0 <= B112 <= 1 Integer
0 <= B113 <= 1 Integer
0 <= B114 <= 1 Integer
0 <= B115 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer

Optimal
[A110, A111, A112, A113, A114, A115, B110, B111, B112, B113, B114, B115, T3, X1, X3, X4, Y0, Y2, Y5, Z0, Z2, Z5]
111 112 2.0 R
112 113 1.0 SV
113 114 2.0 R
A110 = 1.0
A111 = 2.0
A112 = 3.0
A113 = 3.0
A114 = 2.0
A115 = 1.0
B110 = 0.0
B111 = 0.0
B112 = 0.0
B113 = 0.0
B114 = 0.0
B115 = 0.0
T3 = 1.0
X1 = 2.0
X3 = 1.0
X4 = 2.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(116, 117, 2, 'S')]
Y0 (116, 117, 2, 'S')
A116 A116
B116 B116
A117 A117
B117 B117
obj -2*Y0 + 4
Sv_sum 0
CN_tune 102*Z0
obj B116 + B117 - 20*Y0 + 1020*Z0 + 40
Problem:
MINIMIZE
1*B116 + 1*B117 + -20*Y0 + 1020*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A116 - B116 - Y0 = -2

_C5: - 2 A117 - B117 - Y0 = -2

VARIABLES
0 <= A116 Integer
0 <= A117 Integer
0 <= B116 <= 1 Integer
0 <= B117 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A116, A117, B116, B117, Y0, Z0]
A116 = 1.0
A117 = 1.0
B116 = 0.0
B117 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(118, 119, 2, 'S')]
Y0 (118, 119, 2, 'S')
A118 A118
B118 B118
A119 A119
B119 B119
obj -2*Y0 + 4
Sv_sum 0
CN_tune 72*Z0
obj B118 + B119 - 20*Y0 + 720*Z0 + 40
Problem:
MINIMIZE
1*B118 + 1*B119 + -20*Y0 + 720*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A118 - B118 - Y0 = -2

_C5: - 2 A119 - B119 - Y0 = -2

VARIABLES
0 <= A118 Integer
0 <= A119 Integer
0 <= B118 <= 1 Integer
0 <= B119 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A118, A119, B118, B119, Y0, Z0]
A118 = 1.0
A119 = 1.0
B118 = 0.0
B119 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(120, 121, 2, 'S')]
Y0 (120, 121, 2, 'S')
A120 A120
B120 B120
A121 A121
B121 B121
obj -2*Y0 + 4
Sv_sum 0
CN_tune 78*Z0
obj B120 + B121 - 20*Y0 + 780*Z0 + 40
Problem:
MINIMIZE
1*B120 + 1*B121 + -20*Y0 + 780*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A120 - B120 - Y0 = -2

_C5: - 2 A121 - B121 - Y0 = -2

VARIABLES
0 <= A120 Integer
0 <= A121 Integer
0 <= B120 <= 1 Integer
0 <= B121 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A120, A121, B120, B121, Y0, Z0]
A120 = 1.0
A121 = 1.0
B120 = 0.0
B121 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(122, 123, 2, 'S')]
Y0 (122, 123, 2, 'S')
A122 A122
B122 B122
A123 A123
B123 B123
obj -2*Y0 + 4
Sv_sum 0
CN_tune 60*Z0
obj B122 + B123 - 20*Y0 + 600*Z0 + 40
Problem:
MINIMIZE
1*B122 + 1*B123 + -20*Y0 + 600*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A122 - B122 - Y0 = -2

_C5: - 2 A123 - B123 - Y0 = -2

VARIABLES
0 <= A122 Integer
0 <= A123 Integer
0 <= B122 <= 1 Integer
0 <= B123 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A122, A123, B122, B123, Y0, Z0]
A122 = 1.0
A123 = 1.0
B122 = 0.0
B123 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(124, 125, 2, 'S')]
Y0 (124, 125, 2, 'S')
A124 A124
B124 B124
A125 A125
B125 B125
obj -2*Y0 + 4
Sv_sum 0
CN_tune 66*Z0
obj B124 + B125 - 20*Y0 + 660*Z0 + 40
Problem:
MINIMIZE
1*B124 + 1*B125 + -20*Y0 + 660*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A124 - B124 - Y0 = -2

_C5: - 2 A125 - B125 - Y0 = -2

VARIABLES
0 <= A124 Integer
0 <= A125 Integer
0 <= B124 <= 1 Integer
0 <= B125 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A124, A125, B124, B125, Y0, Z0]
A124 = 1.0
A125 = 1.0
B124 = 0.0
B125 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(126, 127, 1, 'S')]
Y0 (126, 127, 1, 'S')
A126 A126
B126 B126
A127 A127
B127 B127
obj -2*Y0 + 2
Sv_sum 0
CN_tune 192*Z0
obj B126 + B127 - 20*Y0 + 1920*Z0 + 20
Problem:
MINIMIZE
1*B126 + 1*B127 + -20*Y0 + 1920*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A126 - B126 - Y0 = -1

_C5: - 2 A127 - B127 - Y0 = -1

VARIABLES
0 <= A126 Integer
0 <= A127 Integer
0 <= B126 <= 1 Integer
0 <= B127 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A126, A127, B126, B127, Y0, Z0]
A126 = 0.0
A127 = 0.0
B126 = 1.0
B127 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
Siavash [(128, 129, 1, 'S')]
Y0 (128, 129, 1, 'S')
A128 A128
B128 B128
A129 A129
B129 B129
obj -2*Y0 + 2
Sv_sum 0
CN_tune 72*Z0
obj B128 + B129 - 20*Y0 + 720*Z0 + 20
Problem:
MINIMIZE
1*B128 + 1*B129 + -20*Y0 + 720*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A128 - B128 - Y0 = -1

_C5: - 2 A129 - B129 - Y0 = -1

VARIABLES
0 <= A128 Integer
0 <= A129 Integer
0 <= B128 <= 1 Integer
0 <= B129 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A128, A129, B128, B129, Y0, Z0]
A128 = 0.0
A129 = 0.0
B128 = 1.0
B129 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 58, 57, 56, 59, 60, 65, 64, 66, 67, 68, 27, 26, 28, 69, 70, 71, 29, 30, 31, 32, 33, 34, 35, 36, 37, 61, 62, 63, 14, 15]
[(0, 1, 2, 'S'), (1, 2, 2, 'R'), (2, 3, 3, 'S'), (2, 6, 1, 'SV'), (3, 4, 1, 'R'), (5, 4, 1, 'S'), (5, 6, 1, 'R'), (6, 7, 2, 'S'), (7, 8, 1, 'R'), (7, 10, 1, 'SV'), (8, 9, 1, 'S'), (9, 10, 1, 'R'), (11, 10, 2, 'S'), (11, 12, 1, 'R'), (11, 14, 1, 'SV'), (13, 12, 2, 'S'), (13, 58, 1, 'SV'), (13, 14, 1, 'R'), (57, 58, 1, 'R'), (59, 58, 2, 'S'), (57, 56, 2, 'S'), (59, 60, 1, 'R'), (59, 62, 1, 'SV'), (60, 65, 1, 'SV'), (61, 60, 2, 'S'), (65, 64, 2, 'S'), (65, 66, 1, 'R'), (67, 66, 2, 'S'), (61, 66, 1, 'SV'), (67, 68, 1, 'R'), (67, 70, 1, 'SV'), (27, 68, 1, 'SV'), (69, 68, 2, 'S'), (27, 26, 2, 'S'), (27, 28, 1, 'R'), (28, 69, 1, 'SV'), (29, 28, 2, 'S'), (69, 70, 1, 'R'), (70, 71, 2, 'S'), (29, 30, 2, 'R'), (30, 31, 2, 'S'), (31, 32, 2, 'R'), (32, 33, 3, 'S'), (33, 34, 1, 'R'), (35, 34, 2, 'S'), (35, 36, 2, 'R'), (36, 37, 2, 'S'), (61, 62, 1, 'R'), (62, 63, 2, 'S'), (14, 15, 2, 'S'), (3, 3, 1, 'SV'), (33, 33, 1, 'SV')]
Component [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 58, 57, 56, 59, 60, 65, 64, 66, 67, 68, 27, 26, 28, 69, 70, 71, 29, 30, 31, 32, 33, 34, 35, 36, 37, 61, 62, 63, 14, 15]
Component edges [(0, 1, 2, 'S'), (1, 2, 2, 'R'), (2, 3, 3, 'S'), (2, 6, 1, 'SV'), (3, 4, 1, 'R'), (5, 4, 1, 'S'), (5, 6, 1, 'R'), (6, 7, 2, 'S'), (7, 8, 1, 'R'), (7, 10, 1, 'SV'), (8, 9, 1, 'S'), (9, 10, 1, 'R'), (11, 10, 2, 'S'), (11, 12, 1, 'R'), (11, 14, 1, 'SV'), (13, 12, 2, 'S'), (13, 58, 1, 'SV'), (13, 14, 1, 'R'), (57, 58, 1, 'R'), (59, 58, 2, 'S'), (57, 56, 2, 'S'), (59, 60, 1, 'R'), (59, 62, 1, 'SV'), (60, 65, 1, 'SV'), (61, 60, 2, 'S'), (65, 64, 2, 'S'), (65, 66, 1, 'R'), (67, 66, 2, 'S'), (61, 66, 1, 'SV'), (67, 68, 1, 'R'), (67, 70, 1, 'SV'), (27, 68, 1, 'SV'), (69, 68, 2, 'S'), (27, 26, 2, 'S'), (27, 28, 1, 'R'), (28, 69, 1, 'SV'), (29, 28, 2, 'S'), (69, 70, 1, 'R'), (70, 71, 2, 'S'), (29, 30, 2, 'R'), (30, 31, 2, 'S'), (31, 32, 2, 'R'), (32, 33, 3, 'S'), (33, 34, 1, 'R'), (35, 34, 2, 'S'), (35, 36, 2, 'R'), (36, 37, 2, 'S'), (61, 62, 1, 'R'), (62, 63, 2, 'S'), (14, 15, 2, 'S'), (3, 3, 1, 'SV'), (33, 33, 1, 'SV')]
ODD vertices [12, 57, 32, 34]
TOUR
[0, 15, 26, 37, 56, 63, 64, 71]
paths_score 60 [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 58, 59, 60, 61, 66, 67, 68, 69, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 35, 34, 32, 33, 33, 32, 31, 30, 29, 28, 27, 26], [26, 27, 68, 69, 70, 71], [71, 70, 67, 66, 65, 64], [64, 65, 60, 61, 62, 63], [63, 62, 59, 58, 57, 56], [56, 57, 12, 13, 14, 15], [15, 14, 11, 10, 7, 6, 2, 3, 3, 2, 1, 0]]
paths_score 60 [[15, 14, 13, 12, 57, 56], [56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 35, 34, 32, 33, 33, 32, 31, 30, 29, 28, 27, 26], [26, 27, 68, 69, 70, 71], [71, 70, 67, 66, 65, 64], [64, 65, 60, 61, 62, 63], [63, 62, 59, 58, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 3, 2, 6, 7, 10, 11, 14, 15]]
paths_score 60 [[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 35, 34, 32, 33, 33, 32, 31, 30, 29, 28, 69, 68, 67, 66, 65, 64], [64, 65, 60, 61, 62, 63], [63, 62, 59, 58, 57, 56], [56, 57, 12, 13, 14, 15], [15, 14, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 3, 2, 6, 7, 10, 11, 12, 13, 58, 59, 60, 61, 66, 67, 70, 71], [71, 70, 69, 68, 27, 26]]
paths_score 60 [[37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26], [26, 27, 68, 69, 70, 71], [71, 70, 67, 66, 65, 64], [64, 65, 60, 61, 62, 63], [63, 62, 59, 58, 57, 56], [56, 57, 12, 13, 14, 15], [15, 14, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 3, 2, 6, 7, 10, 11, 12, 13, 58, 59, 60, 61, 66, 67, 68, 69, 28, 29, 30, 31, 32, 33, 33, 32, 34, 35, 36, 37]]
paths_score 60 [[56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 35, 34, 32, 33, 33, 32, 31, 30, 29, 28, 27, 26], [26, 27, 68, 69, 70, 71], [71, 70, 67, 66, 65, 64], [64, 65, 60, 61, 62, 63], [63, 62, 59, 58, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 3, 2, 6, 7, 10, 11, 14, 15], [15, 14, 13, 12, 57, 56]]
paths_score 60 [[63, 62, 61, 60, 65, 64], [64, 65, 66, 67, 68, 69, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 35, 34, 32, 33, 33, 32, 31, 30, 29, 28, 27, 26], [26, 27, 68, 69, 70, 71], [71, 70, 67, 66, 61, 60, 59, 58, 57, 56], [56, 57, 12, 13, 14, 15], [15, 14, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 3, 2, 6, 7, 10, 11, 12, 13, 58, 59, 62, 63]]
paths_score 60 [[64, 65, 66, 67, 68, 69, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 35, 34, 32, 33, 33, 32, 31, 30, 29, 28, 27, 26], [26, 27, 68, 69, 70, 71], [71, 70, 67, 66, 61, 60, 59, 58, 57, 56], [56, 57, 12, 13, 14, 15], [15, 14, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 3, 2, 6, 7, 10, 11, 12, 13, 58, 59, 62, 63], [63, 62, 61, 60, 65, 64]]
paths_score 60 [[71, 70, 69, 68, 27, 26], [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 35, 34, 32, 33, 33, 32, 31, 30, 29, 28, 69, 68, 67, 66, 65, 64], [64, 65, 60, 61, 62, 63], [63, 62, 59, 58, 57, 56], [56, 57, 12, 13, 14, 15], [15, 14, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 3, 2, 6, 7, 10, 11, 12, 13, 58, 59, 60, 61, 66, 67, 70, 71]]
all edges with dummy:  [(0, 1, 2, 'S'), (1, 2, 2, 'R'), (2, 3, 3, 'S'), (2, 6, 1, 'SV'), (3, 4, 1, 'R'), (5, 4, 1, 'S'), (5, 6, 1, 'R'), (6, 7, 2, 'S'), (7, 8, 1, 'R'), (7, 10, 1, 'SV'), (8, 9, 1, 'S'), (9, 10, 1, 'R'), (11, 10, 2, 'S'), (11, 12, 1, 'R'), (11, 14, 1, 'SV'), (13, 12, 2, 'S'), (13, 58, 1, 'SV'), (13, 14, 1, 'R'), (57, 58, 1, 'R'), (59, 58, 2, 'S'), (57, 56, 2, 'S'), (59, 60, 1, 'R'), (59, 62, 1, 'SV'), (60, 65, 1, 'SV'), (61, 60, 2, 'S'), (65, 64, 2, 'S'), (65, 66, 1, 'R'), (67, 66, 2, 'S'), (61, 66, 1, 'SV'), (67, 68, 1, 'R'), (67, 70, 1, 'SV'), (27, 68, 1, 'SV'), (69, 68, 2, 'S'), (27, 26, 2, 'S'), (27, 28, 1, 'R'), (28, 69, 1, 'SV'), (29, 28, 2, 'S'), (69, 70, 1, 'R'), (70, 71, 2, 'S'), (29, 30, 2, 'R'), (30, 31, 2, 'S'), (31, 32, 2, 'R'), (32, 33, 3, 'S'), (33, 34, 1, 'R'), (35, 34, 2, 'S'), (35, 36, 2, 'R'), (36, 37, 2, 'S'), (61, 62, 1, 'R'), (62, 63, 2, 'S'), (14, 15, 2, 'S'), (3, 3, 1, 'SV'), (33, 33, 1, 'SV'), (12, 57, 1, 'D'), (32, 34, 1, 'D')]
0 1 14454 2 H [1]
1 1 40512185.0 2 T [0, 2]
2 1 40517987.5 3 H [1, 3, 6]
3 1 41774747.0 3 T [2, 3, 4]
4 1 41774748.0 2 H [3, 5]
5 1 41936520.0 2 T [4, 6]
6 1 41936521.0 2 H [2, 5, 7]
7 1 147055819.0 2 T [8, 10, 6]
8 1 147055820.0 1 H [9, 7]
9 1 148404176.0 1 T [8, 10]
10 1 148404177.0 2 H [9, 11, 7]
11 1 185127593.5 2 T [10, 12, 14]
12 1 185127594.5 2 H [57, 11, 13]
13 1 185956641.0 2 T [58, 12, 14]
58 8 32875966.0 2 H [57, 59, 13]
57 8 32875965.0 2 T [56, 58, 12]
56 8 0.0 2 H [57]
59 8 81260189.0 2 T [58, 60, 62]
60 8 81260190.0 2 H [65, 59, 61]
65 9 28057393.0 2 T [64, 66, 60]
64 9 0.0 2 H [65]
66 9 28057394.0 2 H [65, 67, 61]
67 9 84186499.5 2 T [66, 68, 70]
68 9 84186500.5 2 H [27, 67, 69]
27 3 13080569.0 2 T [26, 28, 68]
26 3 12920.0 2 H [27]
28 3 13080570.0 2 H [27, 69, 29]
69 9 84962544.0 2 T [68, 28, 70]
70 9 84962545.0 2 H [67, 69, 71]
71 9 138334464.0 2 T [70]
29 3 122760083.0 2 T [28, 30]
30 3 122760084.0 2 H [29, 31]
31 3 122825619.0 2 T [32, 30]
32 3 122825620.0 3 H [33, 34, 31]
33 3 124474912.0 3 T [32, 33, 34]
34 3 124474913.0 2 H [32, 33, 35]
35 3 124576454.0 2 T [34, 36]
36 3 124576455.0 2 H [35, 37]
37 3 198230595.0 2 T [36]
61 8 82539737.5 2 T [66, 60, 62]
62 8 82539738.5 2 H [59, 61, 63]
63 8 145076125.0 2 T [62]
14 1 185956642.0 2 H [11, 13, 15]
15 1 248943332.0 2 T [14]
Answer [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 58, 59, 60, 61, 66, 67, 68, 69, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 36, 35, 34, 32, 33, 33, 32, 31, 30, 29, 28, 27, 26, 27, 68, 69, 70, 71, 70, 67, 66, 65, 64, 65, 60, 61, 62, 63, 62, 59, 58, 57, 56, 57, 12, 13, 14, 15, 14, 11, 10, 7, 6, 2, 3, 3, 2, 1, 0]
[16, 17, 18, 19, 20, 81, 80, 79, 78, 82, 83, 21, 22, 23, 24, 25]
[(17, 16, 2, 'S'), (17, 18, 1, 'R'), (17, 80, 1, 'SV'), (19, 18, 2, 'S'), (18, 79, 1, 'SV'), (19, 20, 1, 'R'), (19, 82, 1, 'SV'), (20, 81, 1, 'SV'), (20, 21, 2, 'S'), (81, 80, 2, 'S'), (81, 82, 1, 'R'), (79, 80, 1, 'R'), (79, 78, 2, 'S'), (82, 83, 2, 'S'), (21, 22, 2, 'R'), (22, 23, 1, 'SV'), (22, 23, 3, 'S'), (23, 24, 2, 'R'), (24, 25, 2, 'S')]
Component [16, 17, 18, 19, 20, 81, 80, 79, 78, 82, 83, 21, 22, 23, 24, 25]
Component edges [(17, 16, 2, 'S'), (17, 18, 1, 'R'), (17, 80, 1, 'SV'), (19, 18, 2, 'S'), (18, 79, 1, 'SV'), (19, 20, 1, 'R'), (19, 82, 1, 'SV'), (20, 81, 1, 'SV'), (20, 21, 2, 'S'), (81, 80, 2, 'S'), (81, 82, 1, 'R'), (79, 80, 1, 'R'), (79, 78, 2, 'S'), (82, 83, 2, 'S'), (21, 22, 2, 'R'), (22, 23, 1, 'SV'), (22, 23, 3, 'S'), (23, 24, 2, 'R'), (24, 25, 2, 'S')]
ODD vertices []
TOUR
[16, 25, 78, 83]
paths_score 20 [[16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [25, 24, 23, 22, 23, 22, 21, 20, 81, 80, 79, 78], [78, 79, 18, 19, 82, 83], [83, 82, 81, 80, 17, 16]]
paths_score 20 [[25, 24, 23, 22, 21, 20, 19, 18, 17, 16], [16, 17, 80, 81, 82, 83], [83, 82, 19, 18, 79, 78], [78, 79, 80, 81, 20, 21, 22, 23, 22, 23, 24, 25]]
paths_score 20 [[78, 79, 80, 81, 82, 83], [83, 82, 19, 18, 17, 16], [16, 17, 80, 81, 20, 21, 22, 23, 24, 25], [25, 24, 23, 22, 23, 22, 21, 20, 19, 18, 79, 78]]
paths_score 20 [[83, 82, 81, 80, 79, 78], [78, 79, 18, 19, 20, 21, 22, 23, 24, 25], [25, 24, 23, 22, 23, 22, 21, 20, 81, 80, 17, 16], [16, 17, 18, 19, 82, 83]]
all edges with dummy:  [(17, 16, 2, 'S'), (17, 18, 1, 'R'), (17, 80, 1, 'SV'), (19, 18, 2, 'S'), (18, 79, 1, 'SV'), (19, 20, 1, 'R'), (19, 82, 1, 'SV'), (20, 81, 1, 'SV'), (20, 21, 2, 'S'), (81, 80, 2, 'S'), (81, 82, 1, 'R'), (79, 80, 1, 'R'), (79, 78, 2, 'S'), (82, 83, 2, 'S'), (21, 22, 2, 'R'), (22, 23, 1, 'SV'), (22, 23, 3, 'S'), (23, 24, 2, 'R'), (24, 25, 2, 'S')]
16 2 15925.0 2 H [17]
17 2 17108121.5 2 T [16, 18, 80]
18 2 17108122.5 2 H [17, 19, 79]
19 2 18276181.0 2 T [18, 20, 82]
20 2 18276182.0 2 H [81, 19, 21]
81 11 75620387.0 2 T [80, 82, 20]
80 11 73792026.75 2 H [81, 17, 79]
79 11 73792025.75 2 T [80, 18, 78]
78 11 0.0 2 H [79]
82 11 75620388.0 2 H [81, 83, 19]
83 11 135069565.0 2 T [82]
21 2 167593131.0 2 T [20, 22]
22 2 167593132.0 3 H [21, 23]
23 2 169252765.0 3 T [24, 22]
24 2 169252766 2 H [25, 23]
25 2 242181356 2 T [24]
Answer [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 24, 23, 22, 23, 22, 21, 20, 81, 80, 79, 78, 79, 18, 19, 82, 83, 82, 81, 80, 17, 16]
[38, 39, 40, 41, 42, 43]
[(38, 39, 2, 'S'), (39, 40, 1, 'R'), (39, 42, 1, 'SV'), (40, 41, 1, 'S'), (41, 42, 1, 'R'), (42, 43, 2, 'S')]
Component [38, 39, 40, 41, 42, 43]
Component edges [(38, 39, 2, 'S'), (39, 40, 1, 'R'), (39, 42, 1, 'SV'), (40, 41, 1, 'S'), (41, 42, 1, 'R'), (42, 43, 2, 'S')]
ODD vertices []
TOUR
[38, 43]
paths_score 0 [[38, 39, 40, 41, 42, 43], [43, 42, 39, 38]]
paths_score 0 [[43, 42, 41, 40, 39, 38], [38, 39, 42, 43]]
all edges with dummy:  [(38, 39, 2, 'S'), (39, 40, 1, 'R'), (39, 42, 1, 'SV'), (40, 41, 1, 'S'), (41, 42, 1, 'R'), (42, 43, 2, 'S')]
38 4 12986 2 H [39]
39 4 82336356.0 2 T [40, 42, 38]
40 4 82336357.0 1 H [41, 39]
41 4 82929518.0 1 T [40, 42]
42 4 82929519 2 H [41, 43, 39]
43 4 190202563 2 T [42]
Answer [38, 39, 40, 41, 42, 43, 42, 39, 38]
[44, 45]
[(44, 45, 2, 'S')]
Component [44, 45]
Component edges [(44, 45, 2, 'S')]
ODD vertices []
TOUR
[44, 45]
paths_score 0 [[44, 45], [45, 44]]
paths_score 0 [[45, 44], [44, 45]]
all edges with dummy:  [(44, 45, 2, 'S')]
44 5 0 2 H [45]
45 5 181472714 2 T [44]
Answer [44, 45, 44]
[46, 47, 48, 49, 50, 51, 52, 53]
[(46, 47, 2, 'S'), (47, 48, 2, 'R'), (48, 49, 3, 'S'), (48, 52, 1, 'SV'), (49, 50, 1, 'R'), (51, 50, 1, 'S'), (51, 52, 1, 'R'), (52, 53, 2, 'S'), (49, 49, 1, 'SV')]
Component [46, 47, 48, 49, 50, 51, 52, 53]
Component edges [(46, 47, 2, 'S'), (47, 48, 2, 'R'), (48, 49, 3, 'S'), (48, 52, 1, 'SV'), (49, 50, 1, 'R'), (51, 50, 1, 'S'), (51, 52, 1, 'R'), (52, 53, 2, 'S'), (49, 49, 1, 'SV')]
ODD vertices []
TOUR
[46, 53]
paths_score 0 [[46, 47, 48, 49, 50, 51, 52, 53], [53, 52, 48, 49, 49, 48, 47, 46]]
paths_score 0 [[53, 52, 51, 50, 49, 48, 47, 46], [46, 47, 48, 49, 49, 48, 52, 53]]
all edges with dummy:  [(46, 47, 2, 'S'), (47, 48, 2, 'R'), (48, 49, 3, 'S'), (48, 52, 1, 'SV'), (49, 50, 1, 'R'), (51, 50, 1, 'S'), (51, 52, 1, 'R'), (52, 53, 2, 'S'), (49, 49, 1, 'SV')]
46 6 76217 2 H [47]
47 6 72930097.0 2 T [48, 46]
48 6 72931670.0 3 H [49, 52, 47]
49 6 74063873.0 3 T [48, 49, 50]
50 6 74063874.0 2 H [49, 51]
51 6 74143806.0 2 T [50, 52]
52 6 74143807.0 2 H [48, 51, 53]
53 6 170739896.0 2 T [52]
Answer [46, 47, 48, 49, 50, 51, 52, 53, 52, 48, 49, 49, 48, 47, 46]
[54, 55]
[(54, 55, 2, 'S')]
Component [54, 55]
Component edges [(54, 55, 2, 'S')]
ODD vertices []
TOUR
[54, 55]
paths_score 0 [[54, 55], [55, 54]]
paths_score 0 [[55, 54], [54, 55]]
all edges with dummy:  [(54, 55, 2, 'S')]
54 7 0 2 H [55]
55 7 159334984 2 T [54]
Answer [54, 55, 54]
[72, 73, 74, 75, 76, 77]
[(73, 72, 2, 'S'), (73, 74, 1, 'R'), (73, 75, 1, 'SV'), (75, 74, 2, 'S'), (74, 76, 1, 'SV'), (75, 76, 1, 'R'), (76, 77, 2, 'S')]
Component [72, 73, 74, 75, 76, 77]
Component edges [(73, 72, 2, 'S'), (73, 74, 1, 'R'), (73, 75, 1, 'SV'), (75, 74, 2, 'S'), (74, 76, 1, 'SV'), (75, 76, 1, 'R'), (76, 77, 2, 'S')]
ODD vertices []
TOUR
[72, 77]
paths_score 0 [[72, 73, 74, 75, 76, 77], [77, 76, 74, 75, 73, 72]]
paths_score 0 [[77, 76, 75, 74, 73, 72], [72, 73, 75, 74, 76, 77]]
all edges with dummy:  [(73, 72, 2, 'S'), (73, 74, 1, 'R'), (73, 75, 1, 'SV'), (75, 74, 2, 'S'), (74, 76, 1, 'SV'), (75, 76, 1, 'R'), (76, 77, 2, 'S')]
72 10 0.0 2 H [73]
73 10 46991592.0 2 T [72, 74, 75]
74 10 46991593.0 2 H [73, 75, 76]
75 10 48060267.0 2 T [73, 74, 76]
76 10 48060268.0 2 H [74, 75, 77]
77 10 133785266.0 2 T [76]
Answer [72, 73, 74, 75, 76, 77, 76, 74, 75, 73, 72]
[84, 85, 86, 88, 89, 87]
[(85, 84, 2, 'S'), (85, 86, 1, 'R'), (85, 87, 1, 'SV'), (86, 88, 1, 'SV'), (87, 86, 2, 'S'), (88, 89, 2, 'S'), (87, 88, 1, 'R')]
Component [84, 85, 86, 88, 89, 87]
Component edges [(85, 84, 2, 'S'), (85, 86, 1, 'R'), (85, 87, 1, 'SV'), (86, 88, 1, 'SV'), (87, 86, 2, 'S'), (88, 89, 2, 'S'), (87, 88, 1, 'R')]
ODD vertices []
TOUR
[84, 89]
paths_score 0 [[84, 85, 86, 87, 88, 89], [89, 88, 86, 87, 85, 84]]
paths_score 0 [[89, 88, 87, 86, 85, 84], [84, 85, 87, 86, 88, 89]]
all edges with dummy:  [(85, 84, 2, 'S'), (85, 86, 1, 'R'), (85, 87, 1, 'SV'), (86, 88, 1, 'SV'), (87, 86, 2, 'S'), (88, 89, 2, 'S'), (87, 88, 1, 'R')]
84 12 0.0 2 H [85]
85 12 63787601.0 2 T [84, 86, 87]
86 12 63787602.0 2 H [88, 85, 87]
88 12 65435657.0 2 H [89, 86, 87]
89 12 133263960.0 2 T [88]
87 12 65435656.0 2 T [88, 85, 86]
Answer [84, 85, 86, 87, 88, 89, 88, 86, 87, 85, 84]
[90, 91, 92, 93, 94, 95]
[(90, 91, 2, 'S'), (91, 92, 2, 'R'), (92, 93, 1, 'SV'), (92, 93, 3, 'S'), (93, 94, 2, 'R'), (94, 95, 2, 'S')]
Component [90, 91, 92, 93, 94, 95]
Component edges [(90, 91, 2, 'S'), (91, 92, 2, 'R'), (92, 93, 1, 'SV'), (92, 93, 3, 'S'), (93, 94, 2, 'R'), (94, 95, 2, 'S')]
ODD vertices []
TOUR
[90, 95]
paths_score 0 [[90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90]]
paths_score 0 [[95, 94, 93, 92, 91, 90], [90, 91, 92, 93, 92, 93, 94, 95]]
all edges with dummy:  [(90, 91, 2, 'S'), (91, 92, 2, 'R'), (92, 93, 1, 'SV'), (92, 93, 3, 'S'), (93, 94, 2, 'R'), (94, 95, 2, 'S')]
90 13 16004726 2 H [91]
91 13 50480709.0 2 T [90, 92]
92 13 50480710.0 3 H [91, 93]
93 13 50993749.0 3 T [92, 94]
94 13 50993750 2 H [93, 95]
95 13 114352101 2 T [94]
Answer [90, 91, 92, 93, 94, 95, 94, 93, 92, 93, 92, 91, 90]
[96, 97]
[(96, 97, 2, 'S')]
Component [96, 97]
Component edges [(96, 97, 2, 'S')]
ODD vertices []
TOUR
[96, 97]
paths_score 0 [[96, 97], [97, 96]]
paths_score 0 [[97, 96], [96, 97]]
all edges with dummy:  [(96, 97, 2, 'S')]
96 14 0 2 H [97]
97 14 106873282 2 T [96]
Answer [96, 97, 96]
[98, 99, 100, 101, 102, 103]
[(99, 98, 2, 'S'), (99, 100, 1, 'R'), (99, 101, 1, 'SV'), (101, 100, 2, 'S'), (100, 102, 1, 'SV'), (101, 102, 1, 'R'), (102, 103, 2, 'S')]
Component [98, 99, 100, 101, 102, 103]
Component edges [(99, 98, 2, 'S'), (99, 100, 1, 'R'), (99, 101, 1, 'SV'), (101, 100, 2, 'S'), (100, 102, 1, 'SV'), (101, 102, 1, 'R'), (102, 103, 2, 'S')]
ODD vertices []
TOUR
[98, 103]
paths_score 0 [[98, 99, 100, 101, 102, 103], [103, 102, 100, 101, 99, 98]]
paths_score 0 [[103, 102, 101, 100, 99, 98], [98, 99, 101, 100, 102, 103]]
all edges with dummy:  [(99, 98, 2, 'S'), (99, 100, 1, 'R'), (99, 101, 1, 'SV'), (101, 100, 2, 'S'), (100, 102, 1, 'SV'), (101, 102, 1, 'R'), (102, 103, 2, 'S')]
98 15 0.0 2 H [99]
99 15 63472299.5 2 T [98, 100, 101]
100 15 63472300.5 2 H [99, 101, 102]
101 15 65430342.0 2 T [99, 100, 102]
102 15 65430343.0 2 H [100, 101, 103]
103 15 101976509.0 2 T [102]
Answer [98, 99, 100, 101, 102, 103, 102, 100, 101, 99, 98]
[104, 105, 106, 107, 108, 109]
[(105, 104, 2, 'S'), (105, 106, 2, 'R'), (107, 106, 2, 'S'), (107, 108, 2, 'R'), (108, 109, 2, 'S')]
Component [104, 105, 106, 107, 108, 109]
Component edges [(105, 104, 2, 'S'), (105, 106, 2, 'R'), (107, 106, 2, 'S'), (107, 108, 2, 'R'), (108, 109, 2, 'S')]
ODD vertices []
TOUR
[104, 109]
paths_score 0 [[104, 105, 106, 107, 108, 109], [109, 108, 107, 106, 105, 104]]
paths_score 0 [[109, 108, 107, 106, 105, 104], [104, 105, 106, 107, 108, 109]]
all edges with dummy:  [(105, 104, 2, 'S'), (105, 106, 2, 'R'), (107, 106, 2, 'S'), (107, 108, 2, 'R'), (108, 109, 2, 'S')]
104 16 0.0 2 H [105]
105 16 21500434.0 2 T [104, 106]
106 16 21500435.0 2 H [105, 107]
107 16 22438802.0 2 T [106, 108]
108 16 22438803.0 2 H [107, 109]
109 16 90224751.0 2 T [108]
Answer [104, 105, 106, 107, 108, 109, 108, 107, 106, 105, 104]
[110, 111, 112, 113, 114, 115]
[(110, 111, 2, 'S'), (111, 112, 2, 'R'), (112, 113, 1, 'SV'), (112, 113, 3, 'S'), (113, 114, 2, 'R'), (114, 115, 2, 'S')]
Component [110, 111, 112, 113, 114, 115]
Component edges [(110, 111, 2, 'S'), (111, 112, 2, 'R'), (112, 113, 1, 'SV'), (112, 113, 3, 'S'), (113, 114, 2, 'R'), (114, 115, 2, 'S')]
ODD vertices []
TOUR
[110, 115]
paths_score 0 [[110, 111, 112, 113, 114, 115], [115, 114, 113, 112, 113, 112, 111, 110]]
paths_score 0 [[115, 114, 113, 112, 111, 110], [110, 111, 112, 113, 112, 113, 114, 115]]
all edges with dummy:  [(110, 111, 2, 'S'), (111, 112, 2, 'R'), (112, 113, 1, 'SV'), (112, 113, 3, 'S'), (113, 114, 2, 'R'), (114, 115, 2, 'S')]
110 17 66654 2 H [111]
111 17 71115536.0 2 T [112, 110]
112 17 71115537.0 3 H [113, 111]
113 17 71780527.0 3 T [112, 114]
114 17 71780528 2 H [113, 115]
115 17 83246391 2 T [114]
Answer [110, 111, 112, 113, 114, 115, 114, 113, 112, 113, 112, 111, 110]
[116, 117]
[(116, 117, 2, 'S')]
Component [116, 117]
Component edges [(116, 117, 2, 'S')]
ODD vertices []
TOUR
[116, 117]
paths_score 0 [[116, 117], [117, 116]]
paths_score 0 [[117, 116], [116, 117]]
all edges with dummy:  [(116, 117, 2, 'S')]
116 18 0 2 H [117]
117 18 80256374 2 T [116]
Answer [116, 117, 116]
[118, 119]
[(118, 119, 2, 'S')]
Component [118, 119]
Component edges [(118, 119, 2, 'S')]
ODD vertices []
TOUR
[118, 119]
paths_score 0 [[118, 119], [119, 118]]
paths_score 0 [[119, 118], [118, 119]]
all edges with dummy:  [(118, 119, 2, 'S')]
118 19 0 2 H [119]
119 19 58605715 2 T [118]
Answer [118, 119, 118]
[120, 121]
[(120, 121, 2, 'S')]
Component [120, 121]
Component edges [(120, 121, 2, 'S')]
ODD vertices []
TOUR
[120, 121]
paths_score 0 [[120, 121], [121, 120]]
paths_score 0 [[121, 120], [120, 121]]
all edges with dummy:  [(120, 121, 2, 'S')]
120 20 0 2 H [121]
121 20 64333718 2 T [120]
Answer [120, 121, 120]
[122, 123]
[(122, 123, 2, 'S')]
Component [122, 123]
Component edges [(122, 123, 2, 'S')]
ODD vertices []
TOUR
[122, 123]
paths_score 0 [[122, 123], [123, 122]]
paths_score 0 [[123, 122], [122, 123]]
all edges with dummy:  [(122, 123, 2, 'S')]
122 21 0 2 H [123]
123 21 46697230 2 T [122]
Answer [122, 123, 122]
[124, 125]
[(124, 125, 2, 'S')]
Component [124, 125]
Component edges [(124, 125, 2, 'S')]
ODD vertices []
TOUR
[124, 125]
paths_score 0 [[124, 125], [125, 124]]
paths_score 0 [[125, 124], [124, 125]]
all edges with dummy:  [(124, 125, 2, 'S')]
124 22 0 2 H [125]
125 22 50805587 2 T [124]
Answer [124, 125, 124]
[126, 127]
[(126, 127, 1, 'S')]
Component [126, 127]
Component edges [(126, 127, 1, 'S')]
ODD vertices [126, 127]
TOUR
[126, 127]
all edges with dummy:  [(126, 127, 1, 'S')]
126 23 0 1 H [127]
127 23 156025612 1 T [126]
Answer [126, 127]
[128, 129]
[(128, 129, 1, 'S')]
Component [128, 129]
Component edges [(128, 129, 1, 'S')]
ODD vertices [128, 129]
TOUR
[128, 129]
all edges with dummy:  [(128, 129, 1, 'S')]
128 24 0 1 H [129]
129 24 57212132 1 T [128]
Answer [128, 129]
{(0, 1, 'S'): 2, (1, 2, 'R'): 2, (2, 3, 'S'): 3, (2, 6, 'SV'): 1, (3, 4, 'R'): 1, (5, 4, 'S'): 1, (5, 6, 'R'): 1, (6, 7, 'S'): 2, (7, 8, 'R'): 1, (7, 10, 'SV'): 1, (8, 9, 'S'): 1, (9, 10, 'R'): 1, (11, 10, 'S'): 2, (11, 12, 'R'): 1, (11, 14, 'SV'): 1, (13, 12, 'S'): 2, (13, 58, 'SV'): 1, (13, 14, 'R'): 1, (57, 58, 'R'): 1, (59, 58, 'S'): 2, (57, 56, 'S'): 2, (59, 60, 'R'): 1, (59, 62, 'SV'): 1, (60, 65, 'SV'): 1, (61, 60, 'S'): 2, (65, 64, 'S'): 2, (65, 66, 'R'): 1, (67, 66, 'S'): 2, (61, 66, 'SV'): 1, (67, 68, 'R'): 1, (67, 70, 'SV'): 1, (27, 68, 'SV'): 1, (69, 68, 'S'): 2, (27, 26, 'S'): 2, (27, 28, 'R'): 1, (28, 69, 'SV'): 1, (29, 28, 'S'): 2, (69, 70, 'R'): 1, (70, 71, 'S'): 2, (29, 30, 'R'): 2, (30, 31, 'S'): 2, (31, 32, 'R'): 2, (32, 33, 'S'): 3, (33, 34, 'R'): 1, (35, 34, 'S'): 2, (35, 36, 'R'): 2, (36, 37, 'S'): 2, (61, 62, 'R'): 1, (62, 63, 'S'): 2, (14, 15, 'S'): 2, (3, 3, 'SV'): 1, (33, 33, 'SV'): 1, (12, 57, 'D'): 1, (32, 34, 'D'): 1}
split node indices:  [31, 44, 49, 54, 59, 64, 69]
debug paths separation:  [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 58, 59, 60, 61, 66, 67, 68, 69, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 35, 34, 32, 33, 33, 32, 31, 30, 29, 28, 27, 26], [26, 27, 68, 69, 70, 71], [71, 70, 67, 66, 65, 64], [64, 65, 60, 61, 62, 63], [63, 62, 59, 58, 57, 56], [56, 57, 12, 13, 14, 15], [15, 14, 11, 10, 7, 6, 2, 3, 3, 2, 1, 0]]
{(17, 16, 'S'): 2, (17, 18, 'R'): 1, (17, 80, 'SV'): 1, (19, 18, 'S'): 2, (18, 79, 'SV'): 1, (19, 20, 'R'): 1, (19, 82, 'SV'): 1, (20, 81, 'SV'): 1, (20, 21, 'S'): 2, (81, 80, 'S'): 2, (81, 82, 'R'): 1, (79, 80, 'R'): 1, (79, 78, 'S'): 2, (82, 83, 'S'): 2, (21, 22, 'R'): 2, (22, 23, 'SV'): 1, (22, 23, 'S'): 3, (23, 24, 'R'): 2, (24, 25, 'S'): 2}
split node indices:  [9, 20, 25]
debug paths separation:  [[16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [25, 24, 23, 22, 23, 22, 21, 20, 81, 80, 79, 78], [78, 79, 18, 19, 82, 83], [83, 82, 81, 80, 17, 16]]
{(38, 39, 'S'): 2, (39, 40, 'R'): 1, (39, 42, 'SV'): 1, (40, 41, 'S'): 1, (41, 42, 'R'): 1, (42, 43, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[38, 39, 40, 41, 42, 43], [43, 42, 39, 38]]
{(44, 45, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[44, 45], [45, 44]]
{(46, 47, 'S'): 2, (47, 48, 'R'): 2, (48, 49, 'S'): 3, (48, 52, 'SV'): 1, (49, 50, 'R'): 1, (51, 50, 'S'): 1, (51, 52, 'R'): 1, (52, 53, 'S'): 2, (49, 49, 'SV'): 1}
split node indices:  [7]
debug paths separation:  [[46, 47, 48, 49, 50, 51, 52, 53], [53, 52, 48, 49, 49, 48, 47, 46]]
{(54, 55, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[54, 55], [55, 54]]
{(73, 72, 'S'): 2, (73, 74, 'R'): 1, (73, 75, 'SV'): 1, (75, 74, 'S'): 2, (74, 76, 'SV'): 1, (75, 76, 'R'): 1, (76, 77, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[72, 73, 74, 75, 76, 77], [77, 76, 74, 75, 73, 72]]
{(85, 84, 'S'): 2, (85, 86, 'R'): 1, (85, 87, 'SV'): 1, (86, 88, 'SV'): 1, (87, 86, 'S'): 2, (88, 89, 'S'): 2, (87, 88, 'R'): 1}
split node indices:  [5]
debug paths separation:  [[84, 85, 86, 87, 88, 89], [89, 88, 86, 87, 85, 84]]
{(90, 91, 'S'): 2, (91, 92, 'R'): 2, (92, 93, 'SV'): 1, (92, 93, 'S'): 3, (93, 94, 'R'): 2, (94, 95, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90]]
{(96, 97, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[96, 97], [97, 96]]
{(99, 98, 'S'): 2, (99, 100, 'R'): 1, (99, 101, 'SV'): 1, (101, 100, 'S'): 2, (100, 102, 'SV'): 1, (101, 102, 'R'): 1, (102, 103, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[98, 99, 100, 101, 102, 103], [103, 102, 100, 101, 99, 98]]
{(105, 104, 'S'): 2, (105, 106, 'R'): 2, (107, 106, 'S'): 2, (107, 108, 'R'): 2, (108, 109, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[104, 105, 106, 107, 108, 109], [109, 108, 107, 106, 105, 104]]
{(110, 111, 'S'): 2, (111, 112, 'R'): 2, (112, 113, 'SV'): 1, (112, 113, 'S'): 3, (113, 114, 'R'): 2, (114, 115, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[110, 111, 112, 113, 114, 115], [115, 114, 113, 112, 113, 112, 111, 110]]
{(116, 117, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[116, 117], [117, 116]]
{(118, 119, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[118, 119], [119, 118]]
{(120, 121, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[120, 121], [121, 120]]
{(122, 123, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[122, 123], [123, 122]]
{(124, 125, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[124, 125], [125, 124]]
{(126, 127, 'S'): 1}
split node indices:  []
debug paths separation:  [[126, 127]]
{(128, 129, 'S'): 1}
split node indices:  []
debug paths separation:  [[128, 129]]
