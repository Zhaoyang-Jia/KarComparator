Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ae446518e61848c5abfd0408067eb19d-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/ae446518e61848c5abfd0408067eb19d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 40 COLUMNS
At line 207 RHS
At line 243 BOUNDS
At line 275 ENDATA
Problem MODEL has 35 rows, 31 columns and 81 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -145 - 0.00 seconds
Cgl0003I 0 fixed, 10 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 30 columns (30 integer (16 of which binary)) and 70 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -130 iterations 3
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 1602 iterations 5
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 1602 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 1602 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -19 iterations 7
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -19 iterations 2
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -19 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -19 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -19 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -9 iterations 4
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. -9 iterations 1
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -9 iterations 0
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. -9 iterations 0
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 1973 iterations 8
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 1973 iterations 0
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 1973 iterations 0
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 1843 iterations 4
Cbc0038I Solution found of 1843
Cbc0038I Cleaned solution of 1843
Cbc0038I Rounding solution of -140 is better than previous of 1843

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 24 rows 30 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -141.4
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass  20: suminf.    0.38000 (1) obj. -141.4 iterations 3
Cbc0038I Pass  21: suminf.    0.41997 (2) obj. -141.4 iterations 2
Cbc0038I Pass  22: suminf.    0.38000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  23: suminf.    0.38000 (1) obj. -141.4 iterations 0
Cbc0038I Pass  24: suminf.    0.38000 (1) obj. -141.4 iterations 0
Cbc0038I Pass  25: suminf.    0.66001 (2) obj. -141.4 iterations 8
Cbc0038I Pass  26: suminf.    0.66001 (2) obj. -141.4 iterations 0
Cbc0038I Pass  27: suminf.    0.44666 (1) obj. -141.4 iterations 1
Cbc0038I Pass  28: suminf.    0.66001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  29: suminf.    0.66001 (2) obj. -141.4 iterations 0
Cbc0038I Pass  30: suminf.    0.80004 (4) obj. -141.4 iterations 4
Cbc0038I Pass  31: suminf.    0.56001 (2) obj. -141.4 iterations 1
Cbc0038I Pass  32: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  33: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  34: suminf.    1.30004 (4) obj. -141.4 iterations 8
Cbc0038I Pass  35: suminf.    0.66001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  36: suminf.    0.44666 (1) obj. -141.4 iterations 1
Cbc0038I Pass  37: suminf.    0.66001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  38: suminf.    0.80004 (4) obj. -141.4 iterations 5
Cbc0038I Pass  39: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  40: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  41: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  42: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  43: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  44: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  45: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  46: suminf.    0.56001 (2) obj. -141.4 iterations 0
Cbc0038I Pass  47: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  48: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  49: suminf.    0.66001 (2) obj. -141.4 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 24 rows 30 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -140 - took 0.00 seconds
Cbc0012I Integer solution of -140 found by DiveCoefficient after 3 iterations and 0 nodes (0.01 seconds)
Cbc0031I 2 added rows had average density of 10.5
Cbc0013I At root node, 2 cuts changed objective from -145 to -140 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -140, took 3 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -145 to -140
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -140.00000000
Enumerated nodes:               0
Total iterations:               3
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/31c80c0cf8554322b1c7510c64395ad5-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/31c80c0cf8554322b1c7510c64395ad5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 54 COLUMNS
At line 290 RHS
At line 340 BOUNDS
At line 383 ENDATA
Problem MODEL has 49 rows, 42 columns and 119 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -200 - 0.00 seconds
Cgl0003I 0 fixed, 13 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (21 of which binary)) and 108 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -200
Cbc0038I Cleaned solution of -200
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous of which 9 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -200 - took 0.00 seconds
Cbc0012I Integer solution of -200 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -200, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -200 to -200
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -200.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/6e04705cb881424c906f3127b32f344c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/6e04705cb881424c906f3127b32f344c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/76dd28db83714c769c339c889421977c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/76dd28db83714c769c339c889421977c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e46da873abc846078038eb9ad5ead5be-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/e46da873abc846078038eb9ad5ead5be-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d56bb809ab624b38b8c657f59aecf2e4-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/d56bb809ab624b38b8c657f59aecf2e4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 95 COLUMNS
At line 522 RHS
At line 613 BOUNDS
At line 694 ENDATA
Problem MODEL has 90 rows, 80 columns and 208 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -560 - 0.00 seconds
Cgl0003I 0 fixed, 22 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 68 rows, 80 columns (80 integer (36 of which binary)) and 188 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 6 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -560 iterations 1
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -560 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -560 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 511 iterations 10
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 511 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 511 iterations 0
Cbc0038I Pass   7: suminf.    0.50000 (1) obj. 635 iterations 9
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 635 iterations 2
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 635 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 598 iterations 4
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 598 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 598 iterations 0
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 560 iterations 10
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 560 iterations 1
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 560 iterations 0
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 560 iterations 0
Cbc0038I Pass  17: suminf.    1.33333 (4) obj. 752 iterations 18
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 792 iterations 2
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 792 iterations 0
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 792 iterations 0
Cbc0038I Pass  21: suminf.    0.50000 (1) obj. 562 iterations 19
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. 562 iterations 1
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. 562 iterations 0
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. 562 iterations 0
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. 482 iterations 9
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 482 iterations 0
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. 482 iterations 0
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 485 iterations 5
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. 485 iterations 0
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 485 iterations 0
Cbc0038I Rounding solution of -560 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -560 - took 0.00 seconds
Cbc0012I Integer solution of -556 found by DiveCoefficient after 5 iterations and 0 nodes (0.01 seconds)
Cbc0031I 5 added rows had average density of 4.8
Cbc0013I At root node, 5 cuts changed objective from -560 to -556 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 6 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -556, took 5 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -560 to -556
Probing was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 2 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -556.00000000
Enumerated nodes:               0
Total iterations:               5
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/79ee2643309d4ae8ad5404ea9bfb0961-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/79ee2643309d4ae8ad5404ea9bfb0961-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/31d5d0d854e7409aaef60be65bde77fa-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/31d5d0d854e7409aaef60be65bde77fa-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 26 COLUMNS
At line 128 RHS
At line 150 BOUNDS
At line 171 ENDATA
Problem MODEL has 21 rows, 20 columns and 47 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -40 - 0.00 seconds
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 15 rows, 20 columns (20 integer (13 of which binary)) and 44 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -40 iterations 1
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -40 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -40 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 0 iterations 2
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 0 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 0 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 0 iterations 0
Cbc0038I Pass   8: suminf.    1.00000 (3) obj. 327.667 iterations 2
Cbc0038I Pass   9: suminf.    1.00000 (3) obj. 327.667 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 1101 iterations 2
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 1101 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 1081 iterations 4
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 1081 iterations 2
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 1081 iterations 0
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 1081 iterations 0
Cbc0038I Pass  16: suminf.    1.00000 (2) obj. 1102 iterations 1
Cbc0038I Pass  17: suminf.    1.00000 (3) obj. 1088.67 iterations 1
Cbc0038I Pass  18: suminf.    0.50000 (1) obj. 1122 iterations 2
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 1102 iterations 1
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 1102 iterations 0
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. 1102 iterations 0
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. 102 iterations 7
Cbc0038I Solution found of 102
Cbc0038I Cleaned solution of 102
Cbc0038I Rounding solution of -40 is better than previous of 102

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -40 - took 0.00 seconds
Cbc0012I Integer solution of -38 found by DiveCoefficient after 2 iterations and 0 nodes (0.00 seconds)
Cbc0031I 2 added rows had average density of 6
Cbc0013I At root node, 2 cuts changed objective from -40 to -38 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -38, took 2 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -40 to -38
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -38.00000000
Enumerated nodes:               0
Total iterations:               2
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/cbea7b7552b246cb92197cce13e9ff0d-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/cbea7b7552b246cb92197cce13e9ff0d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 43 COLUMNS
At line 227 RHS
At line 266 BOUNDS
At line 300 ENDATA
Problem MODEL has 38 rows, 33 columns and 92 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -150 - 0.00 seconds
Cgl0003I 0 fixed, 10 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 33 columns (33 integer (17 of which binary)) and 84 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -150
Cbc0038I Cleaned solution of -150
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous of which 7 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -150 - took 0.00 seconds
Cbc0012I Integer solution of -150 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -150, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -150 to -150
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -150.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/40b7fc3c83a245438a8f9f2e648869a6-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/40b7fc3c83a245438a8f9f2e648869a6-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -80 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -80 - took 0.00 seconds
Cbc0012I Integer solution of -80 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -80, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -80 to -80
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -80.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/34f1e9e10a284c0b9b8188d90b7b8b5d-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/34f1e9e10a284c0b9b8188d90b7b8b5d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 48 COLUMNS
At line 252 RHS
At line 296 BOUNDS
At line 335 ENDATA
Problem MODEL has 43 rows, 38 columns and 99 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -175 - 0.00 seconds
Cgl0003I 0 fixed, 13 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 37 columns (37 integer (19 of which binary)) and 86 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -160 iterations 2
Cbc0038I Solution found of -160
Cbc0038I Cleaned solution of -160
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 4 continuous of which 9 were internal integer and 0 internal continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -162.4
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.08000 (1) obj. -162.4 iterations 3
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -170 iterations 10
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -170 iterations 0
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -170 iterations 0
Cbc0038I Pass   6: suminf.    0.33000 (1) obj. -162.4 iterations 4
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -169 iterations 6
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -169 iterations 0
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -169 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -167 iterations 2
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -167 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -167 iterations 0
Cbc0038I Pass  13: suminf.    0.18000 (1) obj. -162.4 iterations 5
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -166 iterations 6
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. -166 iterations 0
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. -166 iterations 0
Cbc0038I Pass  17: suminf.    1.33995 (7) obj. -162.4 iterations 8
Cbc0038I Pass  18: suminf.    1.33995 (7) obj. -162.4 iterations 0
Cbc0038I Pass  19: suminf.    0.18000 (1) obj. -162.4 iterations 7
Cbc0038I Pass  20: suminf.    0.18000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  21: suminf.    0.18000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  22: suminf.    0.00813 (1) obj. -162.4 iterations 6
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -165 iterations 5
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. -165 iterations 2
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  29: suminf.    0.93000 (2) obj. -162.4 iterations 10
Cbc0038I Pass  30: suminf.    0.21333 (1) obj. -162.4 iterations 2
Cbc0038I Pass  31: suminf.    0.00000 (0) obj. -166 iterations 9
Cbc0038I Rounding solution of -170 is better than previous of -160

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 1 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -171.8
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.39333 (1) obj. -171.8 iterations 0
Cbc0038I Pass  32: suminf.    0.53998 (2) obj. -171.8 iterations 4
Cbc0038I Pass  33: suminf.    0.39333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  34: suminf.    0.42666 (1) obj. -171.8 iterations 1
Cbc0038I Pass  35: suminf.    0.42666 (1) obj. -171.8 iterations 0
Cbc0038I Pass  36: suminf.    0.72001 (2) obj. -171.8 iterations 4
Cbc0038I Pass  37: suminf.    0.42666 (1) obj. -171.8 iterations 1
Cbc0038I Pass  38: suminf.    0.61000 (2) obj. -171.8 iterations 4
Cbc0038I Pass  39: suminf.    0.52001 (2) obj. -171.8 iterations 7
Cbc0038I Pass  40: suminf.    0.52001 (2) obj. -171.8 iterations 1
Cbc0038I Pass  41: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  42: suminf.    0.52001 (2) obj. -171.8 iterations 2
Cbc0038I Pass  43: suminf.    0.52001 (2) obj. -171.8 iterations 2
Cbc0038I Pass  44: suminf.    0.52001 (2) obj. -171.8 iterations 0
Cbc0038I Pass  45: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  46: suminf.    0.52001 (2) obj. -171.8 iterations 2
Cbc0038I Pass  47: suminf.    0.70008 (2) obj. -171.8 iterations 6
Cbc0038I Pass  48: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  49: suminf.    0.52001 (2) obj. -171.8 iterations 2
Cbc0038I Pass  50: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  51: suminf.    0.70008 (2) obj. -171.8 iterations 2
Cbc0038I Pass  52: suminf.    0.49333 (1) obj. -171.8 iterations 2
Cbc0038I Pass  53: suminf.    0.52001 (2) obj. -171.8 iterations 7
Cbc0038I Pass  54: suminf.    0.49333 (1) obj. -171.8 iterations 2
Cbc0038I Pass  55: suminf.    0.46000 (1) obj. -171.8 iterations 1
Cbc0038I Pass  56: suminf.    0.62001 (2) obj. -171.8 iterations 7
Cbc0038I Pass  57: suminf.    0.46000 (1) obj. -171.8 iterations 2
Cbc0038I Pass  58: suminf.    0.70008 (2) obj. -171.8 iterations 4
Cbc0038I Pass  59: suminf.    0.49333 (1) obj. -171.8 iterations 2
Cbc0038I Pass  60: suminf.    0.52001 (2) obj. -171.8 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous of which 8 were internal integer and 0 internal continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -170 - took 0.01 seconds
Cbc0012I Integer solution of -168 found by DiveCoefficient after 6 iterations and 0 nodes (0.02 seconds)
Cbc0031I 3 added rows had average density of 6
Cbc0013I At root node, 3 cuts changed objective from -175 to -168 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -168, took 6 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -175 to -168
Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -168.00000000
Enumerated nodes:               0
Total iterations:               6
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/61abf90156324f5abc1b227c3ac87200-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/61abf90156324f5abc1b227c3ac87200-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 37 COLUMNS
At line 191 RHS
At line 224 BOUNDS
At line 254 ENDATA
Problem MODEL has 32 rows, 29 columns and 74 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -60 - 0.00 seconds
Cgl0003I 0 fixed, 4 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 28 columns (28 integer (19 of which binary)) and 64 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -60 iterations 1
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -60 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -60 iterations 0
Cbc0038I Pass   4: suminf.    0.50000 (1) obj. -8 iterations 5
Cbc0038I Pass   5: suminf.    0.50000 (1) obj. -8 iterations 2
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -28 iterations 2
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -28 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -28 iterations 0
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 114 iterations 3
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 114 iterations 3
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 114 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 114 iterations 0
Cbc0038I Pass  13: suminf.    1.00000 (2) obj. 715 iterations 3
Cbc0038I Pass  14: suminf.    1.00000 (2) obj. 715 iterations 1
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 1175 iterations 3
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 1175 iterations 0
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 1175 iterations 0
Cbc0038I Pass  18: suminf.    0.50000 (1) obj. 1185 iterations 7
Cbc0038I Pass  19: suminf.    0.50000 (1) obj. 1185 iterations 3
Cbc0038I Pass  20: suminf.    0.50000 (1) obj. 1185 iterations 4
Cbc0038I Pass  21: suminf.    1.00000 (2) obj. 1184 iterations 1
Cbc0038I Pass  22: suminf.    1.00000 (2) obj. 1184 iterations 2
Cbc0038I Pass  23: suminf.    0.50000 (1) obj. 1204 iterations 3
Cbc0038I Pass  24: suminf.    0.50000 (1) obj. 1204 iterations 3
Cbc0038I Pass  25: suminf.    0.50000 (1) obj. 1204 iterations 3
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 1183 iterations 1
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. 1183 iterations 0
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 1183 iterations 0
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. 1183 iterations 0
Cbc0038I Pass  30: suminf.    0.50000 (1) obj. 1184 iterations 7
Cbc0038I Rounding solution of -60 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -60 - took 0.00 seconds
Cbc0012I Integer solution of -58 found by DiveCoefficient after 2 iterations and 0 nodes (0.01 seconds)
Cbc0031I 2 added rows had average density of 7
Cbc0013I At root node, 2 cuts changed objective from -60 to -58 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -58, took 2 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -60 to -58
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -58.00000000
Enumerated nodes:               0
Total iterations:               2
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/bdfa8d81f46d4b56b8c8af459a6a2c58-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/bdfa8d81f46d4b56b8c8af459a6a2c58-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1fc3ccfb7508437bbc7dea637bb98148-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/1fc3ccfb7508437bbc7dea637bb98148-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/c36d530cee1543ecaf9c7a2559a2ff82-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/c36d530cee1543ecaf9c7a2559a2ff82-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e4d1ee465de045af897268d963408459-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/e4d1ee465de045af897268d963408459-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -80 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -80 - took 0.00 seconds
Cbc0012I Integer solution of -80 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -80, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -80 to -80
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -80.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ed9cdc0f59c844029d13c2f460d4476f-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/ed9cdc0f59c844029d13c2f460d4476f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/c76137323da14a17896306df4d6d5e32-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/c76137323da14a17896306df4d6d5e32-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 67 COLUMNS
At line 360 RHS
At line 423 BOUNDS
At line 478 ENDATA
Problem MODEL has 62 rows, 54 columns and 144 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -325 - 0.00 seconds
Cgl0003I 0 fixed, 17 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 53 columns (53 integer (26 of which binary)) and 126 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -310 iterations 3
Cbc0038I Solution found of -310
Cbc0038I Cleaned solution of -310
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 6 continuous of which 14 were internal integer and 0 internal continuous
Cbc0038I Full problem 44 rows 53 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -312.4
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.08000 (1) obj. -312.4 iterations 3
Cbc0038I Pass   3: suminf.    0.38000 (1) obj. -312.4 iterations 9
Cbc0038I Pass   4: suminf.    0.38000 (1) obj. -312.4 iterations 0
Cbc0038I Pass   5: suminf.    0.38000 (1) obj. -312.4 iterations 0
Cbc0038I Pass   6: suminf.    0.46001 (1) obj. -312.4 iterations 6
Cbc0038I Pass   7: suminf.    0.23000 (1) obj. -312.4 iterations 4
Cbc0038I Pass   8: suminf.    0.23000 (1) obj. -312.4 iterations 0
Cbc0038I Pass   9: suminf.    0.23000 (1) obj. -312.4 iterations 0
Cbc0038I Pass  10: suminf.    0.18000 (1) obj. -312.4 iterations 7
Cbc0038I Pass  11: suminf.    0.18000 (1) obj. -312.4 iterations 7
Cbc0038I Pass  12: suminf.    0.18000 (1) obj. -312.4 iterations 0
Cbc0038I Pass  13: suminf.    0.18000 (1) obj. -312.4 iterations 0
Cbc0038I Pass  14: suminf.    0.01000 (1) obj. -312.4 iterations 7
Cbc0038I Solution found of -313
Cbc0038I Cleaned solution of -313
Cbc0038I Rounding solution of -319 is better than previous of -313

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 2 continuous of which 12 were internal integer and 0 internal continuous
Cbc0038I Full problem 44 rows 53 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -319 to -320 (0.01 seconds)
Cbc0038I Round again with cutoff of -321.8
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  15: suminf.    0.39333 (1) obj. -321.8 iterations 0
Cbc0038I Pass  16: suminf.    0.53998 (2) obj. -321.8 iterations 4
Cbc0038I Pass  17: suminf.    0.39333 (1) obj. -321.8 iterations 1
Cbc0038I Pass  18: suminf.    0.56000 (2) obj. -321.8 iterations 4
Cbc0038I Pass  19: suminf.    0.46000 (1) obj. -321.8 iterations 1
Cbc0038I Pass  20: suminf.    0.62001 (2) obj. -321.8 iterations 2
Cbc0038I Pass  21: suminf.    0.46000 (1) obj. -321.8 iterations 1
Cbc0038I Pass  22: suminf.    0.70008 (2) obj. -321.8 iterations 4
Cbc0038I Pass  23: suminf.    0.49333 (1) obj. -321.8 iterations 2
Cbc0038I Pass  24: suminf.    0.52001 (2) obj. -321.8 iterations 2
Cbc0038I Pass  25: suminf.    0.49333 (1) obj. -321.8 iterations 1
Cbc0038I Pass  26: suminf.    0.70008 (2) obj. -321.8 iterations 2
Cbc0038I Pass  27: suminf.    0.52001 (2) obj. -321.8 iterations 6
Cbc0038I Pass  28: suminf.    0.52001 (2) obj. -321.8 iterations 2
Cbc0038I Pass  29: suminf.    0.49333 (1) obj. -321.8 iterations 1
Cbc0038I Pass  30: suminf.    0.52001 (2) obj. -321.8 iterations 2
Cbc0038I Pass  31: suminf.    0.70008 (2) obj. -321.8 iterations 7
Cbc0038I Pass  32: suminf.    0.49333 (1) obj. -321.8 iterations 3
Cbc0038I Pass  33: suminf.    0.52001 (2) obj. -321.8 iterations 2
Cbc0038I Pass  34: suminf.    0.49333 (1) obj. -321.8 iterations 1
Cbc0038I Pass  35: suminf.    0.70008 (2) obj. -321.8 iterations 2
Cbc0038I Pass  36: suminf.    0.70008 (2) obj. -321.8 iterations 1
Cbc0038I Pass  37: suminf.    0.70008 (2) obj. -321.8 iterations 2
Cbc0038I Pass  38: suminf.    0.70008 (2) obj. -321.8 iterations 2
Cbc0038I Pass  39: suminf.    0.70008 (2) obj. -321.8 iterations 3
Cbc0038I Pass  40: suminf.    0.49333 (1) obj. -321.8 iterations 2
Cbc0038I Pass  41: suminf.    0.52001 (2) obj. -321.8 iterations 2
Cbc0038I Pass  42: suminf.    0.49333 (1) obj. -321.8 iterations 1
Cbc0038I Pass  43: suminf.    0.51000 (2) obj. -321.8 iterations 4
Cbc0038I Pass  44: suminf.    0.52001 (2) obj. -321.8 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous of which 13 were internal integer and 0 internal continuous
Cbc0038I Full problem 44 rows 53 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -320 - took 0.01 seconds
Cbc0012I Integer solution of -318 found by DiveCoefficient after 6 iterations and 0 nodes (0.02 seconds)
Cbc0031I 3 added rows had average density of 6
Cbc0013I At root node, 3 cuts changed objective from -325 to -318 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -318, took 6 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -325 to -318
Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -318.00000000
Enumerated nodes:               0
Total iterations:               6
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ce310adbbcb64cafb93736c87763d35c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/ce310adbbcb64cafb93736c87763d35c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e5887b98e789429d98523c33082235b5-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/e5887b98e789429d98523c33082235b5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/5baddb8b45724ad7849c28ea9bc22d18-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/5baddb8b45724ad7849c28ea9bc22d18-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d1d0e99729ec4b888aeaba7d5c1f373f-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/d1d0e99729ec4b888aeaba7d5c1f373f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -70 - 0.00 seconds
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 22 columns (22 integer (14 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -70
Cbc0038I Cleaned solution of -70
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -70 - took 0.00 seconds
Cbc0012I Integer solution of -70 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -70, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -70 to -70
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -70.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/f7fbf89551b64be2b418d419eb14379e-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/f7fbf89551b64be2b418d419eb14379e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/0569611eac67430190f7011f9104ec6d-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/0569611eac67430190f7011f9104ec6d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0004I processed model has 0 rows, 0 columns (0 integer (0 of which binary)) and 0 elements
Cbc3007W No integer variables - nothing to do
Cuts at root node changed objective from 0 to -1.79769e+308
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

dashag 1.9981651977327086
96	1151	1	1	306553.8	292150.6	27950096.0	34951249.0	0.41	translocation_intrachr	8	13	-1	48	47	4047	5238	heterozygous	1	17	-1.0	57.55	65.75	-1.0	-1.0	0.13699999999999998	+/-	0.29
97	1152	1	1	329284.9	314881.6	27950096.0	34951249.0	0.38	translocation_intrachr	9	12	-1	52	51	4047	5238	heterozygous	1	17	-1.0	57.55	71.32	-1.0	-1.0	0.14400000000000002	+/-	0.29
98	1340	1	1	19255.3	420987.4	27970787.0	28163158.0	-1.0	duplication_inverted	10	11	-1	1	107	4048	4104	unknown	-1	-1	-1.0	59.98	76.52	-1.0	192371.0	0.154	NA	0.05
317	122	2	2	31202152.2	31200015.8	51017961.0	210861041.0	0.04	translocation_intrachr	47	79	-1	5888	5887	10051	42969	heterozygous	1	74	-1.0	12459.3	7372.04	-1.0	-1.0	0.166	-/-	0.65
383	11	2	2	36672123.9	36681891.2	51022275.0	210853491.0	0.2	translocation_intrachr	50	76	-1	7465	7466	10052	42968	heterozygous	1	74	-1.0	9389.2	21051.38	-1.0	-1.0	0.207	-/-	0.69
317	122	2	2	31202152.2	31200015.8	51017961.0	210861041.0	0.04	translocation_intrachr	47	79	-1	5888	5887	10051	42969	heterozygous	1	74	-1.0	12459.3	7372.04	-1.0	-1.0	0.166	-/-	0.65
411	12	2	2	36672140.7	36681908.0	51022275.0	210853491.0	0.2	translocation_intrachr	51	77	-1	7469	7470	10052	42968	heterozygous	1	74	-1.0	9399.73	21065.83	-1.0	-1.0	0.221	-/-	0.69
414	1260	2	2	308942.6	320205.3	53094700.0	214192510.5	0.31	translocation_intrachr	54	81	-1	68	71	10504	43758	heterozygous	1	87	-1.0	84.48	71.9	-1.0	-1.0	0.40399999999999997	-/-	0.43
412	1271	2	2	251716.4	241134.1	53087200.0	214206468.5	0.88	translocation_intrachr	52	82	-1	47	46	10502	43760	heterozygous	1	87	-1.0	71.75	60.07	-1.0	-1.0	0.265	-/-	0.44
414	1260	2	2	308942.6	320205.3	53094700.0	214192510.5	0.31	translocation_intrachr	54	81	-1	68	71	10504	43758	heterozygous	1	87	-1.0	84.48	71.9	-1.0	-1.0	0.40399999999999997	-/-	0.43
413	1272	2	2	314782.6	304200.2	53087200.0	214206468.5	0.28	translocation_intrachr	53	83	-1	57	56	10502	43760	heterozygous	1	87	-1.0	39.38	73.74	-1.0	-1.0	0.17	-/-	0.44
412	1271	2	2	251716.4	241134.1	53087200.0	214206468.5	0.88	translocation_intrachr	52	82	-1	47	46	10502	43760	heterozygous	1	87	-1.0	71.75	60.07	-1.0	-1.0	0.265	-/-	0.44
414	1260	2	2	308942.6	320205.3	53094700.0	214192510.5	0.31	translocation_intrachr	54	81	-1	68	71	10504	43758	heterozygous	1	87	-1.0	84.48	71.9	-1.0	-1.0	0.40399999999999997	-/-	0.43
1605	1140	6	6	306214.5	291144.5	116965302.0	122869821.0	0.6	translocation_intrachr	119	121	-1	69	68	24092	25468	heterozygous	1	372	-1.0	80.89	80.28	-1.0	-1.0	0.22	-/+	0.28
1604	1200	6	6	304796.2	312433.7	116961853.0	122850531.0	0.29	translocation_intrachr	118	120	-1	70	71	24091	25467	heterozygous	1	372	-1.0	83.18	84.93	-1.0	-1.0	0.16399999999999998	+/-	0.24
1604	1200	6	6	304796.2	312433.7	116961853.0	122850531.0	0.29	translocation_intrachr	118	120	-1	70	71	24091	25467	heterozygous	1	372	-1.0	83.18	84.93	-1.0	-1.0	0.16399999999999998	+/-	0.24
1605	1140	6	6	306214.5	291144.5	116965302.0	122869821.0	0.6	translocation_intrachr	119	121	-1	69	68	24092	25468	heterozygous	1	372	-1.0	80.89	80.28	-1.0	-1.0	0.22	-/+	0.28
1992	1290	9	9	306242.9	307648.6	9179674.0	12794314.0	0.99	deletion	142	149	-1	61	62	2036	2871	heterozygous	2	456	78.76	78.76	81.45	4429.2	3613234.3	0.218	NA	0.32
1992	1290	9	9	306242.9	307648.6	9179674.0	12794314.0	0.99	deletion	142	149	-1	61	62	2036	2871	heterozygous	2	456	78.76	78.76	81.45	4429.2	3613234.3	0.218	NA	0.32
1993	1221	9	9	246826.9	244788.4	9180925.0	18139773.0	0.21	translocation_intrachr	143	151	-1	51	50	2037	4116	heterozygous	1	457	-1.0	69.09	65.23	-1.0	-1.0	0.102	+/+	0.36
1995	1222	9	9	288371.7	286333.3	9180925.0	18139773.0	0.8	translocation_intrachr	144	150	-1	57	56	2037	4116	heterozygous	1	457	-1.0	89.89	72.33	-1.0	-1.0	0.17	+/+	0.36
1996	442	9	9	21035167.0	21035167.0	12791741.0	18139083.0	0.27	translocation_intrachr	145	152	-1	4337	4337	2870	4115	heterozygous	2	457	-1.0	94.58	5491.65	-1.0	-1.0	0.235	-/-	0.5
2009	441	9	9	21045806.4	21045806.4	12791741.0	18139083.0	0.47	translocation_intrachr	148	153	-1	4341	4341	2870	4115	heterozygous	2	457	-1.0	58.67	5480.58	-1.0	-1.0	0.19399999999999998	-/-	0.5
2054	1060	9	9	398896.2	509277.1	61552686.0	65594150.0	0.01	deletion	180	194	-1	55	74	9387	10011	heterozygous	1	-1	0.01	67.73	55.46	-1.0	3931083.1	0.139	NA	0.14
2183	822	10	10	754862.3	754862.3	46991592.0	47870426.5	0.94	inversion	214	223	2184	140	140	8849	8998	heterozygous	1	-1	-1.0	184.18	76.54	-1.0	189840.5	0.135	NA	0.14 46991592.0 48060267.0 right
2184	822	10	-1	945038.8	-1.0	48060267.0	-1.0	0.94	inversion_partial	223	-1	2183	173	-1	9033	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	189840.5	0.135	NA	0.14
2354	1211	11	11	300466.0	304271.5	36251165.0	45358235.0	0.06	translocation_intrachr	226	230	-1	49	50	7270	9164	heterozygous	1	541	-1.0	67.19	78.08	-1.0	-1.0	0.23	+/-	0.36
2357	1330	11	11	4680.1	525060.9	36259187.0	36514289.0	-1.0	duplication_inverted	228	229	-1	1	115	7271	7330	unknown	-1	-1	-1.0	65.28	89.44	-1.0	255102.0	0.278	NA	0.12
2568	481	12	12	276874.2	282756.1	108128422.0	114281879.0	0.1	translocation_intrachr	242	246	-1	49	50	22187	23314	heterozygous	1	-1	-1.0	65.87	4184.24	-1.0	-1.0	0.292	+/+	0.59
2569	482	12	12	276874.2	282756.1	108128422.0	114281879.0	0.1	translocation_intrachr	243	247	-1	49	50	22187	23314	heterozygous	1	-1	-1.0	65.87	4192.02	-1.0	-1.0	0.292	+/+	0.59
2799	1750	15	15	112633.1	303658.3	19993629.0	21190899.0	0.01	deletion	259	266	-1	14	39	32	218	heterozygous	2	630	0.01	56.4	58.08	-1.0	1006244.8	0.11800000000000001	NA	0.1
2921	1500	16	16	314669.8	314669.8	21500434.0	22240599.0	0.8	inversion	282	288	2922	58	58	3551	3683	heterozygous	1	658	-1.0	70.52	65.01	-1.0	198203.0	0.087	NA	0.06 21500434.0 22438802.0 right
2922	1500	16	-1	512711.8	-1.0	22438802.0	-1.0	0.8	inversion_partial	288	-1	2921	90	-1	3717	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	198203.0	0.087	NA	0.06
2989	232	17	17	36475127.6	36676025.2	46284336.0	46702870.0	0.01	deletion	302	306	-1	6297	6331	6912	6986	heterozygous	1	-1	0.01	4323.24	8289.21	-1.0	217636.4	0.317	NA	0.36
3155	1191	18	18	318227.6	304030.8	27056746.0	36266564.0	0.5	translocation_intrachr	316	324	-1	67	66	4405	6425	heterozygous	1	711	-1.0	74.84	77.69	-1.0	-1.0	0.14	+/-	0.26
3156	1192	18	18	320591.8	306395.0	27056746.0	36266564.0	0.12	translocation_intrachr	317	325	-1	67	66	4405	6425	heterozygous	1	711	-1.0	45.3	78.21	-1.0	-1.0	0.078	+/-	0.26
3157	1350	18	18	3781.8	556420.5	27066419.0	27341631.0	-1.0	duplication_inverted	318	319	-1	1	127	4406	4470	unknown	-1	-1	-1.0	78.12	84.93	-1.0	275212.0	0.264	NA	0.06
3158	1161	18	18	-3288174.9	3931921.8	31471086.0	35078127.5	-1.0	duplication_split	320	322	-1	0	125	5380	6175	unknown	-1	-1	-1.0	81.74	77.19	-1.0	3607041.5	0.165	NA	0.2
3159	1162	18	18	-3288152.7	3931641.3	31471086.0	35078127.5	-1.0	duplication_split	321	323	-1	0	125	5380	6175	unknown	-1	-1	-1.0	81.74	76.79	-1.0	3607041.5	0.146	NA	0.18
3254	1042	21	21	253659.0	369182.2	6999540.0	7496836.0	0.01	deletion	348	355	-1	28	48	218	270	heterozygous	2	729	0.01	66.03	80.39	-1.0	381772.8	0.2	NA	0.36
3256	1041	21	21	205602.4	321125.7	6999540.0	7496836.0	0.01	deletion	349	354	-1	27	47	218	270	heterozygous	2	729	0.01	64.61	80.39	-1.0	381772.8	0.18100000000000002	NA	0.36
3303	562	22	22	314996.5	333627.1	21555968.0	23392027.0	0.99	deletion	383	390	-1	39	41	1216	1488	heterozygous	1	741	56.99	957.0	56.99	4342.83	1817428.4	0.21100000000000002	NA	0.52
3303	562	22	22	314996.5	333627.1	21555968.0	23392027.0	0.99	deletion	383	390	-1	39	41	1216	1488	heterozygous	1	741	56.99	957.0	56.99	4342.83	1817428.4	0.21100000000000002	NA	0.52
3306	561	22	22	314951.3	331755.1	21557833.0	23392027.0	0.99	deletion	384	389	-1	39	40	1218	1488	heterozygous	1	741	56.99	957.08	56.99	4351.48	1817390.2	0.267	NA	0.52
3306	561	22	22	314951.3	331755.1	21557833.0	23392027.0	0.99	deletion	384	389	-1	39	40	1218	1488	heterozygous	1	741	56.99	957.08	56.99	4351.48	1817390.2	0.267	NA	0.52
0 1 14454.0 2 H [1]
1 1 27950096.0 2 T [0, 2, 5]
2 1 27950097.0 2 H [1, 3]
3 1 28069082.0 2 T [2, 4]
4 1 28069083.0 3 H [3, 4, 5]
5 1 34947606.0 3 T [1, 4, 6]
6 1 34949428.0 2 H [5, 7]
7 1 248943332.0 2 T [6]
8 2 0.0 2 H [9]
9 2 51020118.0 2 T [8, 10, 14]
10 2 51020119.0 2 H [9, 11, 13]
11 2 53090950.0 2 T [16, 10, 12]
12 2 53090951.0 2 H [11, 13, 15]
13 2 210857266.0 2 T [10, 12, 14]
14 2 210857267.0 2 H [9, 13, 15]
15 2 214199489.5 2 T [16, 12, 14]
16 2 214199490.5 2 H [17, 11, 15]
17 2 242181357.0 2 T [16]
18 3 0 2 H [19]
19 3 198230596 2 T [18]
20 4 0 2 H [21]
21 4 190202564 2 T [20]
22 5 0 2 H [23]
23 5 181472714 2 T [22]
24 6 76216.0 3 H [25]
25 6 32633338.0 3 T [24, 26]
26 6 32633339.0 3 H [25, 27]
27 6 36976631.0 3 T [26, 28]
28 6 36976632.0 3 H [27, 29]
29 6 58445657.0 3 T [28, 30]
30 6 58445658 2 H [29, 31]
31 6 60290030.0 2 T [32, 30]
32 6 60290031.0 3 H [33, 31]
33 6 80349101.0 3 T [32, 34]
34 6 80353187.0 4 H [33, 35]
35 6 81144424.0 4 T [34, 36]
36 6 81145442.0 3 H [35, 37]
37 6 116963577.5 3 T [41, 36, 38]
38 6 116963578.5 3 H [42, 37, 39]
39 6 118130489.0 3 T [40, 38]
40 6 118131169.0 3 H [41, 39]
41 6 122860176.0 3 T [40, 42, 37]
42 6 122860177.0 3 H [41, 43, 38]
43 6 169949785.0 3 T [42, 44]
44 6 169949786 2 H [43, 45]
45 6 170739896 2 T [44]
46 7 0 2 H [47]
47 7 159334984 2 T [46]
48 8 61806 2 H [49]
49 8 137777408.0 2 T [48, 50]
50 8 137777409.0 1 H [49, 51]
51 8 144888115.0 1 T [50, 52]
52 8 144888116 2 H [51, 53]
53 8 145076124 2 T [52]
54 9 0.0 2 H [55]
55 9 9180299.5 2 T [56, 58, 54]
56 9 9180300.5 2 H [57, 59, 55]
57 9 12793027.5 2 T [56, 58, 60]
58 9 12793028.5 2 H [57, 59, 55]
59 9 18139428.0 2 T [56, 58, 60]
60 9 18139429.0 2 H [57, 59, 61]
61 9 138334464.0 2 T [60]
62 10 0.0 2 H [63]
63 10 46991592.0 2 T [64, 65, 62]
64 10 46991593.0 2 H [65, 63]
65 10 48060267.0 2 T [64, 66, 63]
66 10 48060268.0 2 H [65, 67]
67 10 133785266.0 2 T [66]
68 11 60458.0 2 H [69]
69 11 36251165.0 2 T [75, 68, 70]
70 11 36251166.0 2 H [69, 71]
71 11 36310302.0 2 T [72, 70]
72 11 36310303.0 3 H [72, 73, 71]
73 11 45304391.0 3 T [72, 74]
74 11 45304392.0 2 H [73, 75]
75 11 45358235.0 2 T [74, 76, 69]
76 11 45358236.0 2 H [75, 77]
77 11 135069564.0 2 T [76]
78 12 14569 2 H [79]
79 12 108079511.0 2 T [80, 82, 78]
80 12 108103967.0 1 H [81, 79]
81 12 114281879.0 1 T [80, 82]
82 12 114281880.0 1 H [81, 83, 79]
83 12 114345292.0 1 T [82, 84]
84 12 114345293 2 H [83, 85]
85 12 133263959 2 T [84]
86 13 0 2 H [87]
87 13 114352102 2 T [86]
88 14 0 2 H [89]
89 14 106873282 2 T [88]
90 15 0 2 H [91]
91 15 101976509 2 T [90]
92 16 0.0 2 H [93]
93 16 21500434.0 2 T [92, 94, 95]
94 16 21500435.0 2 H [93, 95]
95 16 22438802.0 2 T [96, 93, 94]
96 16 22438803.0 2 H [97, 95]
97 16 90224751.0 2 T [96]
98 17 0 2 H [99]
99 17 83246392 2 T [98]
100 18 18869.0 2 H [101]
101 18 27056746.0 2 T [100, 102, 111]
102 18 27056747.0 2 H [101, 103]
103 18 27121235.0 2 T [104, 102]
104 18 27121236.0 3 H [104, 105, 103]
105 18 31464835.0 3 T [104, 106]
106 18 31471086.0 4 H [105, 107]
107 18 35128728.0 4 T [106, 108]
108 18 35129841.0 3 H [107, 109]
109 18 35901748.0 3 T [108, 110]
110 18 35901749.0 2 H [109, 111]
111 18 36266564.0 2 T [112, 101, 110]
112 18 36266565.0 2 H [113, 111]
113 18 80256373.0 2 T [112]
114 19 0 2 H [115]
115 19 58605715 2 T [114]
116 20 0 2 H [117]
117 20 64333718 2 T [116]
118 21 0 2 H [119]
119 21 46697230 2 T [118]
120 22 10514804 2 H [121]
121 22 21400052.0 2 T [120, 122, 124]
122 22 21400053.0 1 H [121, 123]
123 22 23418595.0 1 T [122, 124]
124 22 23418596 2 H [121, 123, 125]
125 22 50805586 2 T [124]
126 23 0 2 H [127]
127 23 156025612 2 T [126]
128 24 0 0 H [129]
129 24 57212132 0 T [128]
Siavash
[(1, 0, 2, 'S'), (1, 2, 0, 'R'), (2, 3, 2, 'S'), (3, 4, 0, 'R'), (4, 5, 3, 'S'), (5, 6, 0, 'R'), (6, 7, 2, 'S'), (9, 8, 2, 'S'), (9, 10, 0, 'R'), (11, 10, 2, 'S'), (11, 12, 0, 'R'), (13, 12, 2, 'S'), (13, 14, 0, 'R'), (15, 14, 2, 'S'), (15, 16, 0, 'R'), (16, 17, 2, 'S'), (18, 19, 2, 'S'), (20, 21, 2, 'S'), (22, 23, 2, 'S'), (24, 25, 3, 'S'), (25, 26, 0, 'R'), (26, 27, 3, 'S'), (27, 28, 0, 'R'), (28, 29, 3, 'S'), (29, 30, 0, 'R'), (30, 31, 2, 'S'), (31, 32, 0, 'R'), (32, 33, 3, 'S'), (33, 34, 0, 'R'), (34, 35, 4, 'S'), (35, 36, 0, 'R'), (37, 36, 3, 'S'), (37, 38, 0, 'R'), (38, 39, 3, 'S'), (39, 40, 0, 'R'), (41, 40, 3, 'S'), (41, 42, 0, 'R'), (42, 43, 3, 'S'), (43, 44, 0, 'R'), (44, 45, 2, 'S'), (46, 47, 2, 'S'), (48, 49, 2, 'S'), (49, 50, 0, 'R'), (50, 51, 1, 'S'), (51, 52, 0, 'R'), (52, 53, 2, 'S'), (55, 54, 2, 'S'), (55, 56, 0, 'R'), (57, 56, 2, 'S'), (57, 58, 0, 'R'), (59, 58, 2, 'S'), (59, 60, 0, 'R'), (60, 61, 2, 'S'), (63, 62, 2, 'S'), (63, 64, 0, 'R'), (65, 64, 2, 'S'), (65, 66, 0, 'R'), (66, 67, 2, 'S'), (69, 68, 2, 'S'), (69, 70, 0, 'R'), (70, 71, 2, 'S'), (71, 72, 0, 'R'), (72, 73, 3, 'S'), (73, 74, 0, 'R'), (75, 74, 2, 'S'), (75, 76, 0, 'R'), (76, 77, 2, 'S'), (78, 79, 2, 'S'), (79, 80, 0, 'R'), (81, 80, 1, 'S'), (81, 82, 0, 'R'), (82, 83, 1, 'S'), (83, 84, 0, 'R'), (84, 85, 2, 'S'), (86, 87, 2, 'S'), (88, 89, 2, 'S'), (90, 91, 2, 'S'), (93, 92, 2, 'S'), (93, 94, 0, 'R'), (95, 94, 2, 'S'), (95, 96, 0, 'R'), (96, 97, 2, 'S'), (98, 99, 2, 'S'), (101, 100, 2, 'S'), (101, 102, 0, 'R'), (102, 103, 2, 'S'), (103, 104, 0, 'R'), (104, 105, 3, 'S'), (105, 106, 0, 'R'), (106, 107, 4, 'S'), (107, 108, 0, 'R'), (108, 109, 3, 'S'), (109, 110, 0, 'R'), (111, 110, 2, 'S'), (111, 112, 0, 'R'), (112, 113, 2, 'S'), (114, 115, 2, 'S'), (116, 117, 2, 'S'), (118, 119, 2, 'S'), (120, 121, 2, 'S'), (121, 122, 0, 'R'), (122, 123, 1, 'S'), (123, 124, 0, 'R'), (124, 125, 2, 'S'), (126, 127, 2, 'S'), (128, 129, 0, 'S'), (1, 5, 0, 'SV'), (4, 4, 0, 'SV'), (10, 13, 0, 'SV'), (9, 14, 0, 'SV'), (11, 16, 0, 'SV'), (12, 15, 0, 'SV'), (37, 41, 0, 'SV'), (38, 42, 0, 'SV'), (55, 58, 0, 'SV'), (56, 59, 0, 'SV'), (57, 60, 0, 'SV'), (63, 65, 0, 'SV'), (69, 75, 0, 'SV'), (72, 72, 0, 'SV'), (79, 82, 0, 'SV'), (93, 95, 0, 'SV'), (101, 111, 0, 'SV'), (104, 104, 0, 'SV'), (106, 107, 0, 'SV'), (121, 124, 0, 'SV')]
Siavash [(1, 0, 2, 'S'), (1, 2, 0, 'R'), (1, 5, 0, 'SV'), (2, 3, 2, 'S'), (3, 4, 0, 'R'), (4, 5, 3, 'S'), (5, 6, 0, 'R'), (6, 7, 2, 'S'), (4, 4, 0, 'SV')]
Y0 (1, 0, 2, 'S')
X1 (1, 2, 0, 'R')
X2 (1, 5, 0, 'SV')
Y3 (2, 3, 2, 'S')
X4 (3, 4, 0, 'R')
Y5 (4, 5, 3, 'S')
X6 (5, 6, 0, 'R')
Y7 (6, 7, 2, 'S')
X8 (4, 4, 0, 'SV')
A0 A0
B0 B0
A1 A1
B1 B1
A2 A2
B2 B2
A3 A3
B3 B3
A4 A4
B4 B4
A5 A5
B5 B5
A6 A6
B6 B6
A7 A7
B7 B7
obj -2*X1 - 2*X2 - 2*X4 - 2*X6 - 2*X8 - 2*Y0 - 2*Y3 - 2*Y5 - 2*Y7 + 18
Sv_sum T2 + T8
CN_tune 24*Z0 + 2*Z3 + 12*Z5 + 172*Z7
obj B0 + B1 + B2 + B3 + B4 + B5 + B6 + B7 - 10*T2 - 10*T8 - 20*X1 - 20*X2 - 20*X4 - 20*X6 - 20*X8 - 20*Y0 - 20*Y3 - 20*Y5 - 20*Y7 + 240*Z0 + 20*Z3 + 120*Z5 + 1720*Z7 + 180
Problem:
MINIMIZE
1*B0 + 1*B1 + 1*B2 + 1*B3 + 1*B4 + 1*B5 + 1*B6 + 1*B7 + -10*T2 + -10*T8 + -20*X1 + -20*X2 + -20*X4 + -20*X6 + -20*X8 + -20*Y0 + -20*Y3 + -20*Y5 + -20*Y7 + 240*Z0 + 20*Z3 + 120*Z5 + 1720*Z7 + 180
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: - 2 A0 - B0 - Y0 = -2

_C23: X1 + X2 + Y0 <= 2

_C24: - 2 A1 - B1 + X1 + X2 + Y0 = -2

_C25: X1 + Y3 <= 2

_C26: - 2 A2 - B2 + X1 + Y3 = -2

_C27: X4 + Y3 <= 2

_C28: - 2 A3 - B3 + X4 + Y3 = -2

_C29: X4 + 2 X8 + Y5 <= 3

_C30: - 2 A4 - B4 + X4 + 2 X8 + Y5 = -3

_C31: X2 + X6 + Y5 <= 3

_C32: - 2 A5 - B5 + X2 + X6 + Y5 = -3

_C33: X6 + Y7 <= 2

_C34: - 2 A6 - B6 + X6 + Y7 = -2

_C35: - 2 A7 - B7 - Y7 = -2

VARIABLES
0 <= A0 Integer
0 <= A1 Integer
0 <= A2 Integer
0 <= A3 Integer
0 <= A4 Integer
0 <= A5 Integer
0 <= A6 Integer
0 <= A7 Integer
0 <= B0 <= 1 Integer
0 <= B1 <= 1 Integer
0 <= B2 <= 1 Integer
0 <= B3 <= 1 Integer
0 <= B4 <= 1 Integer
0 <= B5 <= 1 Integer
0 <= B6 <= 1 Integer
0 <= B7 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X6 Integer
0 <= X8 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Y7 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer
Z7 free Integer

Optimal
[A0, A1, A2, A3, A4, A5, A6, A7, B0, B1, B2, B3, B4, B5, B6, B7, T2, T8, X1, X2, X4, X6, X8, Y0, Y3, Y5, Y7, Z0, Z3, Z5, Z7]
1 2 1.0 R
1 5 1.0 SV
3 4 1.0 R
5 6 2.0 R
4 4 1.0 SV
A0 = 1.0
A1 = 2.0
A2 = 2.0
A3 = 2.0
A4 = 3.0
A5 = 3.0
A6 = 2.0
A7 = 1.0
B0 = 0.0
B1 = 0.0
B2 = 0.0
B3 = 0.0
B4 = 0.0
B5 = 0.0
B6 = 0.0
B7 = 0.0
T2 = 1.0
T8 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
X6 = 2.0
X8 = 1.0
Y0 = 0.0
Y3 = 1.0
Y5 = 0.0
Y7 = 0.0
Z0 = 0.0
Z3 = 1.0
Z5 = 0.0
Z7 = 0.0
40.0 Objective Answer
Siavash [(9, 8, 2, 'S'), (9, 10, 0, 'R'), (9, 14, 0, 'SV'), (11, 10, 2, 'S'), (10, 13, 0, 'SV'), (11, 16, 0, 'SV'), (11, 12, 0, 'R'), (16, 17, 2, 'S'), (15, 16, 0, 'R'), (12, 15, 0, 'SV'), (15, 14, 2, 'S'), (13, 12, 2, 'S'), (13, 14, 0, 'R')]
Y0 (9, 8, 2, 'S')
X1 (9, 10, 0, 'R')
X2 (9, 14, 0, 'SV')
Y3 (11, 10, 2, 'S')
X4 (10, 13, 0, 'SV')
X5 (11, 16, 0, 'SV')
X6 (11, 12, 0, 'R')
Y7 (16, 17, 2, 'S')
X8 (15, 16, 0, 'R')
X9 (12, 15, 0, 'SV')
Y10 (15, 14, 2, 'S')
Y11 (13, 12, 2, 'S')
X12 (13, 14, 0, 'R')
A8 A8
B8 B8
A9 A9
B9 B9
A10 A10
B10 B10
A11 A11
B11 B11
A16 A16
B16 B16
A17 A17
B17 B17
A15 A15
B15 B15
A12 A12
B12 B12
A13 A13
B13 B13
A14 A14
B14 B14
obj -2*X1 - 2*X12 - 2*X2 - 2*X4 - 2*X5 - 2*X6 - 2*X8 - 2*X9 - 2*Y0 - 2*Y10 - 2*Y11 - 2*Y3 - 2*Y7 + 20
Sv_sum T2 + T4 + T5 + T9
CN_tune 44*Z0 + 2*Z10 + 64*Z11 + 2*Z3 + 24*Z7
obj B10 + B11 + B12 + B13 + B14 + B15 + B16 + B17 + B8 + B9 - 10*T2 - 10*T4 - 10*T5 - 10*T9 - 20*X1 - 20*X12 - 20*X2 - 20*X4 - 20*X5 - 20*X6 - 20*X8 - 20*X9 - 20*Y0 - 20*Y10 - 20*Y11 - 20*Y3 - 20*Y7 + 440*Z0 + 20*Z10 + 640*Z11 + 20*Z3 + 240*Z7 + 200
Problem:
MINIMIZE
1*B10 + 1*B11 + 1*B12 + 1*B13 + 1*B14 + 1*B15 + 1*B16 + 1*B17 + 1*B8 + 1*B9 + -10*T2 + -10*T4 + -10*T5 + -10*T9 + -20*X1 + -20*X12 + -20*X2 + -20*X4 + -20*X5 + -20*X6 + -20*X8 + -20*X9 + -20*Y0 + -20*Y10 + -20*Y11 + -20*Y3 + -20*Y7 + 440*Z0 + 20*Z10 + 640*Z11 + 20*Z3 + 240*Z7 + 200
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: - 10 T5 + X5 <= 0

_C15: - T5 + X5 >= 0

_C16: X5 >= 0

_C17: X6 >= 1

_C18: Y7 + Z7 >= 0

_C19: - Y7 + Z7 >= 0

_C20: Z7 <= 1

_C21: X8 >= 1

_C22: - 10 T9 + X9 <= 0

_C23: - T9 + X9 >= 0

_C24: X9 >= 0

_C25: Y10 + Z10 >= 0

_C26: - Y10 + Z10 >= 0

_C27: Z10 <= 1

_C28: Y11 + Z11 >= 0

_C29: - Y11 + Z11 >= 0

_C30: Z11 <= 1

_C31: X12 >= 1

_C32: - 2 A8 - B8 - Y0 = -2

_C33: X1 + X2 + Y0 <= 2

_C34: - 2 A9 - B9 + X1 + X2 + Y0 = -2

_C35: X1 + X4 + Y3 <= 2

_C36: - 2 A10 - B10 + X1 + X4 + Y3 = -2

_C37: X5 + X6 + Y3 <= 2

_C38: - 2 A11 - B11 + X5 + X6 + Y3 = -2

_C39: X5 + X8 + Y7 <= 2

_C40: - 2 A16 - B16 + X5 + X8 + Y7 = -2

_C41: - 2 A17 - B17 - Y7 = -2

_C42: X8 + X9 + Y10 <= 2

_C43: - 2 A15 - B15 + X8 + X9 + Y10 = -2

_C44: X6 + X9 + Y11 <= 2

_C45: - 2 A12 - B12 + X6 + X9 + Y11 = -2

_C46: X12 + X4 + Y11 <= 2

_C47: - 2 A13 - B13 + X12 + X4 + Y11 = -2

_C48: X12 + X2 + Y10 <= 2

_C49: - 2 A14 - B14 + X12 + X2 + Y10 = -2

VARIABLES
0 <= A10 Integer
0 <= A11 Integer
0 <= A12 Integer
0 <= A13 Integer
0 <= A14 Integer
0 <= A15 Integer
0 <= A16 Integer
0 <= A17 Integer
0 <= A8 Integer
0 <= A9 Integer
0 <= B10 <= 1 Integer
0 <= B11 <= 1 Integer
0 <= B12 <= 1 Integer
0 <= B13 <= 1 Integer
0 <= B14 <= 1 Integer
0 <= B15 <= 1 Integer
0 <= B16 <= 1 Integer
0 <= B17 <= 1 Integer
0 <= B8 <= 1 Integer
0 <= B9 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= T5 <= 1 Integer
0 <= T9 <= 1 Integer
0 <= X1 Integer
0 <= X12 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X6 Integer
0 <= X8 Integer
0 <= X9 Integer
Y0 free Integer
Y10 free Integer
Y11 free Integer
Y3 free Integer
Y7 free Integer
Z0 free Integer
Z10 free Integer
Z11 free Integer
Z3 free Integer
Z7 free Integer

Optimal
[A10, A11, A12, A13, A14, A15, A16, A17, A8, A9, B10, B11, B12, B13, B14, B15, B16, B17, B8, B9, T2, T4, T5, T9, X1, X12, X2, X4, X5, X6, X8, X9, Y0, Y10, Y11, Y3, Y7, Z0, Z10, Z11, Z3, Z7]
9 10 1.0 R
13 14 1.0 R
9 14 1.0 SV
10 13 1.0 SV
11 16 1.0 SV
11 12 1.0 R
15 16 1.0 R
12 15 1.0 SV
A10 = 2.0
A11 = 2.0
A12 = 2.0
A13 = 2.0
A14 = 2.0
A15 = 2.0
A16 = 2.0
A17 = 1.0
A8 = 1.0
A9 = 2.0
B10 = 0.0
B11 = 0.0
B12 = 0.0
B13 = 0.0
B14 = 0.0
B15 = 0.0
B16 = 0.0
B17 = 0.0
B8 = 0.0
B9 = 0.0
T2 = 1.0
T4 = 1.0
T5 = 1.0
T9 = 1.0
X1 = 1.0
X12 = 1.0
X2 = 1.0
X4 = 1.0
X5 = 1.0
X6 = 1.0
X8 = 1.0
X9 = 1.0
Y0 = 0.0
Y10 = 0.0
Y11 = 0.0
Y3 = 0.0
Y7 = 0.0
Z0 = 0.0
Z10 = 0.0
Z11 = 0.0
Z3 = 0.0
Z7 = 0.0
0.0 Objective Answer
Siavash [(18, 19, 2, 'S')]
Y0 (18, 19, 2, 'S')
A18 A18
B18 B18
A19 A19
B19 B19
obj -2*Y0 + 4
Sv_sum 0
CN_tune 240*Z0
obj B18 + B19 - 20*Y0 + 2400*Z0 + 40
Problem:
MINIMIZE
1*B18 + 1*B19 + -20*Y0 + 2400*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A18 - B18 - Y0 = -2

_C5: - 2 A19 - B19 - Y0 = -2

VARIABLES
0 <= A18 Integer
0 <= A19 Integer
0 <= B18 <= 1 Integer
0 <= B19 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A18, A19, B18, B19, Y0, Z0]
A18 = 1.0
A19 = 1.0
B18 = 0.0
B19 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(20, 21, 2, 'S')]
Y0 (20, 21, 2, 'S')
A20 A20
B20 B20
A21 A21
B21 B21
obj -2*Y0 + 4
Sv_sum 0
CN_tune 234*Z0
obj B20 + B21 - 20*Y0 + 2340*Z0 + 40
Problem:
MINIMIZE
1*B20 + 1*B21 + -20*Y0 + 2340*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A20 - B20 - Y0 = -2

_C5: - 2 A21 - B21 - Y0 = -2

VARIABLES
0 <= A20 Integer
0 <= A21 Integer
0 <= B20 <= 1 Integer
0 <= B21 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A20, A21, B20, B21, Y0, Z0]
A20 = 1.0
A21 = 1.0
B20 = 0.0
B21 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(22, 23, 2, 'S')]
Y0 (22, 23, 2, 'S')
A22 A22
B22 B22
A23 A23
B23 B23
obj -2*Y0 + 4
Sv_sum 0
CN_tune 222*Z0
obj B22 + B23 - 20*Y0 + 2220*Z0 + 40
Problem:
MINIMIZE
1*B22 + 1*B23 + -20*Y0 + 2220*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A22 - B22 - Y0 = -2

_C5: - 2 A23 - B23 - Y0 = -2

VARIABLES
0 <= A22 Integer
0 <= A23 Integer
0 <= B22 <= 1 Integer
0 <= B23 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A22, A23, B22, B23, Y0, Z0]
A22 = 1.0
A23 = 1.0
B22 = 0.0
B23 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(24, 25, 3, 'S'), (25, 26, 0, 'R'), (26, 27, 3, 'S'), (27, 28, 0, 'R'), (28, 29, 3, 'S'), (29, 30, 0, 'R'), (30, 31, 2, 'S'), (31, 32, 0, 'R'), (32, 33, 3, 'S'), (33, 34, 0, 'R'), (34, 35, 4, 'S'), (35, 36, 0, 'R'), (37, 36, 3, 'S'), (37, 41, 0, 'SV'), (37, 38, 0, 'R'), (41, 40, 3, 'S'), (41, 42, 0, 'R'), (39, 40, 0, 'R'), (38, 39, 3, 'S'), (38, 42, 0, 'SV'), (42, 43, 3, 'S'), (43, 44, 0, 'R'), (44, 45, 2, 'S')]
Y0 (24, 25, 3, 'S')
X1 (25, 26, 0, 'R')
Y2 (26, 27, 3, 'S')
X3 (27, 28, 0, 'R')
Y4 (28, 29, 3, 'S')
X5 (29, 30, 0, 'R')
Y6 (30, 31, 2, 'S')
X7 (31, 32, 0, 'R')
Y8 (32, 33, 3, 'S')
X9 (33, 34, 0, 'R')
Y10 (34, 35, 4, 'S')
X11 (35, 36, 0, 'R')
Y12 (37, 36, 3, 'S')
X13 (37, 41, 0, 'SV')
X14 (37, 38, 0, 'R')
Y15 (41, 40, 3, 'S')
X16 (41, 42, 0, 'R')
X17 (39, 40, 0, 'R')
Y18 (38, 39, 3, 'S')
X19 (38, 42, 0, 'SV')
Y20 (42, 43, 3, 'S')
X21 (43, 44, 0, 'R')
Y22 (44, 45, 2, 'S')
A24 A24
B24 B24
A25 A25
B25 B25
A26 A26
B26 B26
A27 A27
B27 B27
A28 A28
B28 B28
A29 A29
B29 B29
A30 A30
B30 B30
A31 A31
B31 B31
A32 A32
B32 B32
A33 A33
B33 B33
A34 A34
B34 B34
A35 A35
B35 B35
A36 A36
B36 B36
A37 A37
B37 B37
A41 A41
B41 B41
A40 A40
B40 B40
A39 A39
B39 B39
A38 A38
B38 B38
A42 A42
B42 B42
A43 A43
B43 B43
A44 A44
B44 B44
A45 A45
B45 B45
obj -2*X1 - 2*X11 - 2*X13 - 2*X14 - 2*X16 - 2*X17 - 2*X19 - 2*X21 - 2*X3 - 2*X5 - 2*X7 - 2*X9 - 2*Y0 - 2*Y10 - 2*Y12 - 2*Y15 - 2*Y18 - 2*Y2 - 2*Y20 - 2*Y22 - 2*Y4 - 2*Y6 - 2*Y8 + 64
Sv_sum T13 + T19
CN_tune 42*Z0 + 6*Z10 + 48*Z12 + 6*Z15 + 6*Z18 + 6*Z2 + 60*Z20 + 4*Z22 + 30*Z4 + 2*Z6 + 30*Z8
obj B24 + B25 + B26 + B27 + B28 + B29 + B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 + B38 + B39 + B40 + B41 + B42 + B43 + B44 + B45 - 10*T13 - 10*T19 - 20*X1 - 20*X11 - 20*X13 - 20*X14 - 20*X16 - 20*X17 - 20*X19 - 20*X21 - 20*X3 - 20*X5 - 20*X7 - 20*X9 - 20*Y0 - 20*Y10 - 20*Y12 - 20*Y15 - 20*Y18 - 20*Y2 - 20*Y20 - 20*Y22 - 20*Y4 - 20*Y6 - 20*Y8 + 420*Z0 + 60*Z10 + 480*Z12 + 60*Z15 + 60*Z18 + 60*Z2 + 600*Z20 + 40*Z22 + 300*Z4 + 20*Z6 + 300*Z8 + 640
Problem:
MINIMIZE
1*B24 + 1*B25 + 1*B26 + 1*B27 + 1*B28 + 1*B29 + 1*B30 + 1*B31 + 1*B32 + 1*B33 + 1*B34 + 1*B35 + 1*B36 + 1*B37 + 1*B38 + 1*B39 + 1*B40 + 1*B41 + 1*B42 + 1*B43 + 1*B44 + 1*B45 + -10*T13 + -10*T19 + -20*X1 + -20*X11 + -20*X13 + -20*X14 + -20*X16 + -20*X17 + -20*X19 + -20*X21 + -20*X3 + -20*X5 + -20*X7 + -20*X9 + -20*Y0 + -20*Y10 + -20*Y12 + -20*Y15 + -20*Y18 + -20*Y2 + -20*Y20 + -20*Y22 + -20*Y4 + -20*Y6 + -20*Y8 + 420*Z0 + 60*Z10 + 480*Z12 + 60*Z15 + 60*Z18 + 60*Z2 + 600*Z20 + 40*Z22 + 300*Z4 + 20*Z6 + 300*Z8 + 640
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: X3 >= 1

_C9: Y4 + Z4 >= 0

_C10: - Y4 + Z4 >= 0

_C11: Z4 <= 1

_C12: Y6 + Z6 >= 0

_C13: - Y6 + Z6 >= 0

_C14: Z6 <= 1

_C15: X7 >= 1

_C16: Y8 + Z8 >= 0

_C17: - Y8 + Z8 >= 0

_C18: Z8 <= 1

_C19: X9 >= 1

_C20: Y10 + Z10 >= 0

_C21: - Y10 + Z10 >= 0

_C22: Z10 <= 1

_C23: X11 >= 1

_C24: Y12 + Z12 >= 0

_C25: - Y12 + Z12 >= 0

_C26: Z12 <= 1

_C27: - 10 T13 + X13 <= 0

_C28: - T13 + X13 >= 0

_C29: X13 >= 0

_C30: X14 >= 1

_C31: Y15 + Z15 >= 0

_C32: - Y15 + Z15 >= 0

_C33: Z15 <= 1

_C34: X16 >= 1

_C35: X17 >= 1

_C36: Y18 + Z18 >= 0

_C37: - Y18 + Z18 >= 0

_C38: Z18 <= 1

_C39: - 10 T19 + X19 <= 0

_C40: - T19 + X19 >= 0

_C41: X19 >= 0

_C42: Y20 + Z20 >= 0

_C43: - Y20 + Z20 >= 0

_C44: Z20 <= 1

_C45: X21 >= 1

_C46: Y22 + Z22 >= 0

_C47: - Y22 + Z22 >= 0

_C48: Z22 <= 1

_C49: - 2 A24 - B24 - Y0 = -3

_C50: X1 + Y0 <= 3

_C51: - 2 A25 - B25 + X1 + Y0 = -3

_C52: X1 + Y2 <= 3

_C53: - 2 A26 - B26 + X1 + Y2 = -3

_C54: X3 + Y2 <= 3

_C55: - 2 A27 - B27 + X3 + Y2 = -3

_C56: X3 + Y4 <= 3

_C57: - 2 A28 - B28 + X3 + Y4 = -3

_C58: X5 + Y4 <= 3

_C59: - 2 A29 - B29 + X5 + Y4 = -3

_C60: X5 + Y6 <= 2

_C61: - 2 A30 - B30 + X5 + Y6 = -2

_C62: X7 + Y6 <= 2

_C63: - 2 A31 - B31 + X7 + Y6 = -2

_C64: X7 + Y8 <= 3

_C65: - 2 A32 - B32 + X7 + Y8 = -3

_C66: X9 + Y8 <= 3

_C67: - 2 A33 - B33 + X9 + Y8 = -3

_C68: X9 + Y10 <= 4

_C69: - 2 A34 - B34 + X9 + Y10 = -4

_C70: X11 + Y10 <= 4

_C71: - 2 A35 - B35 + X11 + Y10 = -4

_C72: X11 + Y12 <= 3

_C73: - 2 A36 - B36 + X11 + Y12 = -3

_C74: X13 + X14 + Y12 <= 3

_C75: - 2 A37 - B37 + X13 + X14 + Y12 = -3

_C76: X13 + X16 + Y15 <= 3

_C77: - 2 A41 - B41 + X13 + X16 + Y15 = -3

_C78: X17 + Y15 <= 3

_C79: - 2 A40 - B40 + X17 + Y15 = -3

_C80: X17 + Y18 <= 3

_C81: - 2 A39 - B39 + X17 + Y18 = -3

_C82: X14 + X19 + Y18 <= 3

_C83: - 2 A38 - B38 + X14 + X19 + Y18 = -3

_C84: X16 + X19 + Y20 <= 3

_C85: - 2 A42 - B42 + X16 + X19 + Y20 = -3

_C86: X21 + Y20 <= 3

_C87: - 2 A43 - B43 + X21 + Y20 = -3

_C88: X21 + Y22 <= 2

_C89: - 2 A44 - B44 + X21 + Y22 = -2

_C90: - 2 A45 - B45 - Y22 = -2

VARIABLES
0 <= A24 Integer
0 <= A25 Integer
0 <= A26 Integer
0 <= A27 Integer
0 <= A28 Integer
0 <= A29 Integer
0 <= A30 Integer
0 <= A31 Integer
0 <= A32 Integer
0 <= A33 Integer
0 <= A34 Integer
0 <= A35 Integer
0 <= A36 Integer
0 <= A37 Integer
0 <= A38 Integer
0 <= A39 Integer
0 <= A40 Integer
0 <= A41 Integer
0 <= A42 Integer
0 <= A43 Integer
0 <= A44 Integer
0 <= A45 Integer
0 <= B24 <= 1 Integer
0 <= B25 <= 1 Integer
0 <= B26 <= 1 Integer
0 <= B27 <= 1 Integer
0 <= B28 <= 1 Integer
0 <= B29 <= 1 Integer
0 <= B30 <= 1 Integer
0 <= B31 <= 1 Integer
0 <= B32 <= 1 Integer
0 <= B33 <= 1 Integer
0 <= B34 <= 1 Integer
0 <= B35 <= 1 Integer
0 <= B36 <= 1 Integer
0 <= B37 <= 1 Integer
0 <= B38 <= 1 Integer
0 <= B39 <= 1 Integer
0 <= B40 <= 1 Integer
0 <= B41 <= 1 Integer
0 <= B42 <= 1 Integer
0 <= B43 <= 1 Integer
0 <= B44 <= 1 Integer
0 <= B45 <= 1 Integer
0 <= T13 <= 1 Integer
0 <= T19 <= 1 Integer
0 <= X1 Integer
0 <= X11 Integer
0 <= X13 Integer
0 <= X14 Integer
0 <= X16 Integer
0 <= X17 Integer
0 <= X19 Integer
0 <= X21 Integer
0 <= X3 Integer
0 <= X5 Integer
0 <= X7 Integer
0 <= X9 Integer
Y0 free Integer
Y10 free Integer
Y12 free Integer
Y15 free Integer
Y18 free Integer
Y2 free Integer
Y20 free Integer
Y22 free Integer
Y4 free Integer
Y6 free Integer
Y8 free Integer
Z0 free Integer
Z10 free Integer
Z12 free Integer
Z15 free Integer
Z18 free Integer
Z2 free Integer
Z20 free Integer
Z22 free Integer
Z4 free Integer
Z6 free Integer
Z8 free Integer

Optimal
[A24, A25, A26, A27, A28, A29, A30, A31, A32, A33, A34, A35, A36, A37, A38, A39, A40, A41, A42, A43, A44, A45, B24, B25, B26, B27, B28, B29, B30, B31, B32, B33, B34, B35, B36, B37, B38, B39, B40, B41, B42, B43, B44, B45, T13, T19, X1, X11, X13, X14, X16, X17, X19, X21, X3, X5, X7, X9, Y0, Y10, Y12, Y15, Y18, Y2, Y20, Y22, Y4, Y6, Y8, Z0, Z10, Z12, Z15, Z18, Z2, Z20, Z22, Z4, Z6, Z8]
25 26 3.0 R
35 36 3.0 R
37 41 2.0 SV
37 38 1.0 R
41 42 1.0 R
39 40 3.0 R
38 42 2.0 SV
43 44 2.0 R
27 28 3.0 R
29 30 3.0 R
31 32 3.0 R
33 34 3.0 R
A24 = 1.0
A25 = 3.0
A26 = 3.0
A27 = 3.0
A28 = 3.0
A29 = 3.0
A30 = 2.0
A31 = 2.0
A32 = 3.0
A33 = 3.0
A34 = 3.0
A35 = 3.0
A36 = 3.0
A37 = 3.0
A38 = 3.0
A39 = 3.0
A40 = 3.0
A41 = 3.0
A42 = 3.0
A43 = 2.0
A44 = 2.0
A45 = 1.0
B24 = 1.0
B25 = 0.0
B26 = 0.0
B27 = 0.0
B28 = 0.0
B29 = 0.0
B30 = 0.0
B31 = 0.0
B32 = 0.0
B33 = 0.0
B34 = 1.0
B35 = 1.0
B36 = 0.0
B37 = 0.0
B38 = 0.0
B39 = 0.0
B40 = 0.0
B41 = 0.0
B42 = 0.0
B43 = 1.0
B44 = 0.0
B45 = 0.0
T13 = 1.0
T19 = 1.0
X1 = 3.0
X11 = 3.0
X13 = 2.0
X14 = 1.0
X16 = 1.0
X17 = 3.0
X19 = 2.0
X21 = 2.0
X3 = 3.0
X5 = 3.0
X7 = 3.0
X9 = 3.0
Y0 = 0.0
Y10 = 0.0
Y12 = 0.0
Y15 = 0.0
Y18 = 0.0
Y2 = 0.0
Y20 = 0.0
Y22 = 0.0
Y4 = 0.0
Y6 = -1.0
Y8 = 0.0
Z0 = 0.0
Z10 = 0.0
Z12 = 0.0
Z15 = 0.0
Z18 = 0.0
Z2 = 0.0
Z20 = 0.0
Z22 = 0.0
Z4 = 0.0
Z6 = 1.0
Z8 = 0.0
84.0 Objective Answer
Siavash [(46, 47, 2, 'S')]
Y0 (46, 47, 2, 'S')
A46 A46
B46 B46
A47 A47
B47 B47
obj -2*Y0 + 4
Sv_sum 0
CN_tune 192*Z0
obj B46 + B47 - 20*Y0 + 1920*Z0 + 40
Problem:
MINIMIZE
1*B46 + 1*B47 + -20*Y0 + 1920*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A46 - B46 - Y0 = -2

_C5: - 2 A47 - B47 - Y0 = -2

VARIABLES
0 <= A46 Integer
0 <= A47 Integer
0 <= B46 <= 1 Integer
0 <= B47 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A46, A47, B46, B47, Y0, Z0]
A46 = 1.0
A47 = 1.0
B46 = 0.0
B47 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(48, 49, 2, 'S'), (49, 50, 0, 'R'), (50, 51, 1, 'S'), (51, 52, 0, 'R'), (52, 53, 2, 'S')]
Y0 (48, 49, 2, 'S')
X1 (49, 50, 0, 'R')
Y2 (50, 51, 1, 'S')
X3 (51, 52, 0, 'R')
Y4 (52, 53, 2, 'S')
A48 A48
B48 B48
A49 A49
B49 B49
A50 A50
B50 B50
A51 A51
B51 B51
A52 A52
B52 B52
A53 A53
B53 B53
obj -2*X1 - 2*X3 - 2*Y0 - 2*Y2 - 2*Y4 + 10
Sv_sum 0
CN_tune 112*Z0 + 12*Z2 + 4*Z4
obj B48 + B49 + B50 + B51 + B52 + B53 - 20*X1 - 20*X3 - 20*Y0 - 20*Y2 - 20*Y4 + 1120*Z0 + 120*Z2 + 40*Z4 + 100
Problem:
MINIMIZE
1*B48 + 1*B49 + 1*B50 + 1*B51 + 1*B52 + 1*B53 + -20*X1 + -20*X3 + -20*Y0 + -20*Y2 + -20*Y4 + 1120*Z0 + 120*Z2 + 40*Z4 + 100
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: X3 >= 1

_C9: Y4 + Z4 >= 0

_C10: - Y4 + Z4 >= 0

_C11: Z4 <= 1

_C12: - 2 A48 - B48 - Y0 = -2

_C13: X1 + Y0 <= 2

_C14: - 2 A49 - B49 + X1 + Y0 = -2

_C15: X1 + Y2 <= 1

_C16: - 2 A50 - B50 + X1 + Y2 = -1

_C17: X3 + Y2 <= 1

_C18: - 2 A51 - B51 + X3 + Y2 = -1

_C19: X3 + Y4 <= 2

_C20: - 2 A52 - B52 + X3 + Y4 = -2

_C21: - 2 A53 - B53 - Y4 = -2

VARIABLES
0 <= A48 Integer
0 <= A49 Integer
0 <= A50 Integer
0 <= A51 Integer
0 <= A52 Integer
0 <= A53 Integer
0 <= B48 <= 1 Integer
0 <= B49 <= 1 Integer
0 <= B50 <= 1 Integer
0 <= B51 <= 1 Integer
0 <= B52 <= 1 Integer
0 <= B53 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
Y0 free Integer
Y2 free Integer
Y4 free Integer
Z0 free Integer
Z2 free Integer
Z4 free Integer

Optimal
[A48, A49, A50, A51, A52, A53, B48, B49, B50, B51, B52, B53, X1, X3, Y0, Y2, Y4, Z0, Z2, Z4]
49 50 1.0 R
51 52 1.0 R
A48 = 1.0
A49 = 1.0
A50 = 1.0
A51 = 1.0
A52 = 1.0
A53 = 1.0
B48 = 0.0
B49 = 1.0
B50 = 0.0
B51 = 0.0
B52 = 1.0
B53 = 0.0
X1 = 1.0
X3 = 1.0
Y0 = 0.0
Y2 = 0.0
Y4 = 0.0
Z0 = 0.0
Z2 = 0.0
Z4 = 0.0
62.0 Objective Answer
Siavash [(55, 54, 2, 'S'), (55, 56, 0, 'R'), (55, 58, 0, 'SV'), (57, 56, 2, 'S'), (56, 59, 0, 'SV'), (57, 58, 0, 'R'), (57, 60, 0, 'SV'), (59, 58, 2, 'S'), (59, 60, 0, 'R'), (60, 61, 2, 'S')]
Y0 (55, 54, 2, 'S')
X1 (55, 56, 0, 'R')
X2 (55, 58, 0, 'SV')
Y3 (57, 56, 2, 'S')
X4 (56, 59, 0, 'SV')
X5 (57, 58, 0, 'R')
X6 (57, 60, 0, 'SV')
Y7 (59, 58, 2, 'S')
X8 (59, 60, 0, 'R')
Y9 (60, 61, 2, 'S')
A54 A54
B54 B54
A55 A55
B55 B55
A56 A56
B56 B56
A57 A57
B57 B57
A58 A58
B58 B58
A59 A59
B59 B59
A60 A60
B60 B60
A61 A61
B61 B61
obj -2*X1 - 2*X2 - 2*X4 - 2*X5 - 2*X6 - 2*X8 - 2*Y0 - 2*Y3 - 2*Y7 - 2*Y9 + 16
Sv_sum T2 + T4 + T6
CN_tune 8*Z0 + 2*Z3 + 4*Z7 + 100*Z9
obj B54 + B55 + B56 + B57 + B58 + B59 + B60 + B61 - 10*T2 - 10*T4 - 10*T6 - 20*X1 - 20*X2 - 20*X4 - 20*X5 - 20*X6 - 20*X8 - 20*Y0 - 20*Y3 - 20*Y7 - 20*Y9 + 80*Z0 + 20*Z3 + 40*Z7 + 1000*Z9 + 160
Problem:
MINIMIZE
1*B54 + 1*B55 + 1*B56 + 1*B57 + 1*B58 + 1*B59 + 1*B60 + 1*B61 + -10*T2 + -10*T4 + -10*T6 + -20*X1 + -20*X2 + -20*X4 + -20*X5 + -20*X6 + -20*X8 + -20*Y0 + -20*Y3 + -20*Y7 + -20*Y9 + 80*Z0 + 20*Z3 + 40*Z7 + 1000*Z9 + 160
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: - 10 T6 + X6 <= 0

_C16: - T6 + X6 >= 0

_C17: X6 >= 0

_C18: Y7 + Z7 >= 0

_C19: - Y7 + Z7 >= 0

_C20: Z7 <= 1

_C21: X8 >= 1

_C22: Y9 + Z9 >= 0

_C23: - Y9 + Z9 >= 0

_C24: Z9 <= 1

_C25: - 2 A54 - B54 - Y0 = -2

_C26: X1 + X2 + Y0 <= 2

_C27: - 2 A55 - B55 + X1 + X2 + Y0 = -2

_C28: X1 + X4 + Y3 <= 2

_C29: - 2 A56 - B56 + X1 + X4 + Y3 = -2

_C30: X5 + X6 + Y3 <= 2

_C31: - 2 A57 - B57 + X5 + X6 + Y3 = -2

_C32: X2 + X5 + Y7 <= 2

_C33: - 2 A58 - B58 + X2 + X5 + Y7 = -2

_C34: X4 + X8 + Y7 <= 2

_C35: - 2 A59 - B59 + X4 + X8 + Y7 = -2

_C36: X6 + X8 + Y9 <= 2

_C37: - 2 A60 - B60 + X6 + X8 + Y9 = -2

_C38: - 2 A61 - B61 - Y9 = -2

VARIABLES
0 <= A54 Integer
0 <= A55 Integer
0 <= A56 Integer
0 <= A57 Integer
0 <= A58 Integer
0 <= A59 Integer
0 <= A60 Integer
0 <= A61 Integer
0 <= B54 <= 1 Integer
0 <= B55 <= 1 Integer
0 <= B56 <= 1 Integer
0 <= B57 <= 1 Integer
0 <= B58 <= 1 Integer
0 <= B59 <= 1 Integer
0 <= B60 <= 1 Integer
0 <= B61 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= T6 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X6 Integer
0 <= X8 Integer
Y0 free Integer
Y3 free Integer
Y7 free Integer
Y9 free Integer
Z0 free Integer
Z3 free Integer
Z7 free Integer
Z9 free Integer

Optimal
[A54, A55, A56, A57, A58, A59, A60, A61, B54, B55, B56, B57, B58, B59, B60, B61, T2, T4, T6, X1, X2, X4, X5, X6, X8, Y0, Y3, Y7, Y9, Z0, Z3, Z7, Z9]
55 56 1.0 R
55 58 1.0 SV
56 59 1.0 SV
57 58 1.0 R
57 60 1.0 SV
59 60 1.0 R
A54 = 1.0
A55 = 2.0
A56 = 2.0
A57 = 2.0
A58 = 2.0
A59 = 2.0
A60 = 2.0
A61 = 1.0
B54 = 0.0
B55 = 0.0
B56 = 0.0
B57 = 0.0
B58 = 0.0
B59 = 0.0
B60 = 0.0
B61 = 0.0
T2 = 1.0
T4 = 1.0
T6 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
X5 = 1.0
X6 = 1.0
X8 = 1.0
Y0 = 0.0
Y3 = 0.0
Y7 = 0.0
Y9 = 0.0
Z0 = 0.0
Z3 = 0.0
Z7 = 0.0
Z9 = 0.0
10.0 Objective Answer
Siavash [(63, 62, 2, 'S'), (63, 64, 0, 'R'), (63, 65, 0, 'SV'), (65, 64, 2, 'S'), (65, 66, 0, 'R'), (66, 67, 2, 'S')]
Y0 (63, 62, 2, 'S')
X1 (63, 64, 0, 'R')
X2 (63, 65, 0, 'SV')
Y3 (65, 64, 2, 'S')
X4 (65, 66, 0, 'R')
Y5 (66, 67, 2, 'S')
A62 A62
B62 B62
A63 A63
B63 B63
A64 A64
B64 B64
A65 A65
B65 B65
A66 A66
B66 B66
A67 A67
B67 B67
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 - 2*Y5 + 12
Sv_sum T2
CN_tune 40*Z0 + 2*Z3 + 72*Z5
obj B62 + B63 + B64 + B65 + B66 + B67 - 10*T2 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 - 20*Y5 + 400*Z0 + 20*Z3 + 720*Z5 + 120
Problem:
MINIMIZE
1*B62 + 1*B63 + 1*B64 + 1*B65 + 1*B66 + 1*B67 + -10*T2 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + -20*Y5 + 400*Z0 + 20*Z3 + 720*Z5 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A62 - B62 - Y0 = -2

_C16: X1 + X2 + Y0 <= 2

_C17: - 2 A63 - B63 + X1 + X2 + Y0 = -2

_C18: X1 + Y3 <= 2

_C19: - 2 A64 - B64 + X1 + Y3 = -2

_C20: X2 + X4 + Y3 <= 2

_C21: - 2 A65 - B65 + X2 + X4 + Y3 = -2

_C22: X4 + Y5 <= 2

_C23: - 2 A66 - B66 + X4 + Y5 = -2

_C24: - 2 A67 - B67 - Y5 = -2

VARIABLES
0 <= A62 Integer
0 <= A63 Integer
0 <= A64 Integer
0 <= A65 Integer
0 <= A66 Integer
0 <= A67 Integer
0 <= B62 <= 1 Integer
0 <= B63 <= 1 Integer
0 <= B64 <= 1 Integer
0 <= B65 <= 1 Integer
0 <= B66 <= 1 Integer
0 <= B67 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A62, A63, A64, A65, A66, A67, B62, B63, B64, B65, B66, B67, T2, X1, X2, X4, Y0, Y3, Y5, Z0, Z3, Z5]
63 64 2.0 R
63 65 0.0 SV
65 66 2.0 R
A62 = 1.0
A63 = 2.0
A64 = 2.0
A65 = 2.0
A66 = 2.0
A67 = 1.0
B62 = 0.0
B63 = 0.0
B64 = 0.0
B65 = 0.0
B66 = 0.0
B67 = 0.0
T2 = 0.0
X1 = 2.0
X2 = 0.0
X4 = 2.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
40.0 Objective Answer
Siavash [(69, 68, 2, 'S'), (69, 75, 0, 'SV'), (69, 70, 0, 'R'), (75, 74, 2, 'S'), (75, 76, 0, 'R'), (73, 74, 0, 'R'), (72, 73, 3, 'S'), (71, 72, 0, 'R'), (70, 71, 2, 'S'), (76, 77, 2, 'S'), (72, 72, 0, 'SV')]
Y0 (69, 68, 2, 'S')
X1 (69, 75, 0, 'SV')
X2 (69, 70, 0, 'R')
Y3 (75, 74, 2, 'S')
X4 (75, 76, 0, 'R')
X5 (73, 74, 0, 'R')
Y6 (72, 73, 3, 'S')
X7 (71, 72, 0, 'R')
Y8 (70, 71, 2, 'S')
Y9 (76, 77, 2, 'S')
X10 (72, 72, 0, 'SV')
A68 A68
B68 B68
A69 A69
B69 B69
A75 A75
B75 B75
A74 A74
B74 B74
A73 A73
B73 B73
A72 A72
B72 B72
A71 A71
B71 B71
A70 A70
B70 B70
A76 A76
B76 B76
A77 A77
B77 B77
obj -2*X1 - 2*X10 - 2*X2 - 2*X4 - 2*X5 - 2*X7 - 2*Y0 - 2*Y3 - 2*Y6 - 2*Y8 - 2*Y9 + 22
Sv_sum T1 + T10
CN_tune 32*Z0 + 2*Z3 + 12*Z6 + 2*Z8 + 72*Z9
obj B68 + B69 + B70 + B71 + B72 + B73 + B74 + B75 + B76 + B77 - 10*T1 - 10*T10 - 20*X1 - 20*X10 - 20*X2 - 20*X4 - 20*X5 - 20*X7 - 20*Y0 - 20*Y3 - 20*Y6 - 20*Y8 - 20*Y9 + 320*Z0 + 20*Z3 + 120*Z6 + 20*Z8 + 720*Z9 + 220
Problem:
MINIMIZE
1*B68 + 1*B69 + 1*B70 + 1*B71 + 1*B72 + 1*B73 + 1*B74 + 1*B75 + 1*B76 + 1*B77 + -10*T1 + -10*T10 + -20*X1 + -20*X10 + -20*X2 + -20*X4 + -20*X5 + -20*X7 + -20*Y0 + -20*Y3 + -20*Y6 + -20*Y8 + -20*Y9 + 320*Z0 + 20*Z3 + 120*Z6 + 20*Z8 + 720*Z9 + 220
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 10 T1 + X1 <= 0

_C5: - T1 + X1 >= 0

_C6: X1 >= 0

_C7: X2 >= 1

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: X5 >= 1

_C13: Y6 + Z6 >= 0

_C14: - Y6 + Z6 >= 0

_C15: Z6 <= 1

_C16: X7 >= 1

_C17: Y8 + Z8 >= 0

_C18: - Y8 + Z8 >= 0

_C19: Z8 <= 1

_C20: Y9 + Z9 >= 0

_C21: - Y9 + Z9 >= 0

_C22: Z9 <= 1

_C23: - 10 T10 + X10 <= 0

_C24: - T10 + X10 >= 0

_C25: X10 >= 0

_C26: - 2 A68 - B68 - Y0 = -2

_C27: X1 + X2 + Y0 <= 2

_C28: - 2 A69 - B69 + X1 + X2 + Y0 = -2

_C29: X1 + X4 + Y3 <= 2

_C30: - 2 A75 - B75 + X1 + X4 + Y3 = -2

_C31: X5 + Y3 <= 2

_C32: - 2 A74 - B74 + X5 + Y3 = -2

_C33: X5 + Y6 <= 3

_C34: - 2 A73 - B73 + X5 + Y6 = -3

_C35: 2 X10 + X7 + Y6 <= 3

_C36: - 2 A72 - B72 + 2 X10 + X7 + Y6 = -3

_C37: X7 + Y8 <= 2

_C38: - 2 A71 - B71 + X7 + Y8 = -2

_C39: X2 + Y8 <= 2

_C40: - 2 A70 - B70 + X2 + Y8 = -2

_C41: X4 + Y9 <= 2

_C42: - 2 A76 - B76 + X4 + Y9 = -2

_C43: - 2 A77 - B77 - Y9 = -2

VARIABLES
0 <= A68 Integer
0 <= A69 Integer
0 <= A70 Integer
0 <= A71 Integer
0 <= A72 Integer
0 <= A73 Integer
0 <= A74 Integer
0 <= A75 Integer
0 <= A76 Integer
0 <= A77 Integer
0 <= B68 <= 1 Integer
0 <= B69 <= 1 Integer
0 <= B70 <= 1 Integer
0 <= B71 <= 1 Integer
0 <= B72 <= 1 Integer
0 <= B73 <= 1 Integer
0 <= B74 <= 1 Integer
0 <= B75 <= 1 Integer
0 <= B76 <= 1 Integer
0 <= B77 <= 1 Integer
0 <= T1 <= 1 Integer
0 <= T10 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X7 Integer
Y0 free Integer
Y3 free Integer
Y6 free Integer
Y8 free Integer
Y9 free Integer
Z0 free Integer
Z3 free Integer
Z6 free Integer
Z8 free Integer
Z9 free Integer

Optimal
[A68, A69, A70, A71, A72, A73, A74, A75, A76, A77, B68, B69, B70, B71, B72, B73, B74, B75, B76, B77, T1, T10, X1, X10, X2, X4, X5, X7, Y0, Y3, Y6, Y8, Y9, Z0, Z3, Z6, Z8, Z9]
69 75 0.0 SV
72 72 1.0 SV
69 70 2.0 R
75 76 2.0 R
73 74 2.0 R
71 72 1.0 R
A68 = 1.0
A69 = 2.0
A70 = 2.0
A71 = 1.0
A72 = 3.0
A73 = 2.0
A74 = 2.0
A75 = 2.0
A76 = 2.0
A77 = 1.0
B68 = 0.0
B69 = 0.0
B70 = 0.0
B71 = 1.0
B72 = 0.0
B73 = 1.0
B74 = 0.0
B75 = 0.0
B76 = 0.0
B77 = 0.0
T1 = 0.0
T10 = 1.0
X1 = 0.0
X10 = 1.0
X2 = 2.0
X4 = 2.0
X5 = 2.0
X7 = 1.0
Y0 = 0.0
Y3 = 0.0
Y6 = 0.0
Y8 = 0.0
Y9 = 0.0
Z0 = 0.0
Z3 = 0.0
Z6 = 0.0
Z8 = 0.0
Z9 = 0.0
52.0 Objective Answer
Siavash [(78, 79, 2, 'S'), (79, 80, 0, 'R'), (79, 82, 0, 'SV'), (81, 80, 1, 'S'), (81, 82, 0, 'R'), (82, 83, 1, 'S'), (83, 84, 0, 'R'), (84, 85, 2, 'S')]
Y0 (78, 79, 2, 'S')
X1 (79, 80, 0, 'R')
X2 (79, 82, 0, 'SV')
Y3 (81, 80, 1, 'S')
X4 (81, 82, 0, 'R')
Y5 (82, 83, 1, 'S')
X6 (83, 84, 0, 'R')
Y7 (84, 85, 2, 'S')
A78 A78
B78 B78
A79 A79
B79 B79
A80 A80
B80 B80
A81 A81
B81 B81
A82 A82
B82 B82
A83 A83
B83 B83
A84 A84
B84 B84
A85 A85
B85 B85
obj -2*X1 - 2*X2 - 2*X4 - 2*X6 - 2*Y0 - 2*Y3 - 2*Y5 - 2*Y7 + 12
Sv_sum T2
CN_tune 88*Z0 + 12*Z3 + 6*Z5 + 16*Z7
obj B78 + B79 + B80 + B81 + B82 + B83 + B84 + B85 - 10*T2 - 20*X1 - 20*X2 - 20*X4 - 20*X6 - 20*Y0 - 20*Y3 - 20*Y5 - 20*Y7 + 880*Z0 + 120*Z3 + 60*Z5 + 160*Z7 + 120
Problem:
MINIMIZE
1*B78 + 1*B79 + 1*B80 + 1*B81 + 1*B82 + 1*B83 + 1*B84 + 1*B85 + -10*T2 + -20*X1 + -20*X2 + -20*X4 + -20*X6 + -20*Y0 + -20*Y3 + -20*Y5 + -20*Y7 + 880*Z0 + 120*Z3 + 60*Z5 + 160*Z7 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 2 A78 - B78 - Y0 = -2

_C20: X1 + X2 + Y0 <= 2

_C21: - 2 A79 - B79 + X1 + X2 + Y0 = -2

_C22: X1 + Y3 <= 1

_C23: - 2 A80 - B80 + X1 + Y3 = -1

_C24: X4 + Y3 <= 1

_C25: - 2 A81 - B81 + X4 + Y3 = -1

_C26: X2 + X4 + Y5 <= 1

_C27: - 2 A82 - B82 + X2 + X4 + Y5 = -1

_C28: X6 + Y5 <= 1

_C29: - 2 A83 - B83 + X6 + Y5 = -1

_C30: X6 + Y7 <= 2

_C31: - 2 A84 - B84 + X6 + Y7 = -2

_C32: - 2 A85 - B85 - Y7 = -2

VARIABLES
0 <= A78 Integer
0 <= A79 Integer
0 <= A80 Integer
0 <= A81 Integer
0 <= A82 Integer
0 <= A83 Integer
0 <= A84 Integer
0 <= A85 Integer
0 <= B78 <= 1 Integer
0 <= B79 <= 1 Integer
0 <= B80 <= 1 Integer
0 <= B81 <= 1 Integer
0 <= B82 <= 1 Integer
0 <= B83 <= 1 Integer
0 <= B84 <= 1 Integer
0 <= B85 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X6 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Y7 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer
Z7 free Integer

Optimal
[A78, A79, A80, A81, A82, A83, A84, A85, B78, B79, B80, B81, B82, B83, B84, B85, T2, X1, X2, X4, X6, Y0, Y3, Y5, Y7, Z0, Z3, Z5, Z7]
79 80 1.0 R
79 82 0.0 SV
81 82 1.0 R
83 84 1.0 R
A78 = 1.0
A79 = 1.0
A80 = 1.0
A81 = 1.0
A82 = 1.0
A83 = 1.0
A84 = 1.0
A85 = 1.0
B78 = 0.0
B79 = 1.0
B80 = 0.0
B81 = 0.0
B82 = 0.0
B83 = 0.0
B84 = 1.0
B85 = 0.0
T2 = 0.0
X1 = 1.0
X2 = 0.0
X4 = 1.0
X6 = 1.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Y7 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
Z7 = 0.0
62.0 Objective Answer
Siavash [(86, 87, 2, 'S')]
Y0 (86, 87, 2, 'S')
A86 A86
B86 B86
A87 A87
B87 B87
obj -2*Y0 + 4
Sv_sum 0
CN_tune 138*Z0
obj B86 + B87 - 20*Y0 + 1380*Z0 + 40
Problem:
MINIMIZE
1*B86 + 1*B87 + -20*Y0 + 1380*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A86 - B86 - Y0 = -2

_C5: - 2 A87 - B87 - Y0 = -2

VARIABLES
0 <= A86 Integer
0 <= A87 Integer
0 <= B86 <= 1 Integer
0 <= B87 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A86, A87, B86, B87, Y0, Z0]
A86 = 1.0
A87 = 1.0
B86 = 0.0
B87 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(88, 89, 2, 'S')]
Y0 (88, 89, 2, 'S')
A88 A88
B88 B88
A89 A89
B89 B89
obj -2*Y0 + 4
Sv_sum 0
CN_tune 132*Z0
obj B88 + B89 - 20*Y0 + 1320*Z0 + 40
Problem:
MINIMIZE
1*B88 + 1*B89 + -20*Y0 + 1320*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A88 - B88 - Y0 = -2

_C5: - 2 A89 - B89 - Y0 = -2

VARIABLES
0 <= A88 Integer
0 <= A89 Integer
0 <= B88 <= 1 Integer
0 <= B89 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A88, A89, B88, B89, Y0, Z0]
A88 = 1.0
A89 = 1.0
B88 = 0.0
B89 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(90, 91, 2, 'S')]
Y0 (90, 91, 2, 'S')
A90 A90
B90 B90
A91 A91
B91 B91
obj -2*Y0 + 4
Sv_sum 0
CN_tune 126*Z0
obj B90 + B91 - 20*Y0 + 1260*Z0 + 40
Problem:
MINIMIZE
1*B90 + 1*B91 + -20*Y0 + 1260*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A90 - B90 - Y0 = -2

_C5: - 2 A91 - B91 - Y0 = -2

VARIABLES
0 <= A90 Integer
0 <= A91 Integer
0 <= B90 <= 1 Integer
0 <= B91 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A90, A91, B90, B91, Y0, Z0]
A90 = 1.0
A91 = 1.0
B90 = 0.0
B91 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(93, 92, 2, 'S'), (93, 94, 0, 'R'), (93, 95, 0, 'SV'), (95, 94, 2, 'S'), (95, 96, 0, 'R'), (96, 97, 2, 'S')]
Y0 (93, 92, 2, 'S')
X1 (93, 94, 0, 'R')
X2 (93, 95, 0, 'SV')
Y3 (95, 94, 2, 'S')
X4 (95, 96, 0, 'R')
Y5 (96, 97, 2, 'S')
A92 A92
B92 B92
A93 A93
B93 B93
A94 A94
B94 B94
A95 A95
B95 B95
A96 A96
B96 B96
A97 A97
B97 B97
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 - 2*Y5 + 12
Sv_sum T2
CN_tune 20*Z0 + 2*Z3 + 56*Z5
obj B92 + B93 + B94 + B95 + B96 + B97 - 10*T2 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 - 20*Y5 + 200*Z0 + 20*Z3 + 560*Z5 + 120
Problem:
MINIMIZE
1*B92 + 1*B93 + 1*B94 + 1*B95 + 1*B96 + 1*B97 + -10*T2 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + -20*Y5 + 200*Z0 + 20*Z3 + 560*Z5 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A92 - B92 - Y0 = -2

_C16: X1 + X2 + Y0 <= 2

_C17: - 2 A93 - B93 + X1 + X2 + Y0 = -2

_C18: X1 + Y3 <= 2

_C19: - 2 A94 - B94 + X1 + Y3 = -2

_C20: X2 + X4 + Y3 <= 2

_C21: - 2 A95 - B95 + X2 + X4 + Y3 = -2

_C22: X4 + Y5 <= 2

_C23: - 2 A96 - B96 + X4 + Y5 = -2

_C24: - 2 A97 - B97 - Y5 = -2

VARIABLES
0 <= A92 Integer
0 <= A93 Integer
0 <= A94 Integer
0 <= A95 Integer
0 <= A96 Integer
0 <= A97 Integer
0 <= B92 <= 1 Integer
0 <= B93 <= 1 Integer
0 <= B94 <= 1 Integer
0 <= B95 <= 1 Integer
0 <= B96 <= 1 Integer
0 <= B97 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A92, A93, A94, A95, A96, A97, B92, B93, B94, B95, B96, B97, T2, X1, X2, X4, Y0, Y3, Y5, Z0, Z3, Z5]
93 94 2.0 R
93 95 0.0 SV
95 96 2.0 R
A92 = 1.0
A93 = 2.0
A94 = 2.0
A95 = 2.0
A96 = 2.0
A97 = 1.0
B92 = 0.0
B93 = 0.0
B94 = 0.0
B95 = 0.0
B96 = 0.0
B97 = 0.0
T2 = 0.0
X1 = 2.0
X2 = 0.0
X4 = 2.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
40.0 Objective Answer
Siavash [(98, 99, 2, 'S')]
Y0 (98, 99, 2, 'S')
A98 A98
B98 B98
A99 A99
B99 B99
obj -2*Y0 + 4
Sv_sum 0
CN_tune 102*Z0
obj B98 + B99 - 20*Y0 + 1020*Z0 + 40
Problem:
MINIMIZE
1*B98 + 1*B99 + -20*Y0 + 1020*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A98 - B98 - Y0 = -2

_C5: - 2 A99 - B99 - Y0 = -2

VARIABLES
0 <= A98 Integer
0 <= A99 Integer
0 <= B98 <= 1 Integer
0 <= B99 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A98, A99, B98, B99, Y0, Z0]
A98 = 1.0
A99 = 1.0
B98 = 0.0
B99 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(101, 100, 2, 'S'), (101, 102, 0, 'R'), (101, 111, 0, 'SV'), (102, 103, 2, 'S'), (103, 104, 0, 'R'), (104, 105, 3, 'S'), (105, 106, 0, 'R'), (106, 107, 4, 'S'), (106, 107, 0, 'SV'), (107, 108, 0, 'R'), (108, 109, 3, 'S'), (109, 110, 0, 'R'), (111, 110, 2, 'S'), (111, 112, 0, 'R'), (112, 113, 2, 'S'), (104, 104, 0, 'SV')]
Y0 (101, 100, 2, 'S')
X1 (101, 102, 0, 'R')
X2 (101, 111, 0, 'SV')
Y3 (102, 103, 2, 'S')
X4 (103, 104, 0, 'R')
Y5 (104, 105, 3, 'S')
X6 (105, 106, 0, 'R')
Y7 (106, 107, 4, 'S')
X8 (106, 107, 0, 'SV')
X9 (107, 108, 0, 'R')
Y10 (108, 109, 3, 'S')
X11 (109, 110, 0, 'R')
Y12 (111, 110, 2, 'S')
X13 (111, 112, 0, 'R')
Y14 (112, 113, 2, 'S')
X15 (104, 104, 0, 'SV')
A100 A100
B100 B100
A101 A101
B101 B101
A102 A102
B102 B102
A103 A103
B103 B103
A104 A104
B104 B104
A105 A105
B105 B105
A106 A106
B106 B106
A107 A107
B107 B107
A108 A108
B108 B108
A109 A109
B109 B109
A110 A110
B110 B110
A111 A111
B111 B111
A112 A112
B112 B112
A113 A113
B113 B113
obj -2*X1 - 2*X11 - 2*X13 - 2*X15 - 2*X2 - 2*X4 - 2*X6 - 2*X8 - 2*X9 - 2*Y0 - 2*Y10 - 2*Y12 - 2*Y14 - 2*Y3 - 2*Y5 - 2*Y7 + 36
Sv_sum T15 + T2 + T8
CN_tune 24*Z0 + 6*Z10 + 2*Z12 + 36*Z14 + 2*Z3 + 6*Z5 + 6*Z7
obj B100 + B101 + B102 + B103 + B104 + B105 + B106 + B107 + B108 + B109 + B110 + B111 + B112 + B113 - 10*T15 - 10*T2 - 10*T8 - 20*X1 - 20*X11 - 20*X13 - 20*X15 - 20*X2 - 20*X4 - 20*X6 - 20*X8 - 20*X9 - 20*Y0 - 20*Y10 - 20*Y12 - 20*Y14 - 20*Y3 - 20*Y5 - 20*Y7 + 240*Z0 + 60*Z10 + 20*Z12 + 360*Z14 + 20*Z3 + 60*Z5 + 60*Z7 + 360
Problem:
MINIMIZE
1*B100 + 1*B101 + 1*B102 + 1*B103 + 1*B104 + 1*B105 + 1*B106 + 1*B107 + 1*B108 + 1*B109 + 1*B110 + 1*B111 + 1*B112 + 1*B113 + -10*T15 + -10*T2 + -10*T8 + -20*X1 + -20*X11 + -20*X13 + -20*X15 + -20*X2 + -20*X4 + -20*X6 + -20*X8 + -20*X9 + -20*Y0 + -20*Y10 + -20*Y12 + -20*Y14 + -20*Y3 + -20*Y5 + -20*Y7 + 240*Z0 + 60*Z10 + 20*Z12 + 360*Z14 + 20*Z3 + 60*Z5 + 60*Z7 + 360
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: X9 >= 1

_C23: Y10 + Z10 >= 0

_C24: - Y10 + Z10 >= 0

_C25: Z10 <= 1

_C26: X11 >= 1

_C27: Y12 + Z12 >= 0

_C28: - Y12 + Z12 >= 0

_C29: Z12 <= 1

_C30: X13 >= 1

_C31: Y14 + Z14 >= 0

_C32: - Y14 + Z14 >= 0

_C33: Z14 <= 1

_C34: - 10 T15 + X15 <= 0

_C35: - T15 + X15 >= 0

_C36: X15 >= 0

_C37: - 2 A100 - B100 - Y0 = -2

_C38: X1 + X2 + Y0 <= 2

_C39: - 2 A101 - B101 + X1 + X2 + Y0 = -2

_C40: X1 + Y3 <= 2

_C41: - 2 A102 - B102 + X1 + Y3 = -2

_C42: X4 + Y3 <= 2

_C43: - 2 A103 - B103 + X4 + Y3 = -2

_C44: 2 X15 + X4 + Y5 <= 3

_C45: - 2 A104 - B104 + 2 X15 + X4 + Y5 = -3

_C46: X6 + Y5 <= 3

_C47: - 2 A105 - B105 + X6 + Y5 = -3

_C48: X6 + X8 + Y7 <= 4

_C49: - 2 A106 - B106 + X6 + X8 + Y7 = -4

_C50: X8 + X9 + Y7 <= 4

_C51: - 2 A107 - B107 + X8 + X9 + Y7 = -4

_C52: X9 + Y10 <= 3

_C53: - 2 A108 - B108 + X9 + Y10 = -3

_C54: X11 + Y10 <= 3

_C55: - 2 A109 - B109 + X11 + Y10 = -3

_C56: X11 + Y12 <= 2

_C57: - 2 A110 - B110 + X11 + Y12 = -2

_C58: X13 + X2 + Y12 <= 2

_C59: - 2 A111 - B111 + X13 + X2 + Y12 = -2

_C60: X13 + Y14 <= 2

_C61: - 2 A112 - B112 + X13 + Y14 = -2

_C62: - 2 A113 - B113 - Y14 = -2

VARIABLES
0 <= A100 Integer
0 <= A101 Integer
0 <= A102 Integer
0 <= A103 Integer
0 <= A104 Integer
0 <= A105 Integer
0 <= A106 Integer
0 <= A107 Integer
0 <= A108 Integer
0 <= A109 Integer
0 <= A110 Integer
0 <= A111 Integer
0 <= A112 Integer
0 <= A113 Integer
0 <= B100 <= 1 Integer
0 <= B101 <= 1 Integer
0 <= B102 <= 1 Integer
0 <= B103 <= 1 Integer
0 <= B104 <= 1 Integer
0 <= B105 <= 1 Integer
0 <= B106 <= 1 Integer
0 <= B107 <= 1 Integer
0 <= B108 <= 1 Integer
0 <= B109 <= 1 Integer
0 <= B110 <= 1 Integer
0 <= B111 <= 1 Integer
0 <= B112 <= 1 Integer
0 <= B113 <= 1 Integer
0 <= T15 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X11 Integer
0 <= X13 Integer
0 <= X15 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X6 Integer
0 <= X8 Integer
0 <= X9 Integer
Y0 free Integer
Y10 free Integer
Y12 free Integer
Y14 free Integer
Y3 free Integer
Y5 free Integer
Y7 free Integer
Z0 free Integer
Z10 free Integer
Z12 free Integer
Z14 free Integer
Z3 free Integer
Z5 free Integer
Z7 free Integer

Optimal
[A100, A101, A102, A103, A104, A105, A106, A107, A108, A109, A110, A111, A112, A113, B100, B101, B102, B103, B104, B105, B106, B107, B108, B109, B110, B111, B112, B113, T15, T2, T8, X1, X11, X13, X15, X2, X4, X6, X8, X9, Y0, Y10, Y12, Y14, Y3, Y5, Y7, Z0, Z10, Z12, Z14, Z3, Z5, Z7]
101 102 2.0 R
109 110 2.0 R
111 112 2.0 R
104 104 1.0 SV
101 111 0.0 SV
103 104 1.0 R
105 106 3.0 R
106 107 1.0 SV
107 108 3.0 R
A100 = 1.0
A101 = 2.0
A102 = 2.0
A103 = 1.0
A104 = 3.0
A105 = 3.0
A106 = 4.0
A107 = 4.0
A108 = 3.0
A109 = 2.0
A110 = 2.0
A111 = 2.0
A112 = 2.0
A113 = 1.0
B100 = 0.0
B101 = 0.0
B102 = 0.0
B103 = 1.0
B104 = 0.0
B105 = 0.0
B106 = 0.0
B107 = 0.0
B108 = 0.0
B109 = 1.0
B110 = 0.0
B111 = 0.0
B112 = 0.0
B113 = 0.0
T15 = 1.0
T2 = 0.0
T8 = 1.0
X1 = 2.0
X11 = 2.0
X13 = 2.0
X15 = 1.0
X2 = 0.0
X4 = 1.0
X6 = 3.0
X8 = 1.0
X9 = 3.0
Y0 = 0.0
Y10 = 0.0
Y12 = 0.0
Y14 = 0.0
Y3 = 0.0
Y5 = 0.0
Y7 = 0.0
Z0 = 0.0
Z10 = 0.0
Z12 = 0.0
Z14 = 0.0
Z3 = 0.0
Z5 = 0.0
Z7 = 0.0
42.0 Objective Answer
Siavash [(114, 115, 2, 'S')]
Y0 (114, 115, 2, 'S')
A114 A114
B114 B114
A115 A115
B115 B115
obj -2*Y0 + 4
Sv_sum 0
CN_tune 72*Z0
obj B114 + B115 - 20*Y0 + 720*Z0 + 40
Problem:
MINIMIZE
1*B114 + 1*B115 + -20*Y0 + 720*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A114 - B114 - Y0 = -2

_C5: - 2 A115 - B115 - Y0 = -2

VARIABLES
0 <= A114 Integer
0 <= A115 Integer
0 <= B114 <= 1 Integer
0 <= B115 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A114, A115, B114, B115, Y0, Z0]
A114 = 1.0
A115 = 1.0
B114 = 0.0
B115 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(116, 117, 2, 'S')]
Y0 (116, 117, 2, 'S')
A116 A116
B116 B116
A117 A117
B117 B117
obj -2*Y0 + 4
Sv_sum 0
CN_tune 78*Z0
obj B116 + B117 - 20*Y0 + 780*Z0 + 40
Problem:
MINIMIZE
1*B116 + 1*B117 + -20*Y0 + 780*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A116 - B116 - Y0 = -2

_C5: - 2 A117 - B117 - Y0 = -2

VARIABLES
0 <= A116 Integer
0 <= A117 Integer
0 <= B116 <= 1 Integer
0 <= B117 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A116, A117, B116, B117, Y0, Z0]
A116 = 1.0
A117 = 1.0
B116 = 0.0
B117 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(118, 119, 2, 'S')]
Y0 (118, 119, 2, 'S')
A118 A118
B118 B118
A119 A119
B119 B119
obj -2*Y0 + 4
Sv_sum 0
CN_tune 60*Z0
obj B118 + B119 - 20*Y0 + 600*Z0 + 40
Problem:
MINIMIZE
1*B118 + 1*B119 + -20*Y0 + 600*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A118 - B118 - Y0 = -2

_C5: - 2 A119 - B119 - Y0 = -2

VARIABLES
0 <= A118 Integer
0 <= A119 Integer
0 <= B118 <= 1 Integer
0 <= B119 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A118, A119, B118, B119, Y0, Z0]
A118 = 1.0
A119 = 1.0
B118 = 0.0
B119 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(120, 121, 2, 'S'), (121, 122, 0, 'R'), (121, 124, 0, 'SV'), (122, 123, 1, 'S'), (123, 124, 0, 'R'), (124, 125, 2, 'S')]
Y0 (120, 121, 2, 'S')
X1 (121, 122, 0, 'R')
X2 (121, 124, 0, 'SV')
Y3 (122, 123, 1, 'S')
X4 (123, 124, 0, 'R')
Y5 (124, 125, 2, 'S')
A120 A120
B120 B120
A121 A121
B121 B121
A122 A122
B122 B122
A123 A123
B123 B123
A124 A124
B124 B124
A125 A125
B125 B125
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 - 2*Y5 + 10
Sv_sum T2
CN_tune 12*Z0 + 6*Z3 + 24*Z5
obj B120 + B121 + B122 + B123 + B124 + B125 - 10*T2 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 - 20*Y5 + 120*Z0 + 60*Z3 + 240*Z5 + 100
Problem:
MINIMIZE
1*B120 + 1*B121 + 1*B122 + 1*B123 + 1*B124 + 1*B125 + -10*T2 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + -20*Y5 + 120*Z0 + 60*Z3 + 240*Z5 + 100
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A120 - B120 - Y0 = -2

_C16: X1 + X2 + Y0 <= 2

_C17: - 2 A121 - B121 + X1 + X2 + Y0 = -2

_C18: X1 + Y3 <= 1

_C19: - 2 A122 - B122 + X1 + Y3 = -1

_C20: X4 + Y3 <= 1

_C21: - 2 A123 - B123 + X4 + Y3 = -1

_C22: X2 + X4 + Y5 <= 2

_C23: - 2 A124 - B124 + X2 + X4 + Y5 = -2

_C24: - 2 A125 - B125 - Y5 = -2

VARIABLES
0 <= A120 Integer
0 <= A121 Integer
0 <= A122 Integer
0 <= A123 Integer
0 <= A124 Integer
0 <= A125 Integer
0 <= B120 <= 1 Integer
0 <= B121 <= 1 Integer
0 <= B122 <= 1 Integer
0 <= B123 <= 1 Integer
0 <= B124 <= 1 Integer
0 <= B125 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A120, A121, A122, A123, A124, A125, B120, B121, B122, B123, B124, B125, T2, X1, X2, X4, Y0, Y3, Y5, Z0, Z3, Z5]
121 122 1.0 R
121 124 1.0 SV
123 124 1.0 R
A120 = 1.0
A121 = 2.0
A122 = 1.0
A123 = 1.0
A124 = 2.0
A125 = 1.0
B120 = 0.0
B121 = 0.0
B122 = 0.0
B123 = 0.0
B124 = 0.0
B125 = 0.0
T2 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(126, 127, 2, 'S')]
Y0 (126, 127, 2, 'S')
A126 A126
B126 B126
A127 A127
B127 B127
obj -2*Y0 + 4
Sv_sum 0
CN_tune 192*Z0
obj B126 + B127 - 20*Y0 + 1920*Z0 + 40
Problem:
MINIMIZE
1*B126 + 1*B127 + -20*Y0 + 1920*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A126 - B126 - Y0 = -2

_C5: - 2 A127 - B127 - Y0 = -2

VARIABLES
0 <= A126 Integer
0 <= A127 Integer
0 <= B126 <= 1 Integer
0 <= B127 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A126, A127, B126, B127, Y0, Z0]
A126 = 1.0
A127 = 1.0
B126 = 0.0
B127 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(128, 129, 0, 'S')]
Y0 (128, 129, 0, 'S')
A128 A128
B128 B128
A129 A129
B129 B129
obj -2*Y0
Sv_sum 0
CN_tune 72*Z0
obj B128 + B129 - 20*Y0 + 720*Z0
Problem:
MINIMIZE
1*B128 + 1*B129 + -20*Y0 + 720*Z0 + 0
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 0

_C4: - 2 A128 - B128 - Y0 = 0

_C5: - 2 A129 - B129 - Y0 = 0

VARIABLES
0 <= A128 Integer
0 <= A129 Integer
0 <= B128 <= 1 Integer
0 <= B129 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A128, A129, B128, B129, Y0, Z0]
A128 = 0.0
A129 = 0.0
B128 = 0.0
B129 = 0.0
Y0 = 0.0
Z0 = 0.0
0.0 Objective Answer
[0, 1, 2, 3, 4, 5, 6, 7]
[(1, 0, 2, 'S'), (1, 2, 1, 'R'), (1, 5, 1, 'SV'), (2, 3, 1, 'S'), (3, 4, 1, 'R'), (4, 5, 3, 'S'), (5, 6, 2, 'R'), (6, 7, 2, 'S'), (4, 4, 1, 'SV')]
Component [0, 1, 2, 3, 4, 5, 6, 7]
Component edges [(1, 0, 2, 'S'), (1, 2, 1, 'R'), (1, 5, 1, 'SV'), (2, 3, 1, 'S'), (3, 4, 1, 'R'), (4, 5, 3, 'S'), (5, 6, 2, 'R'), (6, 7, 2, 'S'), (4, 4, 1, 'SV')]
ODD vertices []
TOUR
[0, 7]
paths_score 0 [[0, 1, 2, 3, 4, 5, 6, 7], [7, 6, 5, 4, 4, 5, 1, 0]]
paths_score 0 [[7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 5, 4, 4, 5, 6, 7]]
all edges with dummy:  [(1, 0, 2, 'S'), (1, 2, 1, 'R'), (1, 5, 1, 'SV'), (2, 3, 1, 'S'), (3, 4, 1, 'R'), (4, 5, 3, 'S'), (5, 6, 2, 'R'), (6, 7, 2, 'S'), (4, 4, 1, 'SV')]
0 1 14454.0 2 H [1]
1 1 27950096.0 2 T [0, 2, 5]
2 1 27950097.0 2 H [1, 3]
3 1 28069082.0 2 T [2, 4]
4 1 28069083.0 3 H [3, 4, 5]
5 1 34947606.0 3 T [1, 4, 6]
6 1 34949428.0 2 H [5, 7]
7 1 248943332.0 2 T [6]
Answer [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 5, 1, 0]
[8, 9, 10, 11, 16, 17, 15, 12, 13, 14]
[(9, 8, 2, 'S'), (9, 10, 1, 'R'), (9, 14, 1, 'SV'), (11, 10, 2, 'S'), (10, 13, 1, 'SV'), (11, 16, 1, 'SV'), (11, 12, 1, 'R'), (16, 17, 2, 'S'), (15, 16, 1, 'R'), (12, 15, 1, 'SV'), (15, 14, 2, 'S'), (13, 12, 2, 'S'), (13, 14, 1, 'R')]
Component [8, 9, 10, 11, 16, 17, 15, 12, 13, 14]
Component edges [(9, 8, 2, 'S'), (9, 10, 1, 'R'), (9, 14, 1, 'SV'), (11, 10, 2, 'S'), (10, 13, 1, 'SV'), (11, 16, 1, 'SV'), (11, 12, 1, 'R'), (16, 17, 2, 'S'), (15, 16, 1, 'R'), (12, 15, 1, 'SV'), (15, 14, 2, 'S'), (13, 12, 2, 'S'), (13, 14, 1, 'R')]
ODD vertices []
TOUR
[8, 17]
paths_score 0 [[8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [17, 16, 11, 10, 13, 12, 15, 14, 9, 8]]
paths_score 0 [[17, 16, 15, 14, 13, 12, 11, 10, 9, 8], [8, 9, 14, 15, 12, 13, 10, 11, 16, 17]]
all edges with dummy:  [(9, 8, 2, 'S'), (9, 10, 1, 'R'), (9, 14, 1, 'SV'), (11, 10, 2, 'S'), (10, 13, 1, 'SV'), (11, 16, 1, 'SV'), (11, 12, 1, 'R'), (16, 17, 2, 'S'), (15, 16, 1, 'R'), (12, 15, 1, 'SV'), (15, 14, 2, 'S'), (13, 12, 2, 'S'), (13, 14, 1, 'R')]
8 2 0.0 2 H [9]
9 2 51020118.0 2 T [8, 10, 14]
10 2 51020119.0 2 H [9, 11, 13]
11 2 53090950.0 2 T [16, 10, 12]
16 2 214199490.5 2 H [17, 11, 15]
17 2 242181357.0 2 T [16]
15 2 214199489.5 2 T [16, 12, 14]
12 2 53090951.0 2 H [11, 13, 15]
13 2 210857266.0 2 T [10, 12, 14]
14 2 210857267.0 2 H [9, 13, 15]
Answer [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 16, 11, 10, 13, 12, 15, 14, 9, 8]
[18, 19]
[(18, 19, 2, 'S')]
Component [18, 19]
Component edges [(18, 19, 2, 'S')]
ODD vertices []
TOUR
[18, 19]
paths_score 0 [[18, 19], [19, 18]]
paths_score 0 [[19, 18], [18, 19]]
all edges with dummy:  [(18, 19, 2, 'S')]
18 3 0 2 H [19]
19 3 198230596 2 T [18]
Answer [18, 19, 18]
[20, 21]
[(20, 21, 2, 'S')]
Component [20, 21]
Component edges [(20, 21, 2, 'S')]
ODD vertices []
TOUR
[20, 21]
paths_score 0 [[20, 21], [21, 20]]
paths_score 0 [[21, 20], [20, 21]]
all edges with dummy:  [(20, 21, 2, 'S')]
20 4 0 2 H [21]
21 4 190202564 2 T [20]
Answer [20, 21, 20]
[22, 23]
[(22, 23, 2, 'S')]
Component [22, 23]
Component edges [(22, 23, 2, 'S')]
ODD vertices []
TOUR
[22, 23]
paths_score 0 [[22, 23], [23, 22]]
paths_score 0 [[23, 22], [22, 23]]
all edges with dummy:  [(22, 23, 2, 'S')]
22 5 0 2 H [23]
23 5 181472714 2 T [22]
Answer [22, 23, 22]
[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 40, 39, 38, 42, 43, 44, 45]
[(24, 25, 3, 'S'), (25, 26, 3, 'R'), (26, 27, 3, 'S'), (27, 28, 3, 'R'), (28, 29, 3, 'S'), (29, 30, 3, 'R'), (30, 31, 3, 'S'), (31, 32, 3, 'R'), (32, 33, 3, 'S'), (33, 34, 3, 'R'), (34, 35, 4, 'S'), (35, 36, 3, 'R'), (37, 36, 3, 'S'), (37, 41, 2, 'SV'), (37, 38, 1, 'R'), (41, 40, 3, 'S'), (41, 42, 1, 'R'), (39, 40, 3, 'R'), (38, 39, 3, 'S'), (38, 42, 2, 'SV'), (42, 43, 3, 'S'), (43, 44, 2, 'R'), (44, 45, 2, 'S')]
Component [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 40, 39, 38, 42, 43, 44, 45]
Component edges [(24, 25, 3, 'S'), (25, 26, 3, 'R'), (26, 27, 3, 'S'), (27, 28, 3, 'R'), (28, 29, 3, 'S'), (29, 30, 3, 'R'), (30, 31, 3, 'S'), (31, 32, 3, 'R'), (32, 33, 3, 'S'), (33, 34, 3, 'R'), (34, 35, 4, 'S'), (35, 36, 3, 'R'), (37, 36, 3, 'S'), (37, 41, 2, 'SV'), (37, 38, 1, 'R'), (41, 40, 3, 'S'), (41, 42, 1, 'R'), (39, 40, 3, 'R'), (38, 39, 3, 'S'), (38, 42, 2, 'SV'), (42, 43, 3, 'S'), (43, 44, 2, 'R'), (44, 45, 2, 'S')]
ODD vertices [24, 34, 35, 43]
TOUR
[24, 45]
all edges with dummy:  [(24, 25, 3, 'S'), (25, 26, 3, 'R'), (26, 27, 3, 'S'), (27, 28, 3, 'R'), (28, 29, 3, 'S'), (29, 30, 3, 'R'), (30, 31, 3, 'S'), (31, 32, 3, 'R'), (32, 33, 3, 'S'), (33, 34, 3, 'R'), (34, 35, 4, 'S'), (35, 36, 3, 'R'), (37, 36, 3, 'S'), (37, 41, 2, 'SV'), (37, 38, 1, 'R'), (41, 40, 3, 'S'), (41, 42, 1, 'R'), (39, 40, 3, 'R'), (38, 39, 3, 'S'), (38, 42, 2, 'SV'), (42, 43, 3, 'S'), (43, 44, 2, 'R'), (44, 45, 2, 'S'), (35, 43, 1, 'D')]
24 6 76216.0 3 H [25]
25 6 32633338.0 3 T [24, 26]
26 6 32633339.0 3 H [25, 27]
27 6 36976631.0 3 T [26, 28]
28 6 36976632.0 3 H [27, 29]
29 6 58445657.0 3 T [28, 30]
30 6 58445658 2 H [29, 31]
31 6 60290030.0 2 T [32, 30]
32 6 60290031.0 3 H [33, 31]
33 6 80349101.0 3 T [32, 34]
34 6 80353187.0 4 H [33, 35]
35 6 81144424.0 4 T [34, 43, 36]
36 6 81145442.0 3 H [35, 37]
37 6 116963577.5 3 T [41, 36, 38]
41 6 122860176.0 3 T [40, 42, 37]
40 6 118131169.0 3 H [41, 39]
39 6 118130489.0 3 T [40, 38]
38 6 116963578.5 3 H [42, 37, 39]
42 6 122860177.0 3 H [41, 43, 38]
43 6 169949785.0 3 T [42, 35, 44]
44 6 169949786 2 H [43, 45]
45 6 170739896 2 T [44]
Answer [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 44, 43, 42, 38, 39, 40, 41, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 40, 39, 38, 42, 43, 35, 34]
[46, 47]
[(46, 47, 2, 'S')]
Component [46, 47]
Component edges [(46, 47, 2, 'S')]
ODD vertices []
TOUR
[46, 47]
paths_score 0 [[46, 47], [47, 46]]
paths_score 0 [[47, 46], [46, 47]]
all edges with dummy:  [(46, 47, 2, 'S')]
46 7 0 2 H [47]
47 7 159334984 2 T [46]
Answer [46, 47, 46]
[48, 49, 50, 51, 52, 53]
[(48, 49, 2, 'S'), (49, 50, 1, 'R'), (50, 51, 1, 'S'), (51, 52, 1, 'R'), (52, 53, 2, 'S')]
Component [48, 49, 50, 51, 52, 53]
Component edges [(48, 49, 2, 'S'), (49, 50, 1, 'R'), (50, 51, 1, 'S'), (51, 52, 1, 'R'), (52, 53, 2, 'S')]
ODD vertices [49, 52]
TOUR
[48, 53]
paths_score 0 [[48, 49, 50, 51, 52, 53], [53, 52, 49, 48]]
paths_score 0 [[53, 52, 51, 50, 49, 48], [48, 49, 52, 53]]
all edges with dummy:  [(48, 49, 2, 'S'), (49, 50, 1, 'R'), (50, 51, 1, 'S'), (51, 52, 1, 'R'), (52, 53, 2, 'S'), (49, 52, 1, 'D')]
48 8 61806 2 H [49]
49 8 137777408.0 2 T [48, 50, 52]
50 8 137777409.0 1 H [49, 51]
51 8 144888115.0 1 T [50, 52]
52 8 144888116 2 H [49, 51, 53]
53 8 145076124 2 T [52]
Answer [48, 49, 50, 51, 52, 53, 52, 49, 48]
[54, 55, 56, 57, 58, 59, 60, 61]
[(55, 54, 2, 'S'), (55, 56, 1, 'R'), (55, 58, 1, 'SV'), (57, 56, 2, 'S'), (56, 59, 1, 'SV'), (57, 58, 1, 'R'), (57, 60, 1, 'SV'), (59, 58, 2, 'S'), (59, 60, 1, 'R'), (60, 61, 2, 'S')]
Component [54, 55, 56, 57, 58, 59, 60, 61]
Component edges [(55, 54, 2, 'S'), (55, 56, 1, 'R'), (55, 58, 1, 'SV'), (57, 56, 2, 'S'), (56, 59, 1, 'SV'), (57, 58, 1, 'R'), (57, 60, 1, 'SV'), (59, 58, 2, 'S'), (59, 60, 1, 'R'), (60, 61, 2, 'S')]
ODD vertices []
TOUR
[54, 61]
paths_score 0 [[54, 55, 56, 57, 58, 59, 60, 61], [61, 60, 57, 56, 59, 58, 55, 54]]
paths_score 0 [[61, 60, 59, 58, 57, 56, 55, 54], [54, 55, 58, 59, 56, 57, 60, 61]]
all edges with dummy:  [(55, 54, 2, 'S'), (55, 56, 1, 'R'), (55, 58, 1, 'SV'), (57, 56, 2, 'S'), (56, 59, 1, 'SV'), (57, 58, 1, 'R'), (57, 60, 1, 'SV'), (59, 58, 2, 'S'), (59, 60, 1, 'R'), (60, 61, 2, 'S')]
54 9 0.0 2 H [55]
55 9 9180299.5 2 T [56, 58, 54]
56 9 9180300.5 2 H [57, 59, 55]
57 9 12793027.5 2 T [56, 58, 60]
58 9 12793028.5 2 H [57, 59, 55]
59 9 18139428.0 2 T [56, 58, 60]
60 9 18139429.0 2 H [57, 59, 61]
61 9 138334464.0 2 T [60]
Answer [54, 55, 56, 57, 58, 59, 60, 61, 60, 57, 56, 59, 58, 55, 54]
[62, 63, 64, 65, 66, 67]
[(63, 62, 2, 'S'), (63, 64, 2, 'R'), (65, 64, 2, 'S'), (65, 66, 2, 'R'), (66, 67, 2, 'S')]
Component [62, 63, 64, 65, 66, 67]
Component edges [(63, 62, 2, 'S'), (63, 64, 2, 'R'), (65, 64, 2, 'S'), (65, 66, 2, 'R'), (66, 67, 2, 'S')]
ODD vertices []
TOUR
[62, 67]
paths_score 0 [[62, 63, 64, 65, 66, 67], [67, 66, 65, 64, 63, 62]]
paths_score 0 [[67, 66, 65, 64, 63, 62], [62, 63, 64, 65, 66, 67]]
all edges with dummy:  [(63, 62, 2, 'S'), (63, 64, 2, 'R'), (65, 64, 2, 'S'), (65, 66, 2, 'R'), (66, 67, 2, 'S')]
62 10 0.0 2 H [63]
63 10 46991592.0 2 T [64, 62]
64 10 46991593.0 2 H [65, 63]
65 10 48060267.0 2 T [64, 66]
66 10 48060268.0 2 H [65, 67]
67 10 133785266.0 2 T [66]
Answer [62, 63, 64, 65, 66, 67, 66, 65, 64, 63, 62]
[68, 69, 70, 71, 72, 73, 74, 75, 76, 77]
[(69, 68, 2, 'S'), (69, 70, 2, 'R'), (70, 71, 2, 'S'), (71, 72, 1, 'R'), (72, 73, 3, 'S'), (73, 74, 2, 'R'), (75, 74, 2, 'S'), (75, 76, 2, 'R'), (76, 77, 2, 'S'), (72, 72, 1, 'SV')]
Component [68, 69, 70, 71, 72, 73, 74, 75, 76, 77]
Component edges [(69, 68, 2, 'S'), (69, 70, 2, 'R'), (70, 71, 2, 'S'), (71, 72, 1, 'R'), (72, 73, 3, 'S'), (73, 74, 2, 'R'), (75, 74, 2, 'S'), (75, 76, 2, 'R'), (76, 77, 2, 'S'), (72, 72, 1, 'SV')]
ODD vertices [71, 73]
TOUR
[68, 77]
paths_score 0 [[68, 69, 70, 71, 72, 73, 74, 75, 76, 77], [77, 76, 75, 74, 73, 72, 72, 73, 71, 70, 69, 68]]
paths_score 0 [[77, 76, 75, 74, 73, 72, 71, 70, 69, 68], [68, 69, 70, 71, 73, 72, 72, 73, 74, 75, 76, 77]]
all edges with dummy:  [(69, 68, 2, 'S'), (69, 70, 2, 'R'), (70, 71, 2, 'S'), (71, 72, 1, 'R'), (72, 73, 3, 'S'), (73, 74, 2, 'R'), (75, 74, 2, 'S'), (75, 76, 2, 'R'), (76, 77, 2, 'S'), (72, 72, 1, 'SV'), (71, 73, 1, 'D')]
68 11 60458.0 2 H [69]
69 11 36251165.0 2 T [68, 70]
70 11 36251166.0 2 H [69, 71]
71 11 36310302.0 2 T [72, 73, 70]
72 11 36310303.0 3 H [72, 73, 71]
73 11 45304391.0 3 T [72, 74, 71]
74 11 45304392.0 2 H [73, 75]
75 11 45358235.0 2 T [74, 76]
76 11 45358236.0 2 H [75, 77]
77 11 135069564.0 2 T [76]
Answer [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 76, 75, 74, 73, 72, 72, 73, 71, 70, 69, 68]
[78, 79, 80, 81, 82, 83, 84, 85]
[(78, 79, 2, 'S'), (79, 80, 1, 'R'), (81, 80, 1, 'S'), (81, 82, 1, 'R'), (82, 83, 1, 'S'), (83, 84, 1, 'R'), (84, 85, 2, 'S')]
Component [78, 79, 80, 81, 82, 83, 84, 85]
Component edges [(78, 79, 2, 'S'), (79, 80, 1, 'R'), (81, 80, 1, 'S'), (81, 82, 1, 'R'), (82, 83, 1, 'S'), (83, 84, 1, 'R'), (84, 85, 2, 'S')]
ODD vertices [79, 84]
TOUR
[78, 85]
paths_score 0 [[78, 79, 80, 81, 82, 83, 84, 85], [85, 84, 79, 78]]
paths_score 0 [[85, 84, 83, 82, 81, 80, 79, 78], [78, 79, 84, 85]]
all edges with dummy:  [(78, 79, 2, 'S'), (79, 80, 1, 'R'), (81, 80, 1, 'S'), (81, 82, 1, 'R'), (82, 83, 1, 'S'), (83, 84, 1, 'R'), (84, 85, 2, 'S'), (79, 84, 1, 'D')]
78 12 14569 2 H [79]
79 12 108079511.0 2 T [80, 84, 78]
80 12 108103967.0 1 H [81, 79]
81 12 114281879.0 1 T [80, 82]
82 12 114281880.0 1 H [81, 83]
83 12 114345292.0 1 T [82, 84]
84 12 114345293 2 H [83, 85, 79]
85 12 133263959 2 T [84]
Answer [78, 79, 80, 81, 82, 83, 84, 85, 84, 79, 78]
[86, 87]
[(86, 87, 2, 'S')]
Component [86, 87]
Component edges [(86, 87, 2, 'S')]
ODD vertices []
TOUR
[86, 87]
paths_score 0 [[86, 87], [87, 86]]
paths_score 0 [[87, 86], [86, 87]]
all edges with dummy:  [(86, 87, 2, 'S')]
86 13 0 2 H [87]
87 13 114352102 2 T [86]
Answer [86, 87, 86]
[88, 89]
[(88, 89, 2, 'S')]
Component [88, 89]
Component edges [(88, 89, 2, 'S')]
ODD vertices []
TOUR
[88, 89]
paths_score 0 [[88, 89], [89, 88]]
paths_score 0 [[89, 88], [88, 89]]
all edges with dummy:  [(88, 89, 2, 'S')]
88 14 0 2 H [89]
89 14 106873282 2 T [88]
Answer [88, 89, 88]
[90, 91]
[(90, 91, 2, 'S')]
Component [90, 91]
Component edges [(90, 91, 2, 'S')]
ODD vertices []
TOUR
[90, 91]
paths_score 0 [[90, 91], [91, 90]]
paths_score 0 [[91, 90], [90, 91]]
all edges with dummy:  [(90, 91, 2, 'S')]
90 15 0 2 H [91]
91 15 101976509 2 T [90]
Answer [90, 91, 90]
[92, 93, 94, 95, 96, 97]
[(93, 92, 2, 'S'), (93, 94, 2, 'R'), (95, 94, 2, 'S'), (95, 96, 2, 'R'), (96, 97, 2, 'S')]
Component [92, 93, 94, 95, 96, 97]
Component edges [(93, 92, 2, 'S'), (93, 94, 2, 'R'), (95, 94, 2, 'S'), (95, 96, 2, 'R'), (96, 97, 2, 'S')]
ODD vertices []
TOUR
[92, 97]
paths_score 0 [[92, 93, 94, 95, 96, 97], [97, 96, 95, 94, 93, 92]]
paths_score 0 [[97, 96, 95, 94, 93, 92], [92, 93, 94, 95, 96, 97]]
all edges with dummy:  [(93, 92, 2, 'S'), (93, 94, 2, 'R'), (95, 94, 2, 'S'), (95, 96, 2, 'R'), (96, 97, 2, 'S')]
92 16 0.0 2 H [93]
93 16 21500434.0 2 T [92, 94]
94 16 21500435.0 2 H [93, 95]
95 16 22438802.0 2 T [96, 94]
96 16 22438803.0 2 H [97, 95]
97 16 90224751.0 2 T [96]
Answer [92, 93, 94, 95, 96, 97, 96, 95, 94, 93, 92]
[98, 99]
[(98, 99, 2, 'S')]
Component [98, 99]
Component edges [(98, 99, 2, 'S')]
ODD vertices []
TOUR
[98, 99]
paths_score 0 [[98, 99], [99, 98]]
paths_score 0 [[99, 98], [98, 99]]
all edges with dummy:  [(98, 99, 2, 'S')]
98 17 0 2 H [99]
99 17 83246392 2 T [98]
Answer [98, 99, 98]
[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113]
[(101, 100, 2, 'S'), (101, 102, 2, 'R'), (102, 103, 2, 'S'), (103, 104, 1, 'R'), (104, 105, 3, 'S'), (105, 106, 3, 'R'), (106, 107, 1, 'SV'), (106, 107, 4, 'S'), (107, 108, 3, 'R'), (108, 109, 3, 'S'), (109, 110, 2, 'R'), (111, 110, 2, 'S'), (111, 112, 2, 'R'), (112, 113, 2, 'S'), (104, 104, 1, 'SV')]
Component [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113]
Component edges [(101, 100, 2, 'S'), (101, 102, 2, 'R'), (102, 103, 2, 'S'), (103, 104, 1, 'R'), (104, 105, 3, 'S'), (105, 106, 3, 'R'), (106, 107, 1, 'SV'), (106, 107, 4, 'S'), (107, 108, 3, 'R'), (108, 109, 3, 'S'), (109, 110, 2, 'R'), (111, 110, 2, 'S'), (111, 112, 2, 'R'), (112, 113, 2, 'S'), (104, 104, 1, 'SV')]
ODD vertices [103, 109]
TOUR
[100, 113]
paths_score 0 [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 104, 105, 106, 107, 106, 107, 108, 109, 103, 102, 101, 100]]
paths_score 0 [[113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100], [100, 101, 102, 103, 109, 108, 107, 106, 105, 104, 104, 105, 106, 107, 106, 107, 108, 109, 110, 111, 112, 113]]
all edges with dummy:  [(101, 100, 2, 'S'), (101, 102, 2, 'R'), (102, 103, 2, 'S'), (103, 104, 1, 'R'), (104, 105, 3, 'S'), (105, 106, 3, 'R'), (106, 107, 1, 'SV'), (106, 107, 4, 'S'), (107, 108, 3, 'R'), (108, 109, 3, 'S'), (109, 110, 2, 'R'), (111, 110, 2, 'S'), (111, 112, 2, 'R'), (112, 113, 2, 'S'), (104, 104, 1, 'SV'), (103, 109, 1, 'D')]
100 18 18869.0 2 H [101]
101 18 27056746.0 2 T [100, 102]
102 18 27056747.0 2 H [101, 103]
103 18 27121235.0 2 T [104, 109, 102]
104 18 27121236.0 3 H [104, 105, 103]
105 18 31464835.0 3 T [104, 106]
106 18 31471086.0 4 H [105, 107]
107 18 35128728.0 4 T [106, 108]
108 18 35129841.0 3 H [107, 109]
109 18 35901748.0 3 T [108, 110, 103]
110 18 35901749.0 2 H [109, 111]
111 18 36266564.0 2 T [112, 110]
112 18 36266565.0 2 H [113, 111]
113 18 80256373.0 2 T [112]
Answer [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 104, 105, 106, 107, 106, 107, 108, 109, 103, 102, 101, 100]
[114, 115]
[(114, 115, 2, 'S')]
Component [114, 115]
Component edges [(114, 115, 2, 'S')]
ODD vertices []
TOUR
[114, 115]
paths_score 0 [[114, 115], [115, 114]]
paths_score 0 [[115, 114], [114, 115]]
all edges with dummy:  [(114, 115, 2, 'S')]
114 19 0 2 H [115]
115 19 58605715 2 T [114]
Answer [114, 115, 114]
[116, 117]
[(116, 117, 2, 'S')]
Component [116, 117]
Component edges [(116, 117, 2, 'S')]
ODD vertices []
TOUR
[116, 117]
paths_score 0 [[116, 117], [117, 116]]
paths_score 0 [[117, 116], [116, 117]]
all edges with dummy:  [(116, 117, 2, 'S')]
116 20 0 2 H [117]
117 20 64333718 2 T [116]
Answer [116, 117, 116]
[118, 119]
[(118, 119, 2, 'S')]
Component [118, 119]
Component edges [(118, 119, 2, 'S')]
ODD vertices []
TOUR
[118, 119]
paths_score 0 [[118, 119], [119, 118]]
paths_score 0 [[119, 118], [118, 119]]
all edges with dummy:  [(118, 119, 2, 'S')]
118 21 0 2 H [119]
119 21 46697230 2 T [118]
Answer [118, 119, 118]
[120, 121, 122, 123, 124, 125]
[(120, 121, 2, 'S'), (121, 122, 1, 'R'), (121, 124, 1, 'SV'), (122, 123, 1, 'S'), (123, 124, 1, 'R'), (124, 125, 2, 'S')]
Component [120, 121, 122, 123, 124, 125]
Component edges [(120, 121, 2, 'S'), (121, 122, 1, 'R'), (121, 124, 1, 'SV'), (122, 123, 1, 'S'), (123, 124, 1, 'R'), (124, 125, 2, 'S')]
ODD vertices []
TOUR
[120, 125]
paths_score 0 [[120, 121, 122, 123, 124, 125], [125, 124, 121, 120]]
paths_score 0 [[125, 124, 123, 122, 121, 120], [120, 121, 124, 125]]
all edges with dummy:  [(120, 121, 2, 'S'), (121, 122, 1, 'R'), (121, 124, 1, 'SV'), (122, 123, 1, 'S'), (123, 124, 1, 'R'), (124, 125, 2, 'S')]
120 22 10514804 2 H [121]
121 22 21400052.0 2 T [120, 122, 124]
122 22 21400053.0 1 H [121, 123]
123 22 23418595.0 1 T [122, 124]
124 22 23418596 2 H [121, 123, 125]
125 22 50805586 2 T [124]
Answer [120, 121, 122, 123, 124, 125, 124, 121, 120]
[126, 127]
[(126, 127, 2, 'S')]
Component [126, 127]
Component edges [(126, 127, 2, 'S')]
ODD vertices []
TOUR
[126, 127]
paths_score 0 [[126, 127], [127, 126]]
paths_score 0 [[127, 126], [126, 127]]
all edges with dummy:  [(126, 127, 2, 'S')]
126 23 0 2 H [127]
127 23 156025612 2 T [126]
Answer [126, 127, 126]
{(1, 0, 'S'): 2, (1, 2, 'R'): 1, (1, 5, 'SV'): 1, (2, 3, 'S'): 1, (3, 4, 'R'): 1, (4, 5, 'S'): 3, (5, 6, 'R'): 2, (6, 7, 'S'): 2, (4, 4, 'SV'): 1}
split node indices:  [7]
debug paths separation:  [[0, 1, 2, 3, 4, 5, 6, 7], [7, 6, 5, 4, 4, 5, 1, 0]]
{(9, 8, 'S'): 2, (9, 10, 'R'): 1, (9, 14, 'SV'): 1, (11, 10, 'S'): 2, (10, 13, 'SV'): 1, (11, 16, 'SV'): 1, (11, 12, 'R'): 1, (16, 17, 'S'): 2, (15, 16, 'R'): 1, (12, 15, 'SV'): 1, (15, 14, 'S'): 2, (13, 12, 'S'): 2, (13, 14, 'R'): 1}
split node indices:  [9]
debug paths separation:  [[8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [17, 16, 11, 10, 13, 12, 15, 14, 9, 8]]
{(18, 19, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[18, 19], [19, 18]]
{(20, 21, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[20, 21], [21, 20]]
{(22, 23, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[22, 23], [23, 22]]
{(24, 25, 'S'): 3, (25, 26, 'R'): 3, (26, 27, 'S'): 3, (27, 28, 'R'): 3, (28, 29, 'S'): 3, (29, 30, 'R'): 3, (30, 31, 'S'): 3, (31, 32, 'R'): 3, (32, 33, 'S'): 3, (33, 34, 'R'): 3, (34, 35, 'S'): 4, (35, 36, 'R'): 3, (37, 36, 'S'): 3, (37, 41, 'SV'): 2, (37, 38, 'R'): 1, (41, 40, 'S'): 3, (41, 42, 'R'): 1, (39, 40, 'R'): 3, (38, 39, 'S'): 3, (38, 42, 'SV'): 2, (42, 43, 'S'): 3, (43, 44, 'R'): 2, (44, 45, 'S'): 2, (35, 43, 'D'): 1}
split node indices:  [21, 42]
debug paths separation:  [[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], [45, 44, 43, 42, 38, 39, 40, 41, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 40, 39, 38, 42, 43, 35, 34]]
{(46, 47, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[46, 47], [47, 46]]
{(48, 49, 'S'): 2, (49, 50, 'R'): 1, (50, 51, 'S'): 1, (51, 52, 'R'): 1, (52, 53, 'S'): 2, (49, 52, 'D'): 1}
split node indices:  [5]
debug paths separation:  [[48, 49, 50, 51, 52, 53], [53, 52, 49, 48]]
{(55, 54, 'S'): 2, (55, 56, 'R'): 1, (55, 58, 'SV'): 1, (57, 56, 'S'): 2, (56, 59, 'SV'): 1, (57, 58, 'R'): 1, (57, 60, 'SV'): 1, (59, 58, 'S'): 2, (59, 60, 'R'): 1, (60, 61, 'S'): 2}
split node indices:  [7]
debug paths separation:  [[54, 55, 56, 57, 58, 59, 60, 61], [61, 60, 57, 56, 59, 58, 55, 54]]
{(63, 62, 'S'): 2, (63, 64, 'R'): 2, (65, 64, 'S'): 2, (65, 66, 'R'): 2, (66, 67, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[62, 63, 64, 65, 66, 67], [67, 66, 65, 64, 63, 62]]
{(69, 68, 'S'): 2, (69, 70, 'R'): 2, (70, 71, 'S'): 2, (71, 72, 'R'): 1, (72, 73, 'S'): 3, (73, 74, 'R'): 2, (75, 74, 'S'): 2, (75, 76, 'R'): 2, (76, 77, 'S'): 2, (72, 72, 'SV'): 1, (71, 73, 'D'): 1}
split node indices:  [9]
debug paths separation:  [[68, 69, 70, 71, 72, 73, 74, 75, 76, 77], [77, 76, 75, 74, 73, 72, 72, 73, 71, 70, 69, 68]]
{(78, 79, 'S'): 2, (79, 80, 'R'): 1, (81, 80, 'S'): 1, (81, 82, 'R'): 1, (82, 83, 'S'): 1, (83, 84, 'R'): 1, (84, 85, 'S'): 2, (79, 84, 'D'): 1}
split node indices:  [7]
debug paths separation:  [[78, 79, 80, 81, 82, 83, 84, 85], [85, 84, 79, 78]]
{(86, 87, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[86, 87], [87, 86]]
{(88, 89, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[88, 89], [89, 88]]
{(90, 91, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[90, 91], [91, 90]]
{(93, 92, 'S'): 2, (93, 94, 'R'): 2, (95, 94, 'S'): 2, (95, 96, 'R'): 2, (96, 97, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[92, 93, 94, 95, 96, 97], [97, 96, 95, 94, 93, 92]]
{(98, 99, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[98, 99], [99, 98]]
{(101, 100, 'S'): 2, (101, 102, 'R'): 2, (102, 103, 'S'): 2, (103, 104, 'R'): 1, (104, 105, 'S'): 3, (105, 106, 'R'): 3, (106, 107, 'SV'): 1, (106, 107, 'S'): 4, (107, 108, 'R'): 3, (108, 109, 'S'): 3, (109, 110, 'R'): 2, (111, 110, 'S'): 2, (111, 112, 'R'): 2, (112, 113, 'S'): 2, (104, 104, 'SV'): 1, (103, 109, 'D'): 1}
split node indices:  [13]
debug paths separation:  [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 104, 105, 106, 107, 106, 107, 108, 109, 103, 102, 101, 100]]
{(114, 115, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[114, 115], [115, 114]]
{(116, 117, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[116, 117], [117, 116]]
{(118, 119, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[118, 119], [119, 118]]
{(120, 121, 'S'): 2, (121, 122, 'R'): 1, (121, 124, 'SV'): 1, (122, 123, 'S'): 1, (123, 124, 'R'): 1, (124, 125, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[120, 121, 122, 123, 124, 125], [125, 124, 121, 120]]
{(126, 127, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[126, 127], [127, 126]]
