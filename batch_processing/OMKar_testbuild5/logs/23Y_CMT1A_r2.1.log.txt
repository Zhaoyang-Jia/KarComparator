Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/b2e757162eeb412f889410c5f388afe9-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/b2e757162eeb412f889410c5f388afe9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 57 COLUMNS
At line 306 RHS
At line 359 BOUNDS
At line 406 ENDATA
Problem MODEL has 52 rows, 46 columns and 122 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -330 - 0.00 seconds
Cgl0003I 0 fixed, 14 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (24 of which binary)) and 114 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 4 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -330 iterations 0
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -330 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -330 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -148 iterations 7
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -148 iterations 2
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -148 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -148 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -98 iterations 3
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -98 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -98 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 223 iterations 8
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 223 iterations 0
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 223 iterations 0
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 223 iterations 0
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 124 iterations 2
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 124 iterations 0
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 124 iterations 0
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 105 iterations 4
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 105 iterations 0
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 105 iterations 0
Cbc0038I Pass  21: suminf.    2.00000 (6) obj. 178 iterations 12
Cbc0038I Pass  22: suminf.    0.50000 (1) obj. 858 iterations 6
Cbc0038I Solution found of 818
Cbc0038I Cleaned solution of 818
Cbc0038I Rounding solution of -330 is better than previous of 818

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -330 - took 0.00 seconds
Cbc0012I Integer solution of -330 found by DiveCoefficient after 3 iterations and 0 nodes (0.01 seconds)
Cbc0031I 3 added rows had average density of 9
Cbc0013I At root node, 3 cuts changed objective from -330 to -330 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 5 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -330, took 3 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -330 to -330
Probing was tried 2 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -330.00000000
Enumerated nodes:               0
Total iterations:               3
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/592ddd661b8e458aad2c874bbb9b2486-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/592ddd661b8e458aad2c874bbb9b2486-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/999be53db5344efd9cdf0102404820c9-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/999be53db5344efd9cdf0102404820c9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 102 COLUMNS
At line 563 RHS
At line 661 BOUNDS
At line 747 ENDATA
Problem MODEL has 97 rows, 85 columns and 227 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -545 - 0.00 seconds
Cgl0003I 0 fixed, 29 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 70 rows, 84 columns (84 integer (42 of which binary)) and 202 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 4 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -530 iterations 1
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -530 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -530 iterations 0
Cbc0038I Pass   4: suminf.    1.00000 (2) obj. 265 iterations 13
Cbc0038I Pass   5: suminf.    1.00000 (2) obj. 265 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 725 iterations 2
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 725 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 725 iterations 0
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 898 iterations 7
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 898 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 898 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 898 iterations 0
Cbc0038I Pass  13: suminf.    0.50000 (1) obj. 1134 iterations 13
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 1114 iterations 1
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 1114 iterations 0
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 1114 iterations 0
Cbc0038I Pass  17: suminf.    0.50000 (1) obj. 949 iterations 21
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 949 iterations 1
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 949 iterations 0
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 949 iterations 0
Cbc0038I Pass  21: suminf.    0.50000 (1) obj. 897 iterations 18
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. 897 iterations 2
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. 897 iterations 0
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. 659 iterations 8
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. 659 iterations 0
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 659 iterations 0
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. 721 iterations 12
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 721 iterations 0
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. 721 iterations 0
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 763 iterations 10
Cbc0038I Rounding solution of -530 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous of which 8 were internal integer and 0 internal continuous
Cbc0038I Full problem 70 rows 84 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -530 to -540 (0.01 seconds)
Cbc0038I Round again with cutoff of -541.4
Cbc0038I Reduced cost fixing fixed 8 variables on major pass 2
Cbc0038I Pass  30: suminf.    0.38000 (1) obj. -541.4 iterations 1
Cbc0038I Pass  31: suminf.    0.41997 (2) obj. -541.4 iterations 2
Cbc0038I Pass  32: suminf.    0.38000 (1) obj. -541.4 iterations 1
Cbc0038I Pass  33: suminf.    0.58000 (2) obj. -541.4 iterations 4
Cbc0038I Pass  34: suminf.    0.44666 (1) obj. -541.4 iterations 2
Cbc0038I Pass  35: suminf.    0.66001 (2) obj. -541.4 iterations 2
Cbc0038I Pass  36: suminf.    0.44666 (1) obj. -541.4 iterations 1
Cbc0038I Pass  37: suminf.    0.89991 (2) obj. -541.4 iterations 2
Cbc0038I Pass  38: suminf.    0.89991 (2) obj. -541.4 iterations 0
Cbc0038I Pass  39: suminf.    0.56001 (2) obj. -541.4 iterations 2
Cbc0038I Pass  40: suminf.    0.48000 (1) obj. -541.4 iterations 1
Cbc0038I Pass  41: suminf.    0.89991 (2) obj. -541.4 iterations 1
Cbc0038I Pass  42: suminf.    0.89991 (2) obj. -541.4 iterations 0
Cbc0038I Pass  43: suminf.    0.56001 (2) obj. -541.4 iterations 4
Cbc0038I Pass  44: suminf.    0.89991 (2) obj. -541.4 iterations 3
Cbc0038I Pass  45: suminf.    0.89991 (2) obj. -541.4 iterations 0
Cbc0038I Pass  46: suminf.    0.56001 (2) obj. -541.4 iterations 4
Cbc0038I Pass  47: suminf.    0.48000 (1) obj. -541.4 iterations 2
Cbc0038I Pass  48: suminf.    0.89991 (2) obj. -541.4 iterations 3
Cbc0038I Pass  49: suminf.    0.89991 (2) obj. -541.4 iterations 0
Cbc0038I Pass  50: suminf.    0.56001 (2) obj. -541.4 iterations 4
Cbc0038I Pass  51: suminf.    0.48000 (1) obj. -541.4 iterations 2
Cbc0038I Pass  52: suminf.    0.89991 (2) obj. -541.4 iterations 4
Cbc0038I Pass  53: suminf.    0.89991 (2) obj. -541.4 iterations 0
Cbc0038I Pass  54: suminf.    0.56001 (2) obj. -541.4 iterations 8
Cbc0038I Pass  55: suminf.    0.48000 (1) obj. -541.4 iterations 3
Cbc0038I Pass  56: suminf.    0.56001 (2) obj. -541.4 iterations 4
Cbc0038I Pass  57: suminf.    0.89991 (2) obj. -541.4 iterations 2
Cbc0038I Pass  58: suminf.    0.89991 (2) obj. -541.4 iterations 0
Cbc0038I Pass  59: suminf.    0.56001 (2) obj. -541.4 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 1 continuous of which 18 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -540 - took 0.02 seconds
Cbc0012I Integer solution of -538 found by DiveCoefficient after 8 iterations and 0 nodes (0.02 seconds)
Cbc0031I 5 added rows had average density of 7.2
Cbc0013I At root node, 5 cuts changed objective from -545 to -538 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 6 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -538, took 8 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -545 to -538
Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 3 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -538.00000000
Enumerated nodes:               0
Total iterations:               8
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/5b25fc93a8a54a218abb4c44a3dab31d-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/5b25fc93a8a54a218abb4c44a3dab31d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 37 COLUMNS
At line 191 RHS
At line 224 BOUNDS
At line 254 ENDATA
Problem MODEL has 32 rows, 29 columns and 74 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -60 - 0.00 seconds
Cgl0003I 0 fixed, 4 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 28 columns (28 integer (19 of which binary)) and 64 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -60 iterations 1
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -60 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -60 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -28 iterations 7
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -28 iterations 3
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -28 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -28 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 123 iterations 3
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 123 iterations 1
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 123 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 123 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 122 iterations 1
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 122 iterations 0
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 122 iterations 0
Cbc0038I Pass  15: suminf.    1.00000 (2) obj. 314 iterations 8
Cbc0038I Pass  16: suminf.    1.00000 (2) obj. 314 iterations 2
Cbc0038I Pass  17: suminf.    0.50000 (1) obj. 334 iterations 3
Cbc0038I Pass  18: suminf.    0.50000 (1) obj. 334 iterations 2
Cbc0038I Pass  19: suminf.    0.50000 (1) obj. 334 iterations 2
Cbc0038I Pass  20: suminf.    0.50000 (1) obj. 333 iterations 1
Cbc0038I Pass  21: suminf.    0.50000 (1) obj. 333 iterations 2
Cbc0038I Pass  22: suminf.    0.50000 (1) obj. 333 iterations 1
Cbc0038I Pass  23: suminf.    0.50000 (1) obj. 312 iterations 5
Cbc0038I Pass  24: suminf.    0.50000 (1) obj. 312 iterations 1
Cbc0038I Pass  25: suminf.    0.50000 (1) obj. 312 iterations 2
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. 222 iterations 10
Cbc0038I Pass  27: suminf.    0.50000 (1) obj. 222 iterations 4
Cbc0038I Pass  28: suminf.    0.50000 (1) obj. 222 iterations 2
Cbc0038I Pass  29: suminf.    0.50000 (1) obj. 222 iterations 1
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 311 iterations 10
Cbc0038I Rounding solution of -60 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -60 - took 0.00 seconds
Cbc0012I Integer solution of -58 found by DiveCoefficient after 2 iterations and 0 nodes (0.01 seconds)
Cbc0031I 2 added rows had average density of 7.5
Cbc0013I At root node, 2 cuts changed objective from -60 to -58 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -58, took 2 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -60 to -58
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -58.00000000
Enumerated nodes:               0
Total iterations:               2
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/78eea3c6e24c42e68cb7693e25271153-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/78eea3c6e24c42e68cb7693e25271153-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 211 COLUMNS
At line 1191 RHS
At line 1398 BOUNDS
At line 1578 ENDATA
Problem MODEL has 206 rows, 179 columns and 488 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -1380 - 0.00 seconds
Cgl0003I 0 fixed, 56 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 154 rows, 179 columns (179 integer (83 of which binary)) and 442 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 8 integers unsatisfied sum - 4
Cbc0038I Solution found of -1380
Cbc0038I Cleaned solution of -1380
Cbc0038I Before mini branch and bound, 137 integers at bound fixed and 14 continuous of which 48 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -1380 - took 0.00 seconds
Cbc0012I Integer solution of -1376 found by DiveCoefficient after 6 iterations and 0 nodes (0.01 seconds)
Cbc0031I 6 added rows had average density of 6.6666667
Cbc0013I At root node, 6 cuts changed objective from -1380 to -1376 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 9 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1376, took 6 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -1380 to -1376
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -1376.00000000
Enumerated nodes:               0
Total iterations:               6
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/79f264afe00f42dba0684bc1a78871a4-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/79f264afe00f42dba0684bc1a78871a4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 48 COLUMNS
At line 252 RHS
At line 296 BOUNDS
At line 335 ENDATA
Problem MODEL has 43 rows, 38 columns and 99 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -175 - 0.00 seconds
Cgl0003I 0 fixed, 13 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 37 columns (37 integer (19 of which binary)) and 86 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -160 iterations 2
Cbc0038I Solution found of -160
Cbc0038I Cleaned solution of -160
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 4 continuous of which 9 were internal integer and 0 internal continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -162.4
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.08000 (1) obj. -162.4 iterations 3
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -170 iterations 4
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -170 iterations 0
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -170 iterations 0
Cbc0038I Pass   6: suminf.    0.33000 (1) obj. -162.4 iterations 4
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -169 iterations 4
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -169 iterations 0
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -169 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -167 iterations 2
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -167 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -167 iterations 0
Cbc0038I Pass  13: suminf.    0.18000 (1) obj. -162.4 iterations 4
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -166 iterations 4
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. -166 iterations 0
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. -166 iterations 0
Cbc0038I Pass  17: suminf.    1.33995 (7) obj. -162.4 iterations 9
Cbc0038I Pass  18: suminf.    1.33995 (7) obj. -162.4 iterations 0
Cbc0038I Pass  19: suminf.    0.21333 (1) obj. -162.4 iterations 6
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. -166 iterations 5
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. -166 iterations 0
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. -166 iterations 0
Cbc0038I Pass  23: suminf.    0.18000 (1) obj. -162.4 iterations 4
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. -167 iterations 4
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -167 iterations 0
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. -167 iterations 0
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -165 iterations 2
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  30: suminf.    1.93995 (7) obj. -162.4 iterations 9
Cbc0038I Pass  31: suminf.    1.93995 (7) obj. -162.4 iterations 0
Cbc0038I Rounding solution of -170 is better than previous of -160

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 1 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -171.8
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.39333 (1) obj. -171.8 iterations 0
Cbc0038I Pass  32: suminf.    0.53998 (2) obj. -171.8 iterations 5
Cbc0038I Pass  33: suminf.    0.39333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  34: suminf.    0.42666 (1) obj. -171.8 iterations 1
Cbc0038I Pass  35: suminf.    0.42666 (1) obj. -171.8 iterations 0
Cbc0038I Pass  36: suminf.    0.72001 (2) obj. -171.8 iterations 5
Cbc0038I Pass  37: suminf.    0.42666 (1) obj. -171.8 iterations 1
Cbc0038I Pass  38: suminf.    0.61000 (2) obj. -171.8 iterations 4
Cbc0038I Pass  39: suminf.    0.49333 (1) obj. -171.8 iterations 7
Cbc0038I Pass  40: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  41: suminf.    0.52001 (2) obj. -171.8 iterations 6
Cbc0038I Pass  42: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  43: suminf.    0.49333 (1) obj. -171.8 iterations 2
Cbc0038I Pass  44: suminf.    0.49333 (1) obj. -171.8 iterations 0
Cbc0038I Pass  45: suminf.    0.52001 (2) obj. -171.8 iterations 6
Cbc0038I Pass  46: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  47: suminf.    0.70008 (2) obj. -171.8 iterations 6
Cbc0038I Pass  48: suminf.    0.52001 (2) obj. -171.8 iterations 6
Cbc0038I Pass  49: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  50: suminf.    0.52001 (2) obj. -171.8 iterations 4
Cbc0038I Pass  51: suminf.    0.70008 (2) obj. -171.8 iterations 2
Cbc0038I Pass  52: suminf.    0.52001 (2) obj. -171.8 iterations 8
Cbc0038I Pass  53: suminf.    0.49333 (1) obj. -171.8 iterations 2
Cbc0038I Pass  54: suminf.    0.52001 (2) obj. -171.8 iterations 7
Cbc0038I Pass  55: suminf.    0.62001 (2) obj. -171.8 iterations 1
Cbc0038I Pass  56: suminf.    0.46000 (1) obj. -171.8 iterations 2
Cbc0038I Pass  57: suminf.    0.62001 (2) obj. -171.8 iterations 5
Cbc0038I Pass  58: suminf.    0.70008 (2) obj. -171.8 iterations 2
Cbc0038I Pass  59: suminf.    0.52001 (2) obj. -171.8 iterations 6
Cbc0038I Pass  60: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous of which 8 were internal integer and 0 internal continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -170 - took 0.01 seconds
Cbc0012I Integer solution of -168 found by DiveCoefficient after 6 iterations and 0 nodes (0.01 seconds)
Cbc0031I 3 added rows had average density of 6
Cbc0013I At root node, 3 cuts changed objective from -175 to -168 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -168, took 6 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -175 to -168
Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -168.00000000
Enumerated nodes:               0
Total iterations:               6
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/0d1e9b42bf794b428344be26cc2fe099-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/0d1e9b42bf794b428344be26cc2fe099-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 37 COLUMNS
At line 191 RHS
At line 224 BOUNDS
At line 254 ENDATA
Problem MODEL has 32 rows, 29 columns and 74 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -130 - 0.00 seconds
Cgl0003I 0 fixed, 8 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 29 columns (29 integer (15 of which binary)) and 68 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -130 iterations 1
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -19 iterations 5
Cbc0038I Solution found of -19
Cbc0038I Cleaned solution of -19
Cbc0038I Rounding solution of -130 is better than previous of -19

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -130 - took 0.00 seconds
Cbc0012I Integer solution of -130 found by DiveCoefficient after 3 iterations and 0 nodes (0.00 seconds)
Cbc0031I 2 added rows had average density of 5.5
Cbc0013I At root node, 2 cuts changed objective from -130 to -130 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -130, took 3 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -130 to -130
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -130.00000000
Enumerated nodes:               0
Total iterations:               3
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d6cce29309324675958ec7ebaf492b2a-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/d6cce29309324675958ec7ebaf492b2a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/833c6baccb4f4a5dae3f5184d538f5f9-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/833c6baccb4f4a5dae3f5184d538f5f9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 57 COLUMNS
At line 299 RHS
At line 352 BOUNDS
At line 398 ENDATA
Problem MODEL has 52 rows, 45 columns and 118 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -250 - 0.00 seconds
Cgl0003I 0 fixed, 14 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 44 columns (44 integer (21 of which binary)) and 100 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Solution found of -250
Cbc0038I Cleaned solution of -250
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 6 continuous of which 11 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -250 - took 0.00 seconds
Cbc0012I Integer solution of -248 found by DiveCoefficient after 2 iterations and 0 nodes (0.00 seconds)
Cbc0031I 2 added rows had average density of 5
Cbc0013I At root node, 2 cuts changed objective from -250 to -248 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -248, took 2 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -250 to -248
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -248.00000000
Enumerated nodes:               0
Total iterations:               2
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/b1deda5b6dd54b1ea8d5d7ce922ed449-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/b1deda5b6dd54b1ea8d5d7ce922ed449-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/448f114225d54230a53f91104a33f7eb-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/448f114225d54230a53f91104a33f7eb-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -70 - 0.00 seconds
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 22 columns (22 integer (14 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -70
Cbc0038I Cleaned solution of -70
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -70 - took 0.00 seconds
Cbc0012I Integer solution of -70 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -70, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -70 to -70
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -70.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/827fba74bc0d4f1fb9620d96c6956e3e-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/827fba74bc0d4f1fb9620d96c6956e3e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/35c31a3e28b44d809297a2b435b89442-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/35c31a3e28b44d809297a2b435b89442-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/046a07684e6448f792b44a8e26cea94c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/046a07684e6448f792b44a8e26cea94c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/67c4cd37d77249e6baaed9b24f0d4ce2-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/67c4cd37d77249e6baaed9b24f0d4ce2-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ef54b0fcfbcd47f8a505373a88f52087-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/ef54b0fcfbcd47f8a505373a88f52087-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/3271138078ac404e8095fe43444aa01a-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/3271138078ac404e8095fe43444aa01a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/20ae83d575364a708f448d7f0e62da9c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/20ae83d575364a708f448d7f0e62da9c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/8489af11dc934b558cd4b30a4f74941e-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/8489af11dc934b558cd4b30a4f74941e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/f6a3d1d5614f46b1b87392be0a5e5893-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/f6a3d1d5614f46b1b87392be0a5e5893-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/35a127ce1e804931ad425164c2cda330-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/35a127ce1e804931ad425164c2cda330-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

dashag 1.0029487893581468
69	371	1	1	12903450.2	12904495.3	96084215.0	100848229.0	0.99	deletion	6	14	-1	2753	2754	18060	19131	heterozygous	1	17	3430.91	3430.91	5074.62	4432.59	4762968.9	0.251	NA	0.65
80	372	1	1	12903640.9	12904686.0	96084215.0	100848229.0	0.99	deletion	7	15	-1	2753	2754	18060	19131	heterozygous	1	17	3440.23	3440.23	5072.68	4432.59	4762968.9	0.279	NA	0.65
86	631	1	11	320206.0	313590.7	96084215.0	15750426.0	0.41	translocation_interchr	10	256	-1	55	54	18060	2838	heterozygous	1	18	-1.0	1293.45	71.41	-1.0	-1.0	0.189	+/+	0.55
87	631	1	11	5077052.2	5084357.7	100841506.0	15758749.0	0.68	translocation_interchr	10	259	-1	1111	1112	19129	2839	heterozygous	1	18	-1.0	1293.45	79.67	-1.0	-1.0	0.191	+/+	0.54
94	632	1	11	320206.0	313590.7	96084215.0	15750426.0	0.55	translocation_interchr	11	257	-1	55	54	18060	2838	heterozygous	1	18	-1.0	1288.95	71.41	-1.0	-1.0	0.197	+/+	0.55
95	632	1	11	5077384.3	5084689.8	100841506.0	15758749.0	0.23	translocation_interchr	11	258	-1	1110	1111	19129	2839	heterozygous	1	18	-1.0	1288.95	16.62	-1.0	-1.0	0.092	+/+	0.54
234	251	1	1	37696460.8	47848084.0	243873021.0	248943333.0	-1.0	duplication	42	44	-1	7450	8568	44034	45006	unknown	-1	-1	-1.0	10638.93	223.52	-1.0	5070312.0	0.46	NA	0.52
266	252	1	1	37696026.7	47847856.0	243873021.0	248943333.0	-1.0	duplication	43	45	-1	7449	8568	44034	45006	unknown	-1	-1	-1.0	10628.79	223.78	-1.0	5070312.0	0.421	NA	0.48
576	902	3	17	961960.0	976466.4	25747277.0	68423037.0	0.95	translocation_interchr	73	332	-1	208	209	5282	11129	heterozygous	1	128	-1.0	258.13	68.58	-1.0	-1.0	0.127	+/+	0.36
579	901	3	17	941528.0	956034.4	25747277.0	68423037.0	0.96	translocation_interchr	75	333	-1	203	204	5282	11129	heterozygous	1	128	-1.0	249.27	74.43	-1.0	-1.0	0.13	+/+	0.36
607	161	3	17	64946096.7	64951177.4	25754510.0	70463096.0	0.85	translocation_interchr	76	338	-1	13073	13074	5283	11572	heterozygous	2	128	-1.0	16564.41	66.24	-1.0	-1.0	0.138	-/-	0.43
635	162	3	17	64946843.4	64951924.1	25754510.0	70463096.0	0.94	translocation_interchr	77	336	-1	13069	13070	5283	11572	heterozygous	2	128	-1.0	16527.39	72.37	-1.0	-1.0	0.14800000000000002	-/-	0.43
637	1392	3	3	261756.9	270401.8	82385742.0	84900320.5	1.0	inversion	78	85	638	53	54	16838	17355	heterozygous	1	142	-1.0	68.34	89.17	-1.0	259197.0	0.141	NA	0.25 82126545.0 84900320.5 left
638	1392	3	-1	2545.7	-1.0	82126545.0	-1.0	1.0	inversion_partial	78	-1	637	1	-1	16783	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	259197.0	0.141	NA	0.25
640	1391	3	3	318239.2	326884.1	82430539.0	84900320.5	1.0	inversion	79	84	641	62	63	16847	17355	heterozygous	1	142	-1.0	80.34	67.85	-1.0	303994.0	0.168	NA	0.25 82126545.0 84900320.5 left
641	1391	3	-1	14237.6	-1.0	82126545.0	-1.0	1.0	inversion_partial	79	-1	640	1	-1	16783	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	303994.0	0.168	NA	0.25
642	1601	3	3	248479.8	388390.6	84822936.0	84889256.0	-1.0	duplication_inverted	80	83	-1	46	76	17339	17354	unknown	-1	-1	-1.0	79.67	17.79	-1.0	66320.0	0.095	NA	0.12
643	1602	3	3	73446.0	563892.5	84647547.0	84889256.0	-1.0	duplication_inverted	81	82	-1	9	113	17302	17354	unknown	-1	-1	-1.0	79.67	66.44	-1.0	241709.0	0.163	NA	0.24
808	461	4	4	21269541.5	21284096.1	21304673.0	31039800.0	0.6	translocation_intrachr	89	94	-1	3750	3751	3822	5879	heterozygous	1	-1	-1.0	4820.86	70.87	-1.0	-1.0	0.271	+/+	0.54
820	462	4	4	21269417.9	21283972.5	21304673.0	31039800.0	0.51	translocation_intrachr	90	95	-1	3749	3750	3822	5879	heterozygous	1	-1	-1.0	4827.41	70.87	-1.0	-1.0	0.269	+/+	0.54
1300	341	5	8	26162156.2	26157902.8	174376029.0	116832102.0	0.36	translocation_interchr	119	178	-1	5349	5348	36341	23679	heterozygous	1	318	-1.0	1509.57	2783.25	-1.0	-1.0	0.146	+/+	0.4
1227	11	5	8	103227012.0	103232367.7	174369971.5	116835655.0	0.12	translocation_interchr	109	187	-1	21778	21779	36340	23680	heterozygous	1	318	-1.0	27184.33	6752.01	-1.0	-1.0	0.151	+/+	0.46
1300	341	5	8	26162156.2	26157902.8	174376029.0	116832102.0	0.36	translocation_interchr	119	178	-1	5349	5348	36341	23679	heterozygous	1	318	-1.0	1509.57	2783.25	-1.0	-1.0	0.146	+/+	0.4
1292	12	5	8	103228946.0	103234301.8	174369971.5	116835655.0	0.23	translocation_interchr	110	188	-1	21786	21787	36340	23680	heterozygous	1	318	-1.0	27203.83	6739.09	-1.0	-1.0	0.16699999999999998	+/+	0.46
1293	1421	5	5	320923.7	333653.1	128037171.0	135951612.0	0.2	translocation_intrachr	111	113	-1	66	67	26772	28300	heterozygous	1	319	-1.0	85.15	58.16	-1.0	-1.0	0.17600000000000002	-/-	0.35
1294	1422	5	5	321146.5	333875.8	128037171.0	135951612.0	0.82	translocation_intrachr	112	114	-1	66	67	26772	28300	heterozygous	1	319	-1.0	84.75	58.16	-1.0	-1.0	0.14	-/-	0.35
1297	1550	5	8	311342.8	311342.8	171227591.5	111577190.0	0.91	translocation_interchr	116	183	-1	60	60	35777	22515	heterozygous	1	320	-1.0	73.56	77.48	-1.0	-1.0	0.299	-/-	0.38
1295	1560	5	8	294570.6	294570.6	171227591.5	111577190.0	0.59	translocation_interchr	115	184	-1	67	67	35777	22515	heterozygous	1	320	-1.0	77.72	84.81	-1.0	-1.0	0.247	-/-	0.35
1295	1560	5	8	294570.6	294570.6	171227591.5	111577190.0	0.59	translocation_interchr	115	184	-1	67	67	35777	22515	heterozygous	1	320	-1.0	77.72	84.81	-1.0	-1.0	0.247	-/-	0.35
1297	1550	5	8	311342.8	311342.8	171227591.5	111577190.0	0.91	translocation_interchr	116	183	-1	60	60	35777	22515	heterozygous	1	320	-1.0	73.56	77.48	-1.0	-1.0	0.299	-/-	0.38
1227	11	5	8	103227012.0	103232367.7	174369971.5	116835655.0	0.12	translocation_interchr	109	187	-1	21778	21779	36340	23680	heterozygous	1	318	-1.0	27184.33	6752.01	-1.0	-1.0	0.151	+/+	0.46
1300	341	5	8	26162156.2	26157902.8	174376029.0	116832102.0	0.36	translocation_interchr	119	178	-1	5349	5348	36341	23679	heterozygous	1	318	-1.0	1509.57	2783.25	-1.0	-1.0	0.146	+/+	0.4
1227	11	5	8	103227012.0	103232367.7	174369971.5	116835655.0	0.12	translocation_interchr	109	187	-1	21778	21779	36340	23680	heterozygous	1	318	-1.0	27184.33	6752.01	-1.0	-1.0	0.151	+/+	0.46
1305	342	5	8	26394258.9	26390005.5	174376029.0	116832102.0	0.55	translocation_interchr	120	179	-1	5386	5385	36341	23679	heterozygous	1	318	-1.0	1508.01	2784.58	-1.0	-1.0	0.099	+/+	0.4
1309	622	6	6	305524.6	316493.0	5618458.0	9295577.0	0.99	inversion	123	132	1310	60	62	1021	1775	heterozygous	1	324	-1.0	1300.13	76.05	-1.0	300232.0	0.259	NA	0.29 5618458.0 9595809.0 right
1310	622	6	-1	5276.8	-1.0	9595809.0	-1.0	0.99	inversion_partial	132	-1	1309	2	-1	1835	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	300232.0	0.259	NA	0.29
1318	621	6	6	302646.7	313615.2	5618458.0	9295577.0	0.99	inversion	124	131	1319	59	61	1021	1775	heterozygous	1	324	-1.0	1299.73	77.73	-1.0	300232.0	0.262	NA	0.29 5618458.0 9595809.0 right
1319	621	6	-1	2399.0	-1.0	9595809.0	-1.0	0.99	inversion_partial	131	-1	1318	1	-1	1835	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	300232.0	0.262	NA	0.29
1321	1020	6	6	549243.1	1048507.9	5626532.0	5874690.0	-1.0	duplication_inverted	127	128	-1	117	209	1024	1070	unknown	-1	-1	-1.0	59.26	212.89	-1.0	248158.0	0.162	NA	0.17
1600	1411	7	7	320834.3	325601.7	47115030.0	52904794.5	0.44	translocation_intrachr	142	144	-1	55	56	9408	10537	heterozygous	1	384	-1.0	73.62	80.28	-1.0	-1.0	0.194	-/-	0.38
1601	1412	7	7	315793.2	320560.7	47115030.0	52904794.5	0.31	translocation_intrachr	143	145	-1	55	56	9408	10537	heterozygous	1	384	-1.0	72.52	70.87	-1.0	-1.0	0.161	-/-	0.38
1807	131	8	8	-62374104.5	103002750.2	23670909.0	106366363.0	-1.0	duplication_split	168	175	-1	0	16771	4486	21377	unknown	-1	-1	-1.0	5063.55	15634.34	-1.0	82695454.0	0.264	NA	0.35
1778	342	8	8	15925738.7	15940359.2	23665920.0	106378858.0	0.62	translocation_intrachr	165	179	-1	3120	3121	4485	21378	heterozygous	1	431	-1.0	3974.84	2784.58	-1.0	-1.0	0.115	+/+	0.56
1807	131	8	8	-62374104.5	103002750.2	23670909.0	106366363.0	-1.0	duplication_split	168	175	-1	0	16771	4486	21377	unknown	-1	-1	-1.0	5063.55	15634.34	-1.0	82695454.0	0.264	NA	0.35
1790	341	8	8	15692941.1	15707561.7	23665920.0	106378858.0	0.57	translocation_intrachr	166	178	-1	3080	3081	4485	21378	heterozygous	1	431	-1.0	3920.91	2783.25	-1.0	-1.0	0.109	+/+	0.56
1823	1480	8	8	308709.3	310797.3	26477885.0	109531546.0	0.25	translocation_intrachr	172	180	-1	59	60	5047	22052	heterozygous	1	437	-1.0	78.67	69.24	-1.0	-1.0	0.215	-/-	0.38
1821	1431	8	8	307541.7	321337.5	26470982.0	109540516.0	0.24	translocation_intrachr	170	181	-1	49	50	5046	22053	heterozygous	1	437	-1.0	61.27	75.83	-1.0	-1.0	0.225	+/+	0.54
1823	1480	8	8	308709.3	310797.3	26477885.0	109531546.0	0.25	translocation_intrachr	172	180	-1	59	60	5047	22052	heterozygous	1	437	-1.0	78.67	69.24	-1.0	-1.0	0.215	-/-	0.38
1822	1432	8	8	227222.0	241017.8	26470982.0	109540516.0	0.12	translocation_intrachr	171	182	-1	42	43	5046	22053	heterozygous	1	437	-1.0	49.07	75.83	-1.0	-1.0	0.196	+/+	0.54
1821	1431	8	8	307541.7	321337.5	26470982.0	109540516.0	0.24	translocation_intrachr	170	181	-1	49	50	5046	22053	heterozygous	1	437	-1.0	61.27	75.83	-1.0	-1.0	0.225	+/+	0.54
1823	1480	8	8	308709.3	310797.3	26477885.0	109531546.0	0.25	translocation_intrachr	172	180	-1	59	60	5047	22052	heterozygous	1	437	-1.0	78.67	69.24	-1.0	-1.0	0.215	-/-	0.38
1824	1500	8	8	-2401539.5	3022078.2	33269682.0	35975337.0	-1.0	duplication_split	173	174	-1	0	115	6458	7042	unknown	-1	-1	-1.0	82.96	67.77	-1.0	2705655.0	0.252	NA	0.22
2120	1570	10	10	17523.2	513481.9	29794.0	258194.0	-1.0	duplication_inverted	238	241	-1	1	106	4	58	unknown	-1	-1	-1.0	80.39	66.12	-1.0	228400.0	0.28	NA	0.14
2259	1750	10	10	189495.1	189495.1	46991592.0	47875621.0	0.95	inversion	250	252	2260	31	31	8849	9000	heterozygous	1	-1	-1.0	76.09	72.91	-1.0	184646.0	0.14400000000000002	NA	0.16 46991592.0 48060267.0 right
2260	1750	10	-1	4912.2	-1.0	48060267.0	-1.0	0.95	inversion_partial	252	-1	2259	1	-1	9033	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	184646.0	0.14400000000000002	NA	0.16
2559	601	13	13	294573.4	298557.7	25159928.0	27500839.0	0.99	deletion	273	278	-1	67	68	1337	1816	heterozygous	1	601	86.59	1626.73	86.59	4417.37	2336926.8	0.222	NA	0.42
2559	601	13	13	294573.4	298557.7	25159928.0	27500839.0	0.99	deletion	273	278	-1	67	68	1337	1816	heterozygous	1	601	86.59	1626.73	86.59	4417.37	2336926.8	0.222	NA	0.42
2563	602	13	13	286844.4	290828.6	25159928.0	27500839.0	0.99	deletion	274	277	-1	66	67	1337	1816	heterozygous	1	601	86.08	1632.59	86.08	4417.37	2336926.8	0.197	NA	0.42
2563	602	13	13	286844.4	290828.6	25159928.0	27500839.0	0.99	deletion	274	277	-1	66	67	1337	1816	heterozygous	1	601	86.08	1632.59	86.08	4417.37	2336926.8	0.197	NA	0.42
2807	931	15	15	259077.7	449998.9	19993629.0	21190899.0	0.01	deletion	285	290	-1	24	48	32	218	heterozygous	1	657	0.01	69.61	206.38	-1.0	1006348.8	0.214	NA	0.4
2808	932	15	15	268820.9	459742.1	19993629.0	21190899.0	0.01	deletion	286	289	-1	24	48	32	218	heterozygous	1	657	0.01	69.44	185.0	-1.0	1006348.8	0.171	NA	0.4
3002	1450	17	17	-1078206.4	1651079.6	14209213.0	15565794.0	-1.0	duplication_split	323	324	-1	0	104	2237	2507	unknown	-1	-1	-1.0	65.88	75.43	-1.0	1356581.0	0.273	NA	0.33
3011	262	17	17	22027749.5	22228908.3	46284336.0	46702870.0	0.01	deletion	326	330	-1	4129	4163	6912	6986	heterozygous	1	695	0.01	4312.07	5321.62	-1.0	217375.2	0.267	NA	0.3
3055	1400	17	17	313918.0	321868.0	68410006.0	70470367.0	0.99	deletion	331	340	-1	51	52	11128	11573	heterozygous	2	701	69.25	69.25	87.08	4398.24	2052411.1	0.248	NA	0.37
0 1 14454.0 2 H [1]
1 1 96084215.0 2 T [0, 2]
2 1 96084216.0 2 H [1, 3, 109]
3 1 100841506.0 2 T [2, 4, 110]
4 1 100841507.0 2 H [3, 5]
5 1 243861133.0 2 T [4, 6]
6 1 243861134.0 3 H [5, 7]
7 1 248943333.0 3 T [6]
8 2 0 2 H [9]
9 2 242181357 2 T [8]
10 3 12920.0 2 H [11]
11 3 25750893.5 2 T [132, 10, 12]
12 3 25750894.5 2 H [11, 13, 133]
13 3 82126545.0 2 T [12, 14]
14 3 82126546.0 2 H [20, 13, 15]
15 3 82350952.0 2 T [16, 14]
16 3 82350953.0 3 H [17, 15]
17 3 84799609.0 3 T [16, 17, 18]
18 3 84799610.0 2 H [17, 19]
19 3 84900320.5 2 T [18, 20]
20 3 84900321.5 2 H [19, 21, 14]
21 3 198230595.0 2 T [20]
22 4 12986 2 H [23]
23 4 21200985.0 2 T [24, 22]
24 4 21200986.0 1 H [25, 23]
25 4 21304673.0 1 T [24, 26, 28]
26 4 21304674.0 1 H [25, 27]
27 4 31028432.0 1 T [26, 28]
28 4 31034116.5 2 H [25, 27, 29]
29 4 190202563.0 2 T [28]
30 5 19315 2 H [31]
31 5 288114.0 2 T [32, 30]
32 5 288115.0 3 H [33, 31]
33 5 46400789.0 3 T [32, 34]
34 5 46400790 2 H [33, 35]
35 5 49709238.0 2 T [34, 36]
36 5 49709239.0 3 H [35, 37]
37 5 70223363.0 3 T [36, 38]
38 5 70223364 2 H [37, 39]
39 5 71035564.0 2 T [40, 38]
40 5 71035565.0 3 H [41, 39]
41 5 88767832.0 3 T [40, 42]
42 5 88772388.0 3 H [41, 43]
43 5 97162715.0 3 T [42, 44]
44 5 97165388.0 3 H [43, 45]
45 5 128026170.0 3 T [44, 46]
46 5 128036247.5 4 H [49, 45, 47]
47 5 135592864.0 4 T [48, 46]
48 5 135594304.0 3 H [49, 47]
49 5 135951612.0 3 T [48, 50, 46]
50 5 135951613.0 3 H [49, 51]
51 5 171227591.5 3 T [50, 52, 90]
52 5 171227592.5 3 H [89, 51, 53]
53 5 174373000.25 3 T [52, 54, 92]
54 5 174373001.25 3 H [91, 53, 55]
55 5 181301991.0 3 T [56, 54]
56 5 181301992 2 H [57, 55]
57 5 181472713 2 T [56]
58 6 76217.0 2 H [59]
59 6 5618458.0 2 T [65, 58, 60]
60 6 5618459.0 2 H [59, 61]
61 6 5729123.0 2 T [60, 62]
62 6 5729124.0 3 H [61, 62, 63]
63 6 9480104.0 3 T [64, 62]
64 6 9480105.0 2 H [65, 63]
65 6 9595809.0 2 T [64, 66, 59]
66 6 9595810.0 2 H [65, 67]
67 6 170739896.0 2 T [66]
68 7 10488.0 2 H [69]
69 7 47129223.5 2 T [68, 70]
70 7 47143418.0 3 H [73, 69, 71]
71 7 52831827.0 3 T [72, 70]
72 7 52831828.0 2 H [73, 71]
73 7 52904794.5 2 T [72, 74, 70]
74 7 52904795.5 2 H [73, 75]
75 7 159334983.0 2 T [74]
76 8 61806.0 2 H [77]
77 8 23668414.5 2 T [86, 76, 78]
78 8 23668415.5 2 H [85, 77, 79]
79 8 26474433.5 2 T [80, 88, 78]
80 8 26474434.5 2 H [81, 87, 79]
81 8 33263481.0 2 T [80, 82]
82 8 33263482.0 3 H [81, 83]
83 8 35964948.0 3 T [82, 84]
84 8 35964949.0 2 H [83, 85]
85 8 106372610.5 2 T [78, 84, 86]
86 8 106372611.5 2 H [77, 85, 87]
87 8 109536031.0 2 T [88, 80, 86]
88 8 109536032.0 2 H [89, 79, 87]
89 8 111577190.0 2 T [88, 90, 52]
90 8 111577191.0 2 H [89, 91, 51]
91 8 116833878.5 2 T [90, 92, 54]
92 8 116833879.5 2 H [53, 91, 93]
93 8 145076124.0 2 T [92]
94 9 0 2 H [95]
95 9 138334464 2 T [94]
96 10 18515 2 H [96, 97]
97 10 319989.0 2 T [96, 98]
98 10 319990.0 4 H [97, 99]
99 10 2991118.0 4 T [98, 100]
100 10 2992899.0 3 H [99, 101]
101 10 6332955.0 3 T [100, 102]
102 10 6332956.0 2 H [101, 103]
103 10 46991592.0 2 T [104, 105, 102]
104 10 46991593.0 2 H [105, 103]
105 10 48060267.0 2 T [104, 106, 103]
106 10 48060268.0 2 H [105, 107]
107 10 133785265.0 2 T [106]
108 11 0.0 2 H [109]
109 11 15754587.5 2 T [2, 108, 110]
110 11 15754588.5 2 H [3, 109, 111]
111 11 135069565.0 2 T [110]
112 12 0 2 H [113]
113 12 133263960 2 T [112]
114 13 16004726 2 H [115]
115 13 25093785.0 2 T [114, 116, 118]
116 13 25093786.0 1 H [115, 117]
117 13 27502514.0 1 T [116, 118]
118 13 27502515 2 H [115, 117, 119]
119 13 114352101 2 T [118]
120 14 0 2 H [121]
121 14 106873282 2 T [120]
122 15 0 2 H [123]
123 15 101976509 2 T [122]
124 16 0 2 H [125]
125 16 90224751 2 T [124]
126 17 66654 2 H [127]
127 17 14194343.0 2 T [128, 126]
128 17 14194344.0 3 H [129, 127]
129 17 15506777.0 3 T [128, 130]
130 17 15506778.0 2 H [129, 131]
131 17 68423037.0 2 T [130, 132]
132 17 68423038.0 2 H [11, 131, 133]
133 17 70463096.0 2 T [132, 12, 134]
134 17 70463097.0 2 H [133, 135]
135 17 83246391.0 2 T [134]
136 18 0 2 H [137]
137 18 80256374 2 T [136]
138 19 0 2 H [139]
139 19 58605715 2 T [138]
140 20 0 2 H [141]
141 20 64333718 2 T [140]
142 21 0 2 H [143]
143 21 46697230 2 T [142]
144 22 0 2 H [145]
145 22 50805587 2 T [144]
146 23 0 1 H [147]
147 23 156025612 1 T [146]
148 24 0 1 H [149]
149 24 57212132 1 T [148]
Siavash
[(1, 0, 2, 'S'), (1, 2, 0, 'R'), (3, 2, 2, 'S'), (3, 4, 0, 'R'), (4, 5, 2, 'S'), (5, 6, 0, 'R'), (6, 7, 3, 'S'), (8, 9, 2, 'S'), (11, 10, 2, 'S'), (11, 12, 0, 'R'), (13, 12, 2, 'S'), (13, 14, 0, 'R'), (14, 15, 2, 'S'), (15, 16, 0, 'R'), (16, 17, 3, 'S'), (17, 18, 0, 'R'), (19, 18, 2, 'S'), (19, 20, 0, 'R'), (20, 21, 2, 'S'), (22, 23, 2, 'S'), (23, 24, 0, 'R'), (25, 24, 1, 'S'), (25, 26, 0, 'R'), (26, 27, 1, 'S'), (27, 28, 0, 'R'), (28, 29, 2, 'S'), (30, 31, 2, 'S'), (31, 32, 0, 'R'), (32, 33, 3, 'S'), (33, 34, 0, 'R'), (34, 35, 2, 'S'), (35, 36, 0, 'R'), (36, 37, 3, 'S'), (37, 38, 0, 'R'), (38, 39, 2, 'S'), (39, 40, 0, 'R'), (40, 41, 3, 'S'), (41, 42, 0, 'R'), (42, 43, 3, 'S'), (43, 44, 0, 'R'), (44, 45, 3, 'S'), (45, 46, 0, 'R'), (46, 47, 4, 'S'), (47, 48, 0, 'R'), (49, 48, 3, 'S'), (49, 50, 0, 'R'), (51, 50, 3, 'S'), (51, 52, 0, 'R'), (53, 52, 3, 'S'), (53, 54, 0, 'R'), (54, 55, 3, 'S'), (55, 56, 0, 'R'), (56, 57, 2, 'S'), (59, 58, 2, 'S'), (59, 60, 0, 'R'), (60, 61, 2, 'S'), (61, 62, 0, 'R'), (62, 63, 3, 'S'), (63, 64, 0, 'R'), (65, 64, 2, 'S'), (65, 66, 0, 'R'), (66, 67, 2, 'S'), (68, 69, 2, 'S'), (69, 70, 0, 'R'), (70, 71, 3, 'S'), (71, 72, 0, 'R'), (73, 72, 2, 'S'), (73, 74, 0, 'R'), (74, 75, 2, 'S'), (77, 76, 2, 'S'), (77, 78, 0, 'R'), (79, 78, 2, 'S'), (79, 80, 0, 'R'), (80, 81, 2, 'S'), (81, 82, 0, 'R'), (82, 83, 3, 'S'), (83, 84, 0, 'R'), (85, 84, 2, 'S'), (85, 86, 0, 'R'), (87, 86, 2, 'S'), (87, 88, 0, 'R'), (89, 88, 2, 'S'), (89, 90, 0, 'R'), (91, 90, 2, 'S'), (91, 92, 0, 'R'), (92, 93, 2, 'S'), (94, 95, 2, 'S'), (96, 97, 2, 'S'), (97, 98, 0, 'R'), (98, 99, 4, 'S'), (99, 100, 0, 'R'), (100, 101, 3, 'S'), (101, 102, 0, 'R'), (103, 102, 2, 'S'), (103, 104, 0, 'R'), (105, 104, 2, 'S'), (105, 106, 0, 'R'), (106, 107, 2, 'S'), (109, 108, 2, 'S'), (109, 110, 0, 'R'), (110, 111, 2, 'S'), (112, 113, 2, 'S'), (114, 115, 2, 'S'), (115, 116, 0, 'R'), (116, 117, 1, 'S'), (117, 118, 0, 'R'), (118, 119, 2, 'S'), (120, 121, 2, 'S'), (122, 123, 2, 'S'), (124, 125, 2, 'S'), (126, 127, 2, 'S'), (127, 128, 0, 'R'), (128, 129, 3, 'S'), (129, 130, 0, 'R'), (131, 130, 2, 'S'), (131, 132, 0, 'R'), (133, 132, 2, 'S'), (133, 134, 0, 'R'), (134, 135, 2, 'S'), (136, 137, 2, 'S'), (138, 139, 2, 'S'), (140, 141, 2, 'S'), (142, 143, 2, 'S'), (144, 145, 2, 'S'), (146, 147, 1, 'S'), (148, 149, 1, 'S'), (2, 109, 0, 'SV'), (3, 110, 0, 'SV'), (6, 7, 0, 'SV'), (11, 132, 0, 'SV'), (12, 133, 0, 'SV'), (14, 20, 0, 'SV'), (17, 17, 0, 'SV'), (25, 28, 0, 'SV'), (53, 92, 0, 'SV'), (54, 91, 0, 'SV'), (46, 49, 0, 'SV'), (51, 90, 0, 'SV'), (52, 89, 0, 'SV'), (59, 65, 0, 'SV'), (62, 62, 0, 'SV'), (70, 73, 0, 'SV'), (77, 86, 0, 'SV'), (78, 85, 0, 'SV'), (79, 88, 0, 'SV'), (80, 87, 0, 'SV'), (82, 83, 0, 'SV'), (96, 96, 0, 'SV'), (103, 105, 0, 'SV'), (115, 118, 0, 'SV'), (128, 129, 0, 'SV')]
Siavash [(1, 0, 2, 'S'), (1, 2, 0, 'R'), (3, 2, 2, 'S'), (2, 109, 0, 'SV'), (3, 4, 0, 'R'), (3, 110, 0, 'SV'), (4, 5, 2, 'S'), (5, 6, 0, 'R'), (6, 7, 3, 'S'), (6, 7, 0, 'SV'), (109, 110, 0, 'R'), (110, 111, 2, 'S'), (109, 108, 2, 'S')]
Y0 (1, 0, 2, 'S')
X1 (1, 2, 0, 'R')
Y2 (3, 2, 2, 'S')
X3 (2, 109, 0, 'SV')
X4 (3, 4, 0, 'R')
X5 (3, 110, 0, 'SV')
Y6 (4, 5, 2, 'S')
X7 (5, 6, 0, 'R')
Y8 (6, 7, 3, 'S')
X9 (6, 7, 0, 'SV')
X10 (109, 110, 0, 'R')
Y11 (110, 111, 2, 'S')
Y12 (109, 108, 2, 'S')
A0 A0
B0 B0
A1 A1
B1 B1
A2 A2
B2 B2
A3 A3
B3 B3
A4 A4
B4 B4
A5 A5
B5 B5
A6 A6
B6 B6
A7 A7
B7 B7
A110 A110
B110 B110
A109 A109
B109 B109
A108 A108
B108 B108
A111 A111
B111 B111
obj -2*X1 - 2*X10 - 2*X3 - 2*X4 - 2*X5 - 2*X7 - 2*X9 - 2*Y0 - 2*Y11 - 2*Y12 - 2*Y2 - 2*Y6 - 2*Y8 + 26
Sv_sum 8*T3 + 8*T5 + T9
CN_tune 80*Z0 + 96*Z11 + 16*Z12 + 2*Z2 + 58*Z6 + 12*Z8
obj B0 + B1 + B108 + B109 + B110 + B111 + B2 + B3 + B4 + B5 + B6 + B7 - 80*T3 - 80*T5 - 10*T9 - 20*X1 - 20*X10 - 20*X3 - 20*X4 - 20*X5 - 20*X7 - 20*X9 - 20*Y0 - 20*Y11 - 20*Y12 - 20*Y2 - 20*Y6 - 20*Y8 + 800*Z0 + 960*Z11 + 160*Z12 + 20*Z2 + 580*Z6 + 120*Z8 + 260
Problem:
MINIMIZE
1*B0 + 1*B1 + 1*B108 + 1*B109 + 1*B110 + 1*B111 + 1*B2 + 1*B3 + 1*B4 + 1*B5 + 1*B6 + 1*B7 + -80*T3 + -80*T5 + -10*T9 + -20*X1 + -20*X10 + -20*X3 + -20*X4 + -20*X5 + -20*X7 + -20*X9 + -20*Y0 + -20*Y11 + -20*Y12 + -20*Y2 + -20*Y6 + -20*Y8 + 800*Z0 + 960*Z11 + 160*Z12 + 20*Z2 + 580*Z6 + 120*Z8 + 260
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: - 10 T5 + X5 <= 0

_C13: - T5 + X5 >= 0

_C14: X5 >= 0

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: X7 >= 1

_C19: Y8 + Z8 >= 0

_C20: - Y8 + Z8 >= 0

_C21: Z8 <= 1

_C22: - 10 T9 + X9 <= 0

_C23: - T9 + X9 >= 0

_C24: X9 >= 0

_C25: X10 >= 1

_C26: Y11 + Z11 >= 0

_C27: - Y11 + Z11 >= 0

_C28: Z11 <= 1

_C29: Y12 + Z12 >= 0

_C30: - Y12 + Z12 >= 0

_C31: Z12 <= 1

_C32: - 2 A0 - B0 - Y0 = -2

_C33: X1 + Y0 <= 2

_C34: - 2 A1 - B1 + X1 + Y0 = -2

_C35: X1 + X3 + Y2 <= 2

_C36: - 2 A2 - B2 + X1 + X3 + Y2 = -2

_C37: X4 + X5 + Y2 <= 2

_C38: - 2 A3 - B3 + X4 + X5 + Y2 = -2

_C39: X4 + Y6 <= 2

_C40: - 2 A4 - B4 + X4 + Y6 = -2

_C41: X7 + Y6 <= 2

_C42: - 2 A5 - B5 + X7 + Y6 = -2

_C43: X7 + X9 + Y8 <= 3

_C44: - 2 A6 - B6 + X7 + X9 + Y8 = -3

_C45: X9 + Y8 <= 3

_C46: - 2 A7 - B7 + X9 + Y8 = -3

_C47: X10 + X5 + Y11 <= 2

_C48: - 2 A110 - B110 + X10 + X5 + Y11 = -2

_C49: X10 + X3 + Y12 <= 2

_C50: - 2 A109 - B109 + X10 + X3 + Y12 = -2

_C51: - 2 A108 - B108 - Y12 = -2

_C52: - 2 A111 - B111 - Y11 = -2

VARIABLES
0 <= A0 Integer
0 <= A1 Integer
0 <= A108 Integer
0 <= A109 Integer
0 <= A110 Integer
0 <= A111 Integer
0 <= A2 Integer
0 <= A3 Integer
0 <= A4 Integer
0 <= A5 Integer
0 <= A6 Integer
0 <= A7 Integer
0 <= B0 <= 1 Integer
0 <= B1 <= 1 Integer
0 <= B108 <= 1 Integer
0 <= B109 <= 1 Integer
0 <= B110 <= 1 Integer
0 <= B111 <= 1 Integer
0 <= B2 <= 1 Integer
0 <= B3 <= 1 Integer
0 <= B4 <= 1 Integer
0 <= B5 <= 1 Integer
0 <= B6 <= 1 Integer
0 <= B7 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= T5 <= 1 Integer
0 <= T9 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X3 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X7 Integer
0 <= X9 Integer
Y0 free Integer
Y11 free Integer
Y12 free Integer
Y2 free Integer
Y6 free Integer
Y8 free Integer
Z0 free Integer
Z11 free Integer
Z12 free Integer
Z2 free Integer
Z6 free Integer
Z8 free Integer

Optimal
[A0, A1, A108, A109, A110, A111, A2, A3, A4, A5, A6, A7, B0, B1, B108, B109, B110, B111, B2, B3, B4, B5, B6, B7, T3, T5, T9, X1, X10, X3, X4, X5, X7, X9, Y0, Y11, Y12, Y2, Y6, Y8, Z0, Z11, Z12, Z2, Z6, Z8]
1 2 2.0 R
109 110 1.0 R
2 109 1.0 SV
3 4 2.0 R
3 110 1.0 SV
5 6 2.0 R
6 7 1.0 SV
A0 = 1.0
A1 = 2.0
A108 = 1.0
A109 = 2.0
A110 = 2.0
A111 = 1.0
A2 = 2.0
A3 = 2.0
A4 = 2.0
A5 = 2.0
A6 = 3.0
A7 = 2.0
B0 = 0.0
B1 = 0.0
B108 = 0.0
B109 = 0.0
B110 = 0.0
B111 = 0.0
B2 = 0.0
B3 = 0.0
B4 = 0.0
B5 = 0.0
B6 = 0.0
B7 = 0.0
T3 = 1.0
T5 = 1.0
T9 = 1.0
X1 = 2.0
X10 = 1.0
X3 = 1.0
X4 = 2.0
X5 = 1.0
X7 = 2.0
X9 = 1.0
Y0 = 0.0
Y11 = 0.0
Y12 = 0.0
Y2 = -1.0
Y6 = 0.0
Y8 = 0.0
Z0 = 0.0
Z11 = 0.0
Z12 = 0.0
Z2 = 1.0
Z6 = 0.0
Z8 = 0.0
-70.0 Objective Answer
Siavash [(8, 9, 2, 'S')]
Y0 (8, 9, 2, 'S')
A8 A8
B8 B8
A9 A9
B9 B9
obj -2*Y0 + 4
Sv_sum 0
CN_tune 294*Z0
obj B8 + B9 - 20*Y0 + 2940*Z0 + 40
Problem:
MINIMIZE
1*B8 + 1*B9 + -20*Y0 + 2940*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A8 - B8 - Y0 = -2

_C5: - 2 A9 - B9 - Y0 = -2

VARIABLES
0 <= A8 Integer
0 <= A9 Integer
0 <= B8 <= 1 Integer
0 <= B9 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A8, A9, B8, B9, Y0, Z0]
A8 = 1.0
A9 = 1.0
B8 = 0.0
B9 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(11, 10, 2, 'S'), (11, 132, 0, 'SV'), (11, 12, 0, 'R'), (131, 132, 0, 'R'), (133, 132, 2, 'S'), (131, 130, 2, 'S'), (129, 130, 0, 'R'), (128, 129, 3, 'S'), (128, 129, 0, 'SV'), (127, 128, 0, 'R'), (126, 127, 2, 'S'), (12, 133, 0, 'SV'), (133, 134, 0, 'R'), (13, 12, 2, 'S'), (13, 14, 0, 'R'), (14, 20, 0, 'SV'), (14, 15, 2, 'S'), (19, 20, 0, 'R'), (20, 21, 2, 'S'), (19, 18, 2, 'S'), (17, 18, 0, 'R'), (16, 17, 3, 'S'), (15, 16, 0, 'R'), (134, 135, 2, 'S'), (17, 17, 0, 'SV')]
Y0 (11, 10, 2, 'S')
X1 (11, 132, 0, 'SV')
X2 (11, 12, 0, 'R')
X3 (131, 132, 0, 'R')
Y4 (133, 132, 2, 'S')
Y5 (131, 130, 2, 'S')
X6 (129, 130, 0, 'R')
Y7 (128, 129, 3, 'S')
X8 (128, 129, 0, 'SV')
X9 (127, 128, 0, 'R')
Y10 (126, 127, 2, 'S')
X11 (12, 133, 0, 'SV')
X12 (133, 134, 0, 'R')
Y13 (13, 12, 2, 'S')
X14 (13, 14, 0, 'R')
X15 (14, 20, 0, 'SV')
Y16 (14, 15, 2, 'S')
X17 (19, 20, 0, 'R')
Y18 (20, 21, 2, 'S')
Y19 (19, 18, 2, 'S')
X20 (17, 18, 0, 'R')
Y21 (16, 17, 3, 'S')
X22 (15, 16, 0, 'R')
Y23 (134, 135, 2, 'S')
X24 (17, 17, 0, 'SV')
A10 A10
B10 B10
A11 A11
B11 B11
A132 A132
B132 B132
A131 A131
B131 B131
A130 A130
B130 B130
A129 A129
B129 B129
A128 A128
B128 B128
A127 A127
B127 B127
A126 A126
B126 B126
A133 A133
B133 B133
A12 A12
B12 B12
A13 A13
B13 B13
A14 A14
B14 B14
A20 A20
B20 B20
A19 A19
B19 B19
A18 A18
B18 B18
A17 A17
B17 B17
A16 A16
B16 B16
A15 A15
B15 B15
A21 A21
B21 B21
A134 A134
B134 B134
A135 A135
B135 B135
obj -2*X1 - 2*X11 - 2*X12 - 2*X14 - 2*X15 - 2*X17 - 2*X2 - 2*X20 - 2*X22 - 2*X24 - 2*X3 - 2*X6 - 2*X8 - 2*X9 - 2*Y0 - 2*Y10 - 2*Y13 - 2*Y16 - 2*Y18 - 2*Y19 - 2*Y21 - 2*Y23 - 2*Y4 - 2*Y5 - 2*Y7 + 48
Sv_sum 8*T1 + 8*T11 + T15 + T24 + T8
CN_tune 24*Z0 + 12*Z10 + 24*Z13 + 2*Z16 + 92*Z18 + 2*Z19 + 6*Z21 + 12*Z23 + 2*Z4 + 22*Z5 + 6*Z7
obj B10 + B11 + B12 + B126 + B127 + B128 + B129 + B13 + B130 + B131 + B132 + B133 + B134 + B135 + B14 + B15 + B16 + B17 + B18 + B19 + B20 + B21 - 80*T1 - 80*T11 - 10*T15 - 10*T24 - 10*T8 - 20*X1 - 20*X11 - 20*X12 - 20*X14 - 20*X15 - 20*X17 - 20*X2 - 20*X20 - 20*X22 - 20*X24 - 20*X3 - 20*X6 - 20*X8 - 20*X9 - 20*Y0 - 20*Y10 - 20*Y13 - 20*Y16 - 20*Y18 - 20*Y19 - 20*Y21 - 20*Y23 - 20*Y4 - 20*Y5 - 20*Y7 + 240*Z0 + 120*Z10 + 240*Z13 + 20*Z16 + 920*Z18 + 20*Z19 + 60*Z21 + 120*Z23 + 20*Z4 + 220*Z5 + 60*Z7 + 480
Problem:
MINIMIZE
1*B10 + 1*B11 + 1*B12 + 1*B126 + 1*B127 + 1*B128 + 1*B129 + 1*B13 + 1*B130 + 1*B131 + 1*B132 + 1*B133 + 1*B134 + 1*B135 + 1*B14 + 1*B15 + 1*B16 + 1*B17 + 1*B18 + 1*B19 + 1*B20 + 1*B21 + -80*T1 + -80*T11 + -10*T15 + -10*T24 + -10*T8 + -20*X1 + -20*X11 + -20*X12 + -20*X14 + -20*X15 + -20*X17 + -20*X2 + -20*X20 + -20*X22 + -20*X24 + -20*X3 + -20*X6 + -20*X8 + -20*X9 + -20*Y0 + -20*Y10 + -20*Y13 + -20*Y16 + -20*Y18 + -20*Y19 + -20*Y21 + -20*Y23 + -20*Y4 + -20*Y5 + -20*Y7 + 240*Z0 + 120*Z10 + 240*Z13 + 20*Z16 + 920*Z18 + 20*Z19 + 60*Z21 + 120*Z23 + 20*Z4 + 220*Z5 + 60*Z7 + 480
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 10 T1 + X1 <= 0

_C5: - T1 + X1 >= 0

_C6: X1 >= 0

_C7: X2 >= 1

_C8: X3 >= 1

_C9: Y4 + Z4 >= 0

_C10: - Y4 + Z4 >= 0

_C11: Z4 <= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: X9 >= 1

_C23: Y10 + Z10 >= 0

_C24: - Y10 + Z10 >= 0

_C25: Z10 <= 1

_C26: - 10 T11 + X11 <= 0

_C27: - T11 + X11 >= 0

_C28: X11 >= 0

_C29: X12 >= 1

_C30: Y13 + Z13 >= 0

_C31: - Y13 + Z13 >= 0

_C32: Z13 <= 1

_C33: X14 >= 1

_C34: - 10 T15 + X15 <= 0

_C35: - T15 + X15 >= 0

_C36: X15 >= 0

_C37: Y16 + Z16 >= 0

_C38: - Y16 + Z16 >= 0

_C39: Z16 <= 1

_C40: X17 >= 1

_C41: Y18 + Z18 >= 0

_C42: - Y18 + Z18 >= 0

_C43: Z18 <= 1

_C44: Y19 + Z19 >= 0

_C45: - Y19 + Z19 >= 0

_C46: Z19 <= 1

_C47: X20 >= 1

_C48: Y21 + Z21 >= 0

_C49: - Y21 + Z21 >= 0

_C50: Z21 <= 1

_C51: X22 >= 1

_C52: Y23 + Z23 >= 0

_C53: - Y23 + Z23 >= 0

_C54: Z23 <= 1

_C55: - 10 T24 + X24 <= 0

_C56: - T24 + X24 >= 0

_C57: X24 >= 0

_C58: - 2 A10 - B10 - Y0 = -2

_C59: X1 + X2 + Y0 <= 2

_C60: - 2 A11 - B11 + X1 + X2 + Y0 = -2

_C61: X1 + X3 + Y4 <= 2

_C62: - 2 A132 - B132 + X1 + X3 + Y4 = -2

_C63: X3 + Y5 <= 2

_C64: - 2 A131 - B131 + X3 + Y5 = -2

_C65: X6 + Y5 <= 2

_C66: - 2 A130 - B130 + X6 + Y5 = -2

_C67: X6 + X8 + Y7 <= 3

_C68: - 2 A129 - B129 + X6 + X8 + Y7 = -3

_C69: X8 + X9 + Y7 <= 3

_C70: - 2 A128 - B128 + X8 + X9 + Y7 = -3

_C71: X9 + Y10 <= 2

_C72: - 2 A127 - B127 + X9 + Y10 = -2

_C73: - 2 A126 - B126 - Y10 = -2

_C74: X11 + X12 + Y4 <= 2

_C75: - 2 A133 - B133 + X11 + X12 + Y4 = -2

_C76: X11 + X2 + Y13 <= 2

_C77: - 2 A12 - B12 + X11 + X2 + Y13 = -2

_C78: X14 + Y13 <= 2

_C79: - 2 A13 - B13 + X14 + Y13 = -2

_C80: X14 + X15 + Y16 <= 2

_C81: - 2 A14 - B14 + X14 + X15 + Y16 = -2

_C82: X15 + X17 + Y18 <= 2

_C83: - 2 A20 - B20 + X15 + X17 + Y18 = -2

_C84: X17 + Y19 <= 2

_C85: - 2 A19 - B19 + X17 + Y19 = -2

_C86: X20 + Y19 <= 2

_C87: - 2 A18 - B18 + X20 + Y19 = -2

_C88: X20 + 2 X24 + Y21 <= 3

_C89: - 2 A17 - B17 + X20 + 2 X24 + Y21 = -3

_C90: X22 + Y21 <= 3

_C91: - 2 A16 - B16 + X22 + Y21 = -3

_C92: X22 + Y16 <= 2

_C93: - 2 A15 - B15 + X22 + Y16 = -2

_C94: - 2 A21 - B21 - Y18 = -2

_C95: X12 + Y23 <= 2

_C96: - 2 A134 - B134 + X12 + Y23 = -2

_C97: - 2 A135 - B135 - Y23 = -2

VARIABLES
0 <= A10 Integer
0 <= A11 Integer
0 <= A12 Integer
0 <= A126 Integer
0 <= A127 Integer
0 <= A128 Integer
0 <= A129 Integer
0 <= A13 Integer
0 <= A130 Integer
0 <= A131 Integer
0 <= A132 Integer
0 <= A133 Integer
0 <= A134 Integer
0 <= A135 Integer
0 <= A14 Integer
0 <= A15 Integer
0 <= A16 Integer
0 <= A17 Integer
0 <= A18 Integer
0 <= A19 Integer
0 <= A20 Integer
0 <= A21 Integer
0 <= B10 <= 1 Integer
0 <= B11 <= 1 Integer
0 <= B12 <= 1 Integer
0 <= B126 <= 1 Integer
0 <= B127 <= 1 Integer
0 <= B128 <= 1 Integer
0 <= B129 <= 1 Integer
0 <= B13 <= 1 Integer
0 <= B130 <= 1 Integer
0 <= B131 <= 1 Integer
0 <= B132 <= 1 Integer
0 <= B133 <= 1 Integer
0 <= B134 <= 1 Integer
0 <= B135 <= 1 Integer
0 <= B14 <= 1 Integer
0 <= B15 <= 1 Integer
0 <= B16 <= 1 Integer
0 <= B17 <= 1 Integer
0 <= B18 <= 1 Integer
0 <= B19 <= 1 Integer
0 <= B20 <= 1 Integer
0 <= B21 <= 1 Integer
0 <= T1 <= 1 Integer
0 <= T11 <= 1 Integer
0 <= T15 <= 1 Integer
0 <= T24 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X11 Integer
0 <= X12 Integer
0 <= X14 Integer
0 <= X15 Integer
0 <= X17 Integer
0 <= X2 Integer
0 <= X20 Integer
0 <= X22 Integer
0 <= X24 Integer
0 <= X3 Integer
0 <= X6 Integer
0 <= X8 Integer
0 <= X9 Integer
Y0 free Integer
Y10 free Integer
Y13 free Integer
Y16 free Integer
Y18 free Integer
Y19 free Integer
Y21 free Integer
Y23 free Integer
Y4 free Integer
Y5 free Integer
Y7 free Integer
Z0 free Integer
Z10 free Integer
Z13 free Integer
Z16 free Integer
Z18 free Integer
Z19 free Integer
Z21 free Integer
Z23 free Integer
Z4 free Integer
Z5 free Integer
Z7 free Integer

Optimal
[A10, A11, A12, A126, A127, A128, A129, A13, A130, A131, A132, A133, A134, A135, A14, A15, A16, A17, A18, A19, A20, A21, B10, B11, B12, B126, B127, B128, B129, B13, B130, B131, B132, B133, B134, B135, B14, B15, B16, B17, B18, B19, B20, B21, T1, T11, T15, T24, T8, X1, X11, X12, X14, X15, X17, X2, X20, X22, X24, X3, X6, X8, X9, Y0, Y10, Y13, Y16, Y18, Y19, Y21, Y23, Y4, Y5, Y7, Z0, Z10, Z13, Z16, Z18, Z19, Z21, Z23, Z4, Z5, Z7]
11 132 1.0 SV
12 133 1.0 SV
133 134 2.0 R
13 14 2.0 R
14 20 0.0 SV
19 20 2.0 R
11 12 1.0 R
17 18 1.0 R
15 16 2.0 R
17 17 1.0 SV
131 132 2.0 R
129 130 2.0 R
128 129 1.0 SV
127 128 2.0 R
A10 = 1.0
A11 = 2.0
A12 = 2.0
A126 = 1.0
A127 = 2.0
A128 = 3.0
A129 = 3.0
A13 = 2.0
A130 = 2.0
A131 = 2.0
A132 = 2.0
A133 = 2.0
A134 = 2.0
A135 = 1.0
A14 = 2.0
A15 = 2.0
A16 = 2.0
A17 = 3.0
A18 = 1.0
A19 = 2.0
A20 = 2.0
A21 = 1.0
B10 = 0.0
B11 = 0.0
B12 = 0.0
B126 = 0.0
B127 = 0.0
B128 = 0.0
B129 = 0.0
B13 = 0.0
B130 = 0.0
B131 = 0.0
B132 = 0.0
B133 = 0.0
B134 = 0.0
B135 = 0.0
B14 = 0.0
B15 = 0.0
B16 = 1.0
B17 = 0.0
B18 = 1.0
B19 = 0.0
B20 = 0.0
B21 = 0.0
T1 = 1.0
T11 = 1.0
T15 = 0.0
T24 = 1.0
T8 = 1.0
X1 = 1.0
X11 = 1.0
X12 = 2.0
X14 = 2.0
X15 = 0.0
X17 = 2.0
X2 = 1.0
X20 = 1.0
X22 = 2.0
X24 = 1.0
X3 = 2.0
X6 = 2.0
X8 = 1.0
X9 = 2.0
Y0 = 0.0
Y10 = 0.0
Y13 = 0.0
Y16 = 0.0
Y18 = 0.0
Y19 = 0.0
Y21 = 0.0
Y23 = 0.0
Y4 = -1.0
Y5 = 0.0
Y7 = 0.0
Z0 = 0.0
Z10 = 0.0
Z13 = 0.0
Z16 = 0.0
Z18 = 0.0
Z19 = 0.0
Z21 = 0.0
Z23 = 0.0
Z4 = 1.0
Z5 = 0.0
Z7 = 0.0
-58.0 Objective Answer
Siavash [(22, 23, 2, 'S'), (23, 24, 0, 'R'), (25, 24, 1, 'S'), (25, 26, 0, 'R'), (25, 28, 0, 'SV'), (26, 27, 1, 'S'), (27, 28, 0, 'R'), (28, 29, 2, 'S')]
Y0 (22, 23, 2, 'S')
X1 (23, 24, 0, 'R')
Y2 (25, 24, 1, 'S')
X3 (25, 26, 0, 'R')
X4 (25, 28, 0, 'SV')
Y5 (26, 27, 1, 'S')
X6 (27, 28, 0, 'R')
Y7 (28, 29, 2, 'S')
A22 A22
B22 B22
A23 A23
B23 B23
A24 A24
B24 B24
A25 A25
B25 B25
A26 A26
B26 B26
A27 A27
B27 B27
A28 A28
B28 B28
A29 A29
B29 B29
obj -2*X1 - 2*X3 - 2*X4 - 2*X6 - 2*Y0 - 2*Y2 - 2*Y5 - 2*Y7 + 12
Sv_sum T4
CN_tune 20*Z0 + 6*Z2 + 12*Z5 + 128*Z7
obj B22 + B23 + B24 + B25 + B26 + B27 + B28 + B29 - 10*T4 - 20*X1 - 20*X3 - 20*X4 - 20*X6 - 20*Y0 - 20*Y2 - 20*Y5 - 20*Y7 + 200*Z0 + 60*Z2 + 120*Z5 + 1280*Z7 + 120
Problem:
MINIMIZE
1*B22 + 1*B23 + 1*B24 + 1*B25 + 1*B26 + 1*B27 + 1*B28 + 1*B29 + -10*T4 + -20*X1 + -20*X3 + -20*X4 + -20*X6 + -20*Y0 + -20*Y2 + -20*Y5 + -20*Y7 + 200*Z0 + 60*Z2 + 120*Z5 + 1280*Z7 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: X3 >= 1

_C9: - 10 T4 + X4 <= 0

_C10: - T4 + X4 >= 0

_C11: X4 >= 0

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 2 A22 - B22 - Y0 = -2

_C20: X1 + Y0 <= 2

_C21: - 2 A23 - B23 + X1 + Y0 = -2

_C22: X1 + Y2 <= 1

_C23: - 2 A24 - B24 + X1 + Y2 = -1

_C24: X3 + X4 + Y2 <= 1

_C25: - 2 A25 - B25 + X3 + X4 + Y2 = -1

_C26: X3 + Y5 <= 1

_C27: - 2 A26 - B26 + X3 + Y5 = -1

_C28: X6 + Y5 <= 1

_C29: - 2 A27 - B27 + X6 + Y5 = -1

_C30: X4 + X6 + Y7 <= 2

_C31: - 2 A28 - B28 + X4 + X6 + Y7 = -2

_C32: - 2 A29 - B29 - Y7 = -2

VARIABLES
0 <= A22 Integer
0 <= A23 Integer
0 <= A24 Integer
0 <= A25 Integer
0 <= A26 Integer
0 <= A27 Integer
0 <= A28 Integer
0 <= A29 Integer
0 <= B22 <= 1 Integer
0 <= B23 <= 1 Integer
0 <= B24 <= 1 Integer
0 <= B25 <= 1 Integer
0 <= B26 <= 1 Integer
0 <= B27 <= 1 Integer
0 <= B28 <= 1 Integer
0 <= B29 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
0 <= X6 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Y7 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer
Z7 free Integer

Optimal
[A22, A23, A24, A25, A26, A27, A28, A29, B22, B23, B24, B25, B26, B27, B28, B29, T4, X1, X3, X4, X6, Y0, Y2, Y5, Y7, Z0, Z2, Z5, Z7]
23 24 1.0 R
25 26 1.0 R
25 28 0.0 SV
27 28 1.0 R
A22 = 1.0
A23 = 1.0
A24 = 1.0
A25 = 1.0
A26 = 1.0
A27 = 1.0
A28 = 1.0
A29 = 1.0
B22 = 0.0
B23 = 1.0
B24 = 0.0
B25 = 0.0
B26 = 0.0
B27 = 0.0
B28 = 1.0
B29 = 0.0
T4 = 0.0
X1 = 1.0
X3 = 1.0
X4 = 0.0
X6 = 1.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Y7 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
Z7 = 0.0
62.0 Objective Answer
Siavash [(30, 31, 2, 'S'), (31, 32, 0, 'R'), (32, 33, 3, 'S'), (33, 34, 0, 'R'), (34, 35, 2, 'S'), (35, 36, 0, 'R'), (36, 37, 3, 'S'), (37, 38, 0, 'R'), (38, 39, 2, 'S'), (39, 40, 0, 'R'), (40, 41, 3, 'S'), (41, 42, 0, 'R'), (42, 43, 3, 'S'), (43, 44, 0, 'R'), (44, 45, 3, 'S'), (45, 46, 0, 'R'), (46, 49, 0, 'SV'), (46, 47, 4, 'S'), (49, 48, 3, 'S'), (49, 50, 0, 'R'), (47, 48, 0, 'R'), (51, 50, 3, 'S'), (51, 52, 0, 'R'), (51, 90, 0, 'SV'), (52, 89, 0, 'SV'), (53, 52, 3, 'S'), (89, 88, 2, 'S'), (89, 90, 0, 'R'), (79, 88, 0, 'SV'), (87, 88, 0, 'R'), (79, 80, 0, 'R'), (79, 78, 2, 'S'), (80, 81, 2, 'S'), (80, 87, 0, 'SV'), (81, 82, 0, 'R'), (82, 83, 3, 'S'), (82, 83, 0, 'SV'), (83, 84, 0, 'R'), (85, 84, 2, 'S'), (78, 85, 0, 'SV'), (85, 86, 0, 'R'), (77, 78, 0, 'R'), (77, 86, 0, 'SV'), (77, 76, 2, 'S'), (87, 86, 2, 'S'), (91, 90, 2, 'S'), (91, 92, 0, 'R'), (54, 91, 0, 'SV'), (53, 92, 0, 'SV'), (92, 93, 2, 'S'), (53, 54, 0, 'R'), (54, 55, 3, 'S'), (55, 56, 0, 'R'), (56, 57, 2, 'S')]
Y0 (30, 31, 2, 'S')
X1 (31, 32, 0, 'R')
Y2 (32, 33, 3, 'S')
X3 (33, 34, 0, 'R')
Y4 (34, 35, 2, 'S')
X5 (35, 36, 0, 'R')
Y6 (36, 37, 3, 'S')
X7 (37, 38, 0, 'R')
Y8 (38, 39, 2, 'S')
X9 (39, 40, 0, 'R')
Y10 (40, 41, 3, 'S')
X11 (41, 42, 0, 'R')
Y12 (42, 43, 3, 'S')
X13 (43, 44, 0, 'R')
Y14 (44, 45, 3, 'S')
X15 (45, 46, 0, 'R')
X16 (46, 49, 0, 'SV')
Y17 (46, 47, 4, 'S')
Y18 (49, 48, 3, 'S')
X19 (49, 50, 0, 'R')
X20 (47, 48, 0, 'R')
Y21 (51, 50, 3, 'S')
X22 (51, 52, 0, 'R')
X23 (51, 90, 0, 'SV')
X24 (52, 89, 0, 'SV')
Y25 (53, 52, 3, 'S')
Y26 (89, 88, 2, 'S')
X27 (89, 90, 0, 'R')
X28 (79, 88, 0, 'SV')
X29 (87, 88, 0, 'R')
X30 (79, 80, 0, 'R')
Y31 (79, 78, 2, 'S')
Y32 (80, 81, 2, 'S')
X33 (80, 87, 0, 'SV')
X34 (81, 82, 0, 'R')
Y35 (82, 83, 3, 'S')
X36 (82, 83, 0, 'SV')
X37 (83, 84, 0, 'R')
Y38 (85, 84, 2, 'S')
X39 (78, 85, 0, 'SV')
X40 (85, 86, 0, 'R')
X41 (77, 78, 0, 'R')
X42 (77, 86, 0, 'SV')
Y43 (77, 76, 2, 'S')
Y44 (87, 86, 2, 'S')
Y45 (91, 90, 2, 'S')
X46 (91, 92, 0, 'R')
X47 (54, 91, 0, 'SV')
X48 (53, 92, 0, 'SV')
Y49 (92, 93, 2, 'S')
X50 (53, 54, 0, 'R')
Y51 (54, 55, 3, 'S')
X52 (55, 56, 0, 'R')
Y53 (56, 57, 2, 'S')
A30 A30
B30 B30
A31 A31
B31 B31
A32 A32
B32 B32
A33 A33
B33 B33
A34 A34
B34 B34
A35 A35
B35 B35
A36 A36
B36 B36
A37 A37
B37 B37
A38 A38
B38 B38
A39 A39
B39 B39
A40 A40
B40 B40
A41 A41
B41 B41
A42 A42
B42 B42
A43 A43
B43 B43
A44 A44
B44 B44
A45 A45
B45 B45
A46 A46
B46 B46
A49 A49
B49 B49
A48 A48
B48 B48
A47 A47
B47 B47
A50 A50
B50 B50
A51 A51
B51 B51
A52 A52
B52 B52
A89 A89
B89 B89
A88 A88
B88 B88
A79 A79
B79 B79
A80 A80
B80 B80
A81 A81
B81 B81
A82 A82
B82 B82
A83 A83
B83 B83
A84 A84
B84 B84
A85 A85
B85 B85
A78 A78
B78 B78
A77 A77
B77 B77
A86 A86
B86 B86
A87 A87
B87 B87
A76 A76
B76 B76
A90 A90
B90 B90
A91 A91
B91 B91
A92 A92
B92 B92
A53 A53
B53 B53
A54 A54
B54 B54
A55 A55
B55 B55
A56 A56
B56 B56
A57 A57
B57 B57
A93 A93
B93 B93
obj -2*X1 - 2*X11 - 2*X13 - 2*X15 - 2*X16 - 2*X19 - 2*X20 - 2*X22 - 2*X23 - 2*X24 - 2*X27 - 2*X28 - 2*X29 - 2*X3 - 2*X30 - 2*X33 - 2*X34 - 2*X36 - 2*X37 - 2*X39 - 2*X40 - 2*X41 - 2*X42 - 2*X46 - 2*X47 - 2*X48 - 2*X5 - 2*X50 - 2*X52 - 2*X7 - 2*X9 - 2*Y0 - 2*Y10 - 2*Y12 - 2*Y14 - 2*Y17 - 2*Y18 - 2*Y2 - 2*Y21 - 2*Y25 - 2*Y26 - 2*Y31 - 2*Y32 - 2*Y35 - 2*Y38 - 2*Y4 - 2*Y43 - 2*Y44 - 2*Y45 - 2*Y49 - 2*Y51 - 2*Y53 - 2*Y6 - 2*Y8 + 116
Sv_sum T16 + 8*T23 + 8*T24 + T28 + T33 + T36 + T39 + T42 + 8*T47 + 8*T48
CN_tune 4*Z0 + 24*Z10 + 12*Z12 + 42*Z14 + 12*Z17 + 6*Z18 + 60*Z2 + 48*Z21 + 6*Z25 + 2*Z26 + 2*Z31 + 4*Z32 + 6*Z35 + 30*Z38 + 2*Z4 + 20*Z43 + 2*Z44 + 4*Z45 + 24*Z49 + 12*Z51 + 4*Z53 + 30*Z6 + 2*Z8
obj B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 + B38 + B39 + B40 + B41 + B42 + B43 + B44 + B45 + B46 + B47 + B48 + B49 + B50 + B51 + B52 + B53 + B54 + B55 + B56 + B57 + B76 + B77 + B78 + B79 + B80 + B81 + B82 + B83 + B84 + B85 + B86 + B87 + B88 + B89 + B90 + B91 + B92 + B93 - 10*T16 - 80*T23 - 80*T24 - 10*T28 - 10*T33 - 10*T36 - 10*T39 - 10*T42 - 80*T47 - 80*T48 - 20*X1 - 20*X11 - 20*X13 - 20*X15 - 20*X16 - 20*X19 - 20*X20 - 20*X22 - 20*X23 - 20*X24 - 20*X27 - 20*X28 - 20*X29 - 20*X3 - 20*X30 - 20*X33 - 20*X34 - 20*X36 - 20*X37 - 20*X39 - 20*X40 - 20*X41 - 20*X42 - 20*X46 - 20*X47 - 20*X48 - 20*X5 - 20*X50 - 20*X52 - 20*X7 - 20*X9 - 20*Y0 - 20*Y10 - 20*Y12 - 20*Y14 - 20*Y17 - 20*Y18 - 20*Y2 - 20*Y21 - 20*Y25 - 20*Y26 - 20*Y31 - 20*Y32 - 20*Y35 - 20*Y38 - 20*Y4 - 20*Y43 - 20*Y44 - 20*Y45 - 20*Y49 - 20*Y51 - 20*Y53 - 20*Y6 - 20*Y8 + 40*Z0 + 240*Z10 + 120*Z12 + 420*Z14 + 120*Z17 + 60*Z18 + 600*Z2 + 480*Z21 + 60*Z25 + 20*Z26 + 20*Z31 + 40*Z32 + 60*Z35 + 300*Z38 + 20*Z4 + 200*Z43 + 20*Z44 + 40*Z45 + 240*Z49 + 120*Z51 + 40*Z53 + 300*Z6 + 20*Z8 + 1160
Problem:
MINIMIZE
1*B30 + 1*B31 + 1*B32 + 1*B33 + 1*B34 + 1*B35 + 1*B36 + 1*B37 + 1*B38 + 1*B39 + 1*B40 + 1*B41 + 1*B42 + 1*B43 + 1*B44 + 1*B45 + 1*B46 + 1*B47 + 1*B48 + 1*B49 + 1*B50 + 1*B51 + 1*B52 + 1*B53 + 1*B54 + 1*B55 + 1*B56 + 1*B57 + 1*B76 + 1*B77 + 1*B78 + 1*B79 + 1*B80 + 1*B81 + 1*B82 + 1*B83 + 1*B84 + 1*B85 + 1*B86 + 1*B87 + 1*B88 + 1*B89 + 1*B90 + 1*B91 + 1*B92 + 1*B93 + -10*T16 + -80*T23 + -80*T24 + -10*T28 + -10*T33 + -10*T36 + -10*T39 + -10*T42 + -80*T47 + -80*T48 + -20*X1 + -20*X11 + -20*X13 + -20*X15 + -20*X16 + -20*X19 + -20*X20 + -20*X22 + -20*X23 + -20*X24 + -20*X27 + -20*X28 + -20*X29 + -20*X3 + -20*X30 + -20*X33 + -20*X34 + -20*X36 + -20*X37 + -20*X39 + -20*X40 + -20*X41 + -20*X42 + -20*X46 + -20*X47 + -20*X48 + -20*X5 + -20*X50 + -20*X52 + -20*X7 + -20*X9 + -20*Y0 + -20*Y10 + -20*Y12 + -20*Y14 + -20*Y17 + -20*Y18 + -20*Y2 + -20*Y21 + -20*Y25 + -20*Y26 + -20*Y31 + -20*Y32 + -20*Y35 + -20*Y38 + -20*Y4 + -20*Y43 + -20*Y44 + -20*Y45 + -20*Y49 + -20*Y51 + -20*Y53 + -20*Y6 + -20*Y8 + 40*Z0 + 240*Z10 + 120*Z12 + 420*Z14 + 120*Z17 + 60*Z18 + 600*Z2 + 480*Z21 + 60*Z25 + 20*Z26 + 20*Z31 + 40*Z32 + 60*Z35 + 300*Z38 + 20*Z4 + 200*Z43 + 20*Z44 + 40*Z45 + 240*Z49 + 120*Z51 + 40*Z53 + 300*Z6 + 20*Z8 + 1160
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: Y4 + Z4 >= 0

_C9: - Y4 + Z4 >= 0

_C10: Z4 <= 1

_C11: Y6 + Z6 >= 0

_C12: - Y6 + Z6 >= 0

_C13: Z6 <= 1

_C14: X7 >= 1

_C15: Y8 + Z8 >= 0

_C16: - Y8 + Z8 >= 0

_C17: Z8 <= 1

_C18: X9 >= 1

_C19: Y10 + Z10 >= 0

_C20: - Y10 + Z10 >= 0

_C21: Z10 <= 1

_C22: X11 >= 1

_C23: Y12 + Z12 >= 0

_C24: - Y12 + Z12 >= 0

_C25: Z12 <= 1

_C26: X13 >= 1

_C27: Y14 + Z14 >= 0

_C28: - Y14 + Z14 >= 0

_C29: Z14 <= 1

_C30: X15 >= 1

_C31: - 10 T16 + X16 <= 0

_C32: - T16 + X16 >= 0

_C33: X16 >= 0

_C34: Y17 + Z17 >= 0

_C35: - Y17 + Z17 >= 0

_C36: Z17 <= 1

_C37: Y18 + Z18 >= 0

_C38: - Y18 + Z18 >= 0

_C39: Z18 <= 1

_C40: X19 >= 1

_C41: X20 >= 1

_C42: Y21 + Z21 >= 0

_C43: - Y21 + Z21 >= 0

_C44: Z21 <= 1

_C45: X22 >= 1

_C46: - 10 T23 + X23 <= 0

_C47: - T23 + X23 >= 0

_C48: X23 >= 0

_C49: - 10 T24 + X24 <= 0

_C50: - T24 + X24 >= 0

_C51: X24 >= 0

_C52: Y25 + Z25 >= 0

_C53: - Y25 + Z25 >= 0

_C54: Z25 <= 1

_C55: Y26 + Z26 >= 0

_C56: - Y26 + Z26 >= 0

_C57: Z26 <= 1

_C58: X27 >= 1

_C59: - 10 T28 + X28 <= 0

_C60: - T28 + X28 >= 0

_C61: X28 >= 0

_C62: X29 >= 1

_C63: X30 >= 1

_C64: Y31 + Z31 >= 0

_C65: - Y31 + Z31 >= 0

_C66: Z31 <= 1

_C67: Y32 + Z32 >= 0

_C68: - Y32 + Z32 >= 0

_C69: Z32 <= 1

_C70: - 10 T33 + X33 <= 0

_C71: - T33 + X33 >= 0

_C72: X33 >= 0

_C73: X34 >= 1

_C74: Y35 + Z35 >= 0

_C75: - Y35 + Z35 >= 0

_C76: Z35 <= 1

_C77: - 10 T36 + X36 <= 0

_C78: - T36 + X36 >= 0

_C79: X36 >= 0

_C80: X37 >= 1

_C81: Y38 + Z38 >= 0

_C82: - Y38 + Z38 >= 0

_C83: Z38 <= 1

_C84: - 10 T39 + X39 <= 0

_C85: - T39 + X39 >= 0

_C86: X39 >= 0

_C87: X40 >= 1

_C88: X41 >= 1

_C89: - 10 T42 + X42 <= 0

_C90: - T42 + X42 >= 0

_C91: X42 >= 0

_C92: Y43 + Z43 >= 0

_C93: - Y43 + Z43 >= 0

_C94: Z43 <= 1

_C95: Y44 + Z44 >= 0

_C96: - Y44 + Z44 >= 0

_C97: Z44 <= 1

_C98: Y45 + Z45 >= 0

_C99: - Y45 + Z45 >= 0

_C100: Z45 <= 1

_C101: X46 >= 1

_C102: - 10 T47 + X47 <= 0

_C103: - T47 + X47 >= 0

_C104: X47 >= 0

_C105: - 10 T48 + X48 <= 0

_C106: - T48 + X48 >= 0

_C107: X48 >= 0

_C108: Y49 + Z49 >= 0

_C109: - Y49 + Z49 >= 0

_C110: Z49 <= 1

_C111: X50 >= 1

_C112: Y51 + Z51 >= 0

_C113: - Y51 + Z51 >= 0

_C114: Z51 <= 1

_C115: X52 >= 1

_C116: Y53 + Z53 >= 0

_C117: - Y53 + Z53 >= 0

_C118: Z53 <= 1

_C119: - 2 A30 - B30 - Y0 = -2

_C120: X1 + Y0 <= 2

_C121: - 2 A31 - B31 + X1 + Y0 = -2

_C122: X1 + Y2 <= 3

_C123: - 2 A32 - B32 + X1 + Y2 = -3

_C124: X3 + Y2 <= 3

_C125: - 2 A33 - B33 + X3 + Y2 = -3

_C126: X3 + Y4 <= 2

_C127: - 2 A34 - B34 + X3 + Y4 = -2

_C128: X5 + Y4 <= 2

_C129: - 2 A35 - B35 + X5 + Y4 = -2

_C130: X5 + Y6 <= 3

_C131: - 2 A36 - B36 + X5 + Y6 = -3

_C132: X7 + Y6 <= 3

_C133: - 2 A37 - B37 + X7 + Y6 = -3

_C134: X7 + Y8 <= 2

_C135: - 2 A38 - B38 + X7 + Y8 = -2

_C136: X9 + Y8 <= 2

_C137: - 2 A39 - B39 + X9 + Y8 = -2

_C138: X9 + Y10 <= 3

_C139: - 2 A40 - B40 + X9 + Y10 = -3

_C140: X11 + Y10 <= 3

_C141: - 2 A41 - B41 + X11 + Y10 = -3

_C142: X11 + Y12 <= 3

_C143: - 2 A42 - B42 + X11 + Y12 = -3

_C144: X13 + Y12 <= 3

_C145: - 2 A43 - B43 + X13 + Y12 = -3

_C146: X13 + Y14 <= 3

_C147: - 2 A44 - B44 + X13 + Y14 = -3

_C148: X15 + Y14 <= 3

_C149: - 2 A45 - B45 + X15 + Y14 = -3

_C150: X15 + X16 + Y17 <= 4

_C151: - 2 A46 - B46 + X15 + X16 + Y17 = -4

_C152: X16 + X19 + Y18 <= 3

_C153: - 2 A49 - B49 + X16 + X19 + Y18 = -3

_C154: X20 + Y18 <= 3

_C155: - 2 A48 - B48 + X20 + Y18 = -3

_C156: X20 + Y17 <= 4

_C157: - 2 A47 - B47 + X20 + Y17 = -4

_C158: X19 + Y21 <= 3

_C159: - 2 A50 - B50 + X19 + Y21 = -3

_C160: X22 + X23 + Y21 <= 3

_C161: - 2 A51 - B51 + X22 + X23 + Y21 = -3

_C162: X22 + X24 + Y25 <= 3

_C163: - 2 A52 - B52 + X22 + X24 + Y25 = -3

_C164: X24 + X27 + Y26 <= 2

_C165: - 2 A89 - B89 + X24 + X27 + Y26 = -2

_C166: X28 + X29 + Y26 <= 2

_C167: - 2 A88 - B88 + X28 + X29 + Y26 = -2

_C168: X28 + X30 + Y31 <= 2

_C169: - 2 A79 - B79 + X28 + X30 + Y31 = -2

_C170: X30 + X33 + Y32 <= 2

_C171: - 2 A80 - B80 + X30 + X33 + Y32 = -2

_C172: X34 + Y32 <= 2

_C173: - 2 A81 - B81 + X34 + Y32 = -2

_C174: X34 + X36 + Y35 <= 3

_C175: - 2 A82 - B82 + X34 + X36 + Y35 = -3

_C176: X36 + X37 + Y35 <= 3

_C177: - 2 A83 - B83 + X36 + X37 + Y35 = -3

_C178: X37 + Y38 <= 2

_C179: - 2 A84 - B84 + X37 + Y38 = -2

_C180: X39 + X40 + Y38 <= 2

_C181: - 2 A85 - B85 + X39 + X40 + Y38 = -2

_C182: X39 + X41 + Y31 <= 2

_C183: - 2 A78 - B78 + X39 + X41 + Y31 = -2

_C184: X41 + X42 + Y43 <= 2

_C185: - 2 A77 - B77 + X41 + X42 + Y43 = -2

_C186: X40 + X42 + Y44 <= 2

_C187: - 2 A86 - B86 + X40 + X42 + Y44 = -2

_C188: X29 + X33 + Y44 <= 2

_C189: - 2 A87 - B87 + X29 + X33 + Y44 = -2

_C190: - 2 A76 - B76 - Y43 = -2

_C191: X23 + X27 + Y45 <= 2

_C192: - 2 A90 - B90 + X23 + X27 + Y45 = -2

_C193: X46 + X47 + Y45 <= 2

_C194: - 2 A91 - B91 + X46 + X47 + Y45 = -2

_C195: X46 + X48 + Y49 <= 2

_C196: - 2 A92 - B92 + X46 + X48 + Y49 = -2

_C197: X48 + X50 + Y25 <= 3

_C198: - 2 A53 - B53 + X48 + X50 + Y25 = -3

_C199: X47 + X50 + Y51 <= 3

_C200: - 2 A54 - B54 + X47 + X50 + Y51 = -3

_C201: X52 + Y51 <= 3

_C202: - 2 A55 - B55 + X52 + Y51 = -3

_C203: X52 + Y53 <= 2

_C204: - 2 A56 - B56 + X52 + Y53 = -2

_C205: - 2 A57 - B57 - Y53 = -2

_C206: - 2 A93 - B93 - Y49 = -2

VARIABLES
0 <= A30 Integer
0 <= A31 Integer
0 <= A32 Integer
0 <= A33 Integer
0 <= A34 Integer
0 <= A35 Integer
0 <= A36 Integer
0 <= A37 Integer
0 <= A38 Integer
0 <= A39 Integer
0 <= A40 Integer
0 <= A41 Integer
0 <= A42 Integer
0 <= A43 Integer
0 <= A44 Integer
0 <= A45 Integer
0 <= A46 Integer
0 <= A47 Integer
0 <= A48 Integer
0 <= A49 Integer
0 <= A50 Integer
0 <= A51 Integer
0 <= A52 Integer
0 <= A53 Integer
0 <= A54 Integer
0 <= A55 Integer
0 <= A56 Integer
0 <= A57 Integer
0 <= A76 Integer
0 <= A77 Integer
0 <= A78 Integer
0 <= A79 Integer
0 <= A80 Integer
0 <= A81 Integer
0 <= A82 Integer
0 <= A83 Integer
0 <= A84 Integer
0 <= A85 Integer
0 <= A86 Integer
0 <= A87 Integer
0 <= A88 Integer
0 <= A89 Integer
0 <= A90 Integer
0 <= A91 Integer
0 <= A92 Integer
0 <= A93 Integer
0 <= B30 <= 1 Integer
0 <= B31 <= 1 Integer
0 <= B32 <= 1 Integer
0 <= B33 <= 1 Integer
0 <= B34 <= 1 Integer
0 <= B35 <= 1 Integer
0 <= B36 <= 1 Integer
0 <= B37 <= 1 Integer
0 <= B38 <= 1 Integer
0 <= B39 <= 1 Integer
0 <= B40 <= 1 Integer
0 <= B41 <= 1 Integer
0 <= B42 <= 1 Integer
0 <= B43 <= 1 Integer
0 <= B44 <= 1 Integer
0 <= B45 <= 1 Integer
0 <= B46 <= 1 Integer
0 <= B47 <= 1 Integer
0 <= B48 <= 1 Integer
0 <= B49 <= 1 Integer
0 <= B50 <= 1 Integer
0 <= B51 <= 1 Integer
0 <= B52 <= 1 Integer
0 <= B53 <= 1 Integer
0 <= B54 <= 1 Integer
0 <= B55 <= 1 Integer
0 <= B56 <= 1 Integer
0 <= B57 <= 1 Integer
0 <= B76 <= 1 Integer
0 <= B77 <= 1 Integer
0 <= B78 <= 1 Integer
0 <= B79 <= 1 Integer
0 <= B80 <= 1 Integer
0 <= B81 <= 1 Integer
0 <= B82 <= 1 Integer
0 <= B83 <= 1 Integer
0 <= B84 <= 1 Integer
0 <= B85 <= 1 Integer
0 <= B86 <= 1 Integer
0 <= B87 <= 1 Integer
0 <= B88 <= 1 Integer
0 <= B89 <= 1 Integer
0 <= B90 <= 1 Integer
0 <= B91 <= 1 Integer
0 <= B92 <= 1 Integer
0 <= B93 <= 1 Integer
0 <= T16 <= 1 Integer
0 <= T23 <= 1 Integer
0 <= T24 <= 1 Integer
0 <= T28 <= 1 Integer
0 <= T33 <= 1 Integer
0 <= T36 <= 1 Integer
0 <= T39 <= 1 Integer
0 <= T42 <= 1 Integer
0 <= T47 <= 1 Integer
0 <= T48 <= 1 Integer
0 <= X1 Integer
0 <= X11 Integer
0 <= X13 Integer
0 <= X15 Integer
0 <= X16 Integer
0 <= X19 Integer
0 <= X20 Integer
0 <= X22 Integer
0 <= X23 Integer
0 <= X24 Integer
0 <= X27 Integer
0 <= X28 Integer
0 <= X29 Integer
0 <= X3 Integer
0 <= X30 Integer
0 <= X33 Integer
0 <= X34 Integer
0 <= X36 Integer
0 <= X37 Integer
0 <= X39 Integer
0 <= X40 Integer
0 <= X41 Integer
0 <= X42 Integer
0 <= X46 Integer
0 <= X47 Integer
0 <= X48 Integer
0 <= X5 Integer
0 <= X50 Integer
0 <= X52 Integer
0 <= X7 Integer
0 <= X9 Integer
Y0 free Integer
Y10 free Integer
Y12 free Integer
Y14 free Integer
Y17 free Integer
Y18 free Integer
Y2 free Integer
Y21 free Integer
Y25 free Integer
Y26 free Integer
Y31 free Integer
Y32 free Integer
Y35 free Integer
Y38 free Integer
Y4 free Integer
Y43 free Integer
Y44 free Integer
Y45 free Integer
Y49 free Integer
Y51 free Integer
Y53 free Integer
Y6 free Integer
Y8 free Integer
Z0 free Integer
Z10 free Integer
Z12 free Integer
Z14 free Integer
Z17 free Integer
Z18 free Integer
Z2 free Integer
Z21 free Integer
Z25 free Integer
Z26 free Integer
Z31 free Integer
Z32 free Integer
Z35 free Integer
Z38 free Integer
Z4 free Integer
Z43 free Integer
Z44 free Integer
Z45 free Integer
Z49 free Integer
Z51 free Integer
Z53 free Integer
Z6 free Integer
Z8 free Integer

Optimal
[A30, A31, A32, A33, A34, A35, A36, A37, A38, A39, A40, A41, A42, A43, A44, A45, A46, A47, A48, A49, A50, A51, A52, A53, A54, A55, A56, A57, A76, A77, A78, A79, A80, A81, A82, A83, A84, A85, A86, A87, A88, A89, A90, A91, A92, A93, B30, B31, B32, B33, B34, B35, B36, B37, B38, B39, B40, B41, B42, B43, B44, B45, B46, B47, B48, B49, B50, B51, B52, B53, B54, B55, B56, B57, B76, B77, B78, B79, B80, B81, B82, B83, B84, B85, B86, B87, B88, B89, B90, B91, B92, B93, T16, T23, T24, T28, T33, T36, T39, T42, T47, T48, X1, X11, X13, X15, X16, X19, X20, X22, X23, X24, X27, X28, X29, X3, X30, X33, X34, X36, X37, X39, X40, X41, X42, X46, X47, X48, X5, X50, X52, X7, X9, Y0, Y10, Y12, Y14, Y17, Y18, Y2, Y21, Y25, Y26, Y31, Y32, Y35, Y38, Y4, Y43, Y44, Y45, Y49, Y51, Y53, Y6, Y8, Z0, Z10, Z12, Z14, Z17, Z18, Z2, Z21, Z25, Z26, Z31, Z32, Z35, Z38, Z4, Z43, Z44, Z45, Z49, Z51, Z53, Z6, Z8]
31 32 2.0 R
41 42 3.0 R
43 44 3.0 R
45 46 3.0 R
46 49 1.0 SV
49 50 2.0 R
47 48 3.0 R
51 52 2.0 R
51 90 1.0 SV
52 89 1.0 SV
89 90 1.0 R
79 88 1.0 SV
87 88 1.0 R
33 34 3.0 R
79 80 1.0 R
80 87 1.0 SV
81 82 2.0 R
82 83 1.0 SV
83 84 2.0 R
78 85 1.0 SV
85 86 1.0 R
77 78 1.0 R
77 86 1.0 SV
91 92 1.0 R
54 91 1.0 SV
53 92 1.0 SV
35 36 3.0 R
53 54 2.0 R
55 56 2.0 R
37 38 3.0 R
39 40 3.0 R
A30 = 1.0
A31 = 2.0
A32 = 2.0
A33 = 3.0
A34 = 2.0
A35 = 2.0
A36 = 3.0
A37 = 3.0
A38 = 2.0
A39 = 2.0
A40 = 3.0
A41 = 3.0
A42 = 3.0
A43 = 3.0
A44 = 3.0
A45 = 3.0
A46 = 4.0
A47 = 3.0
A48 = 3.0
A49 = 3.0
A50 = 2.0
A51 = 3.0
A52 = 3.0
A53 = 3.0
A54 = 3.0
A55 = 2.0
A56 = 2.0
A57 = 1.0
A76 = 1.0
A77 = 2.0
A78 = 2.0
A79 = 2.0
A80 = 2.0
A81 = 2.0
A82 = 3.0
A83 = 3.0
A84 = 2.0
A85 = 2.0
A86 = 2.0
A87 = 2.0
A88 = 2.0
A89 = 2.0
A90 = 2.0
A91 = 2.0
A92 = 2.0
A93 = 1.0
B30 = 0.0
B31 = 0.0
B32 = 1.0
B33 = 0.0
B34 = 0.0
B35 = 0.0
B36 = 0.0
B37 = 0.0
B38 = 0.0
B39 = 0.0
B40 = 0.0
B41 = 0.0
B42 = 0.0
B43 = 0.0
B44 = 0.0
B45 = 0.0
B46 = 0.0
B47 = 1.0
B48 = 0.0
B49 = 0.0
B50 = 1.0
B51 = 0.0
B52 = 0.0
B53 = 0.0
B54 = 0.0
B55 = 1.0
B56 = 0.0
B57 = 0.0
B76 = 0.0
B77 = 0.0
B78 = 0.0
B79 = 0.0
B80 = 0.0
B81 = 0.0
B82 = 0.0
B83 = 0.0
B84 = 0.0
B85 = 0.0
B86 = 0.0
B87 = 0.0
B88 = 0.0
B89 = 0.0
B90 = 0.0
B91 = 0.0
B92 = 0.0
B93 = 0.0
T16 = 1.0
T23 = 1.0
T24 = 1.0
T28 = 1.0
T33 = 1.0
T36 = 1.0
T39 = 1.0
T42 = 1.0
T47 = 1.0
T48 = 1.0
X1 = 2.0
X11 = 3.0
X13 = 3.0
X15 = 3.0
X16 = 1.0
X19 = 2.0
X20 = 3.0
X22 = 2.0
X23 = 1.0
X24 = 1.0
X27 = 1.0
X28 = 1.0
X29 = 1.0
X3 = 3.0
X30 = 1.0
X33 = 1.0
X34 = 2.0
X36 = 1.0
X37 = 2.0
X39 = 1.0
X40 = 1.0
X41 = 1.0
X42 = 1.0
X46 = 1.0
X47 = 1.0
X48 = 1.0
X5 = 3.0
X50 = 2.0
X52 = 2.0
X7 = 3.0
X9 = 3.0
Y0 = 0.0
Y10 = 0.0
Y12 = 0.0
Y14 = 0.0
Y17 = 0.0
Y18 = 0.0
Y2 = 0.0
Y21 = 0.0
Y25 = 0.0
Y26 = 0.0
Y31 = 0.0
Y32 = 0.0
Y35 = 0.0
Y38 = 0.0
Y4 = -1.0
Y43 = 0.0
Y44 = 0.0
Y45 = 0.0
Y49 = 0.0
Y51 = 0.0
Y53 = 0.0
Y6 = 0.0
Y8 = -1.0
Z0 = 0.0
Z10 = 0.0
Z12 = 0.0
Z14 = 0.0
Z17 = 0.0
Z18 = 0.0
Z2 = 0.0
Z21 = 0.0
Z25 = 0.0
Z26 = 0.0
Z31 = 0.0
Z32 = 0.0
Z35 = 0.0
Z38 = 0.0
Z4 = 1.0
Z43 = 0.0
Z44 = 0.0
Z45 = 0.0
Z49 = 0.0
Z51 = 0.0
Z53 = 0.0
Z6 = 0.0
Z8 = 1.0
-216.0 Objective Answer
Siavash [(59, 58, 2, 'S'), (59, 65, 0, 'SV'), (59, 60, 0, 'R'), (65, 64, 2, 'S'), (65, 66, 0, 'R'), (63, 64, 0, 'R'), (62, 63, 3, 'S'), (61, 62, 0, 'R'), (60, 61, 2, 'S'), (66, 67, 2, 'S'), (62, 62, 0, 'SV')]
Y0 (59, 58, 2, 'S')
X1 (59, 65, 0, 'SV')
X2 (59, 60, 0, 'R')
Y3 (65, 64, 2, 'S')
X4 (65, 66, 0, 'R')
X5 (63, 64, 0, 'R')
Y6 (62, 63, 3, 'S')
X7 (61, 62, 0, 'R')
Y8 (60, 61, 2, 'S')
Y9 (66, 67, 2, 'S')
X10 (62, 62, 0, 'SV')
A58 A58
B58 B58
A59 A59
B59 B59
A65 A65
B65 B65
A64 A64
B64 B64
A63 A63
B63 B63
A62 A62
B62 B62
A61 A61
B61 B61
A60 A60
B60 B60
A66 A66
B66 B66
A67 A67
B67 B67
obj -2*X1 - 2*X10 - 2*X2 - 2*X4 - 2*X5 - 2*X7 - 2*Y0 - 2*Y3 - 2*Y6 - 2*Y8 - 2*Y9 + 22
Sv_sum T1 + T10
CN_tune 8*Z0 + 2*Z3 + 6*Z6 + 2*Z8 + 132*Z9
obj B58 + B59 + B60 + B61 + B62 + B63 + B64 + B65 + B66 + B67 - 10*T1 - 10*T10 - 20*X1 - 20*X10 - 20*X2 - 20*X4 - 20*X5 - 20*X7 - 20*Y0 - 20*Y3 - 20*Y6 - 20*Y8 - 20*Y9 + 80*Z0 + 20*Z3 + 60*Z6 + 20*Z8 + 1320*Z9 + 220
Problem:
MINIMIZE
1*B58 + 1*B59 + 1*B60 + 1*B61 + 1*B62 + 1*B63 + 1*B64 + 1*B65 + 1*B66 + 1*B67 + -10*T1 + -10*T10 + -20*X1 + -20*X10 + -20*X2 + -20*X4 + -20*X5 + -20*X7 + -20*Y0 + -20*Y3 + -20*Y6 + -20*Y8 + -20*Y9 + 80*Z0 + 20*Z3 + 60*Z6 + 20*Z8 + 1320*Z9 + 220
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 10 T1 + X1 <= 0

_C5: - T1 + X1 >= 0

_C6: X1 >= 0

_C7: X2 >= 1

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: X5 >= 1

_C13: Y6 + Z6 >= 0

_C14: - Y6 + Z6 >= 0

_C15: Z6 <= 1

_C16: X7 >= 1

_C17: Y8 + Z8 >= 0

_C18: - Y8 + Z8 >= 0

_C19: Z8 <= 1

_C20: Y9 + Z9 >= 0

_C21: - Y9 + Z9 >= 0

_C22: Z9 <= 1

_C23: - 10 T10 + X10 <= 0

_C24: - T10 + X10 >= 0

_C25: X10 >= 0

_C26: - 2 A58 - B58 - Y0 = -2

_C27: X1 + X2 + Y0 <= 2

_C28: - 2 A59 - B59 + X1 + X2 + Y0 = -2

_C29: X1 + X4 + Y3 <= 2

_C30: - 2 A65 - B65 + X1 + X4 + Y3 = -2

_C31: X5 + Y3 <= 2

_C32: - 2 A64 - B64 + X5 + Y3 = -2

_C33: X5 + Y6 <= 3

_C34: - 2 A63 - B63 + X5 + Y6 = -3

_C35: 2 X10 + X7 + Y6 <= 3

_C36: - 2 A62 - B62 + 2 X10 + X7 + Y6 = -3

_C37: X7 + Y8 <= 2

_C38: - 2 A61 - B61 + X7 + Y8 = -2

_C39: X2 + Y8 <= 2

_C40: - 2 A60 - B60 + X2 + Y8 = -2

_C41: X4 + Y9 <= 2

_C42: - 2 A66 - B66 + X4 + Y9 = -2

_C43: - 2 A67 - B67 - Y9 = -2

VARIABLES
0 <= A58 Integer
0 <= A59 Integer
0 <= A60 Integer
0 <= A61 Integer
0 <= A62 Integer
0 <= A63 Integer
0 <= A64 Integer
0 <= A65 Integer
0 <= A66 Integer
0 <= A67 Integer
0 <= B58 <= 1 Integer
0 <= B59 <= 1 Integer
0 <= B60 <= 1 Integer
0 <= B61 <= 1 Integer
0 <= B62 <= 1 Integer
0 <= B63 <= 1 Integer
0 <= B64 <= 1 Integer
0 <= B65 <= 1 Integer
0 <= B66 <= 1 Integer
0 <= B67 <= 1 Integer
0 <= T1 <= 1 Integer
0 <= T10 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X7 Integer
Y0 free Integer
Y3 free Integer
Y6 free Integer
Y8 free Integer
Y9 free Integer
Z0 free Integer
Z3 free Integer
Z6 free Integer
Z8 free Integer
Z9 free Integer

Optimal
[A58, A59, A60, A61, A62, A63, A64, A65, A66, A67, B58, B59, B60, B61, B62, B63, B64, B65, B66, B67, T1, T10, X1, X10, X2, X4, X5, X7, Y0, Y3, Y6, Y8, Y9, Z0, Z3, Z6, Z8, Z9]
59 65 0.0 SV
62 62 1.0 SV
59 60 2.0 R
65 66 2.0 R
63 64 2.0 R
61 62 1.0 R
A58 = 1.0
A59 = 2.0
A60 = 2.0
A61 = 1.0
A62 = 3.0
A63 = 2.0
A64 = 2.0
A65 = 2.0
A66 = 2.0
A67 = 1.0
B58 = 0.0
B59 = 0.0
B60 = 0.0
B61 = 1.0
B62 = 0.0
B63 = 1.0
B64 = 0.0
B65 = 0.0
B66 = 0.0
B67 = 0.0
T1 = 0.0
T10 = 1.0
X1 = 0.0
X10 = 1.0
X2 = 2.0
X4 = 2.0
X5 = 2.0
X7 = 1.0
Y0 = 0.0
Y3 = 0.0
Y6 = 0.0
Y8 = 0.0
Y9 = 0.0
Z0 = 0.0
Z3 = 0.0
Z6 = 0.0
Z8 = 0.0
Z9 = 0.0
52.0 Objective Answer
Siavash [(68, 69, 2, 'S'), (69, 70, 0, 'R'), (70, 73, 0, 'SV'), (70, 71, 3, 'S'), (73, 72, 2, 'S'), (73, 74, 0, 'R'), (71, 72, 0, 'R'), (74, 75, 2, 'S')]
Y0 (68, 69, 2, 'S')
X1 (69, 70, 0, 'R')
X2 (70, 73, 0, 'SV')
Y3 (70, 71, 3, 'S')
Y4 (73, 72, 2, 'S')
X5 (73, 74, 0, 'R')
X6 (71, 72, 0, 'R')
Y7 (74, 75, 2, 'S')
A68 A68
B68 B68
A69 A69
B69 B69
A70 A70
B70 B70
A73 A73
B73 B73
A72 A72
B72 B72
A71 A71
B71 B71
A74 A74
B74 B74
A75 A75
B75 B75
obj -2*X1 - 2*X2 - 2*X5 - 2*X6 - 2*Y0 - 2*Y3 - 2*Y4 - 2*Y7 + 18
Sv_sum T2
CN_tune 40*Z0 + 12*Z3 + 2*Z4 + 88*Z7
obj B68 + B69 + B70 + B71 + B72 + B73 + B74 + B75 - 10*T2 - 20*X1 - 20*X2 - 20*X5 - 20*X6 - 20*Y0 - 20*Y3 - 20*Y4 - 20*Y7 + 400*Z0 + 120*Z3 + 20*Z4 + 880*Z7 + 180
Problem:
MINIMIZE
1*B68 + 1*B69 + 1*B70 + 1*B71 + 1*B72 + 1*B73 + 1*B74 + 1*B75 + -10*T2 + -20*X1 + -20*X2 + -20*X5 + -20*X6 + -20*Y0 + -20*Y3 + -20*Y4 + -20*Y7 + 400*Z0 + 120*Z3 + 20*Z4 + 880*Z7 + 180
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: Y4 + Z4 >= 0

_C12: - Y4 + Z4 >= 0

_C13: Z4 <= 1

_C14: X5 >= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 2 A68 - B68 - Y0 = -2

_C20: X1 + Y0 <= 2

_C21: - 2 A69 - B69 + X1 + Y0 = -2

_C22: X1 + X2 + Y3 <= 3

_C23: - 2 A70 - B70 + X1 + X2 + Y3 = -3

_C24: X2 + X5 + Y4 <= 2

_C25: - 2 A73 - B73 + X2 + X5 + Y4 = -2

_C26: X6 + Y4 <= 2

_C27: - 2 A72 - B72 + X6 + Y4 = -2

_C28: X6 + Y3 <= 3

_C29: - 2 A71 - B71 + X6 + Y3 = -3

_C30: X5 + Y7 <= 2

_C31: - 2 A74 - B74 + X5 + Y7 = -2

_C32: - 2 A75 - B75 - Y7 = -2

VARIABLES
0 <= A68 Integer
0 <= A69 Integer
0 <= A70 Integer
0 <= A71 Integer
0 <= A72 Integer
0 <= A73 Integer
0 <= A74 Integer
0 <= A75 Integer
0 <= B68 <= 1 Integer
0 <= B69 <= 1 Integer
0 <= B70 <= 1 Integer
0 <= B71 <= 1 Integer
0 <= B72 <= 1 Integer
0 <= B73 <= 1 Integer
0 <= B74 <= 1 Integer
0 <= B75 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X5 Integer
0 <= X6 Integer
Y0 free Integer
Y3 free Integer
Y4 free Integer
Y7 free Integer
Z0 free Integer
Z3 free Integer
Z4 free Integer
Z7 free Integer

Optimal
[A68, A69, A70, A71, A72, A73, A74, A75, B68, B69, B70, B71, B72, B73, B74, B75, T2, X1, X2, X5, X6, Y0, Y3, Y4, Y7, Z0, Z3, Z4, Z7]
69 70 2.0 R
70 73 1.0 SV
73 74 2.0 R
71 72 3.0 R
A68 = 1.0
A69 = 2.0
A70 = 3.0
A71 = 3.0
A72 = 2.0
A73 = 2.0
A74 = 2.0
A75 = 1.0
B68 = 0.0
B69 = 0.0
B70 = 0.0
B71 = 0.0
B72 = 0.0
B73 = 0.0
B74 = 0.0
B75 = 0.0
T2 = 1.0
X1 = 2.0
X2 = 1.0
X5 = 2.0
X6 = 3.0
Y0 = 0.0
Y3 = 0.0
Y4 = -1.0
Y7 = 0.0
Z0 = 0.0
Z3 = 0.0
Z4 = 1.0
Z7 = 0.0
50.0 Objective Answer
Siavash [(94, 95, 2, 'S')]
Y0 (94, 95, 2, 'S')
A94 A94
B94 B94
A95 A95
B95 B95
obj -2*Y0 + 4
Sv_sum 0
CN_tune 168*Z0
obj B94 + B95 - 20*Y0 + 1680*Z0 + 40
Problem:
MINIMIZE
1*B94 + 1*B95 + -20*Y0 + 1680*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A94 - B94 - Y0 = -2

_C5: - 2 A95 - B95 - Y0 = -2

VARIABLES
0 <= A94 Integer
0 <= A95 Integer
0 <= B94 <= 1 Integer
0 <= B95 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A94, A95, B94, B95, Y0, Z0]
A94 = 1.0
A95 = 1.0
B94 = 0.0
B95 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(96, 97, 2, 'S'), (97, 98, 0, 'R'), (98, 99, 4, 'S'), (99, 100, 0, 'R'), (100, 101, 3, 'S'), (101, 102, 0, 'R'), (103, 102, 2, 'S'), (103, 104, 0, 'R'), (103, 105, 0, 'SV'), (105, 104, 2, 'S'), (105, 106, 0, 'R'), (106, 107, 2, 'S'), (96, 96, 0, 'SV')]
Y0 (96, 97, 2, 'S')
X1 (97, 98, 0, 'R')
Y2 (98, 99, 4, 'S')
X3 (99, 100, 0, 'R')
Y4 (100, 101, 3, 'S')
X5 (101, 102, 0, 'R')
Y6 (103, 102, 2, 'S')
X7 (103, 104, 0, 'R')
X8 (103, 105, 0, 'SV')
Y9 (105, 104, 2, 'S')
X10 (105, 106, 0, 'R')
Y11 (106, 107, 2, 'S')
X12 (96, 96, 0, 'SV')
A96 A96
B96 B96
A97 A97
B97 B97
A98 A98
B98 B98
A99 A99
B99 B99
A100 A100
B100 B100
A101 A101
B101 B101
A102 A102
B102 B102
A103 A103
B103 B103
A104 A104
B104 B104
A105 A105
B105 B105
A106 A106
B106 B106
A107 A107
B107 B107
obj -2*X1 - 2*X10 - 2*X12 - 2*X3 - 2*X5 - 2*X7 - 2*X8 - 2*Y0 - 2*Y11 - 2*Y2 - 2*Y4 - 2*Y6 - 2*Y9 + 30
Sv_sum T12 + T8
CN_tune 2*Z0 + 72*Z11 + 6*Z2 + 6*Z4 + 18*Z6 + 2*Z9
obj B100 + B101 + B102 + B103 + B104 + B105 + B106 + B107 + B96 + B97 + B98 + B99 - 10*T12 - 10*T8 - 20*X1 - 20*X10 - 20*X12 - 20*X3 - 20*X5 - 20*X7 - 20*X8 - 20*Y0 - 20*Y11 - 20*Y2 - 20*Y4 - 20*Y6 - 20*Y9 + 20*Z0 + 720*Z11 + 60*Z2 + 60*Z4 + 180*Z6 + 20*Z9 + 300
Problem:
MINIMIZE
1*B100 + 1*B101 + 1*B102 + 1*B103 + 1*B104 + 1*B105 + 1*B106 + 1*B107 + 1*B96 + 1*B97 + 1*B98 + 1*B99 + -10*T12 + -10*T8 + -20*X1 + -20*X10 + -20*X12 + -20*X3 + -20*X5 + -20*X7 + -20*X8 + -20*Y0 + -20*Y11 + -20*Y2 + -20*Y4 + -20*Y6 + -20*Y9 + 20*Z0 + 720*Z11 + 60*Z2 + 60*Z4 + 180*Z6 + 20*Z9 + 300
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: X3 >= 1

_C9: Y4 + Z4 >= 0

_C10: - Y4 + Z4 >= 0

_C11: Z4 <= 1

_C12: X5 >= 1

_C13: Y6 + Z6 >= 0

_C14: - Y6 + Z6 >= 0

_C15: Z6 <= 1

_C16: X7 >= 1

_C17: - 10 T8 + X8 <= 0

_C18: - T8 + X8 >= 0

_C19: X8 >= 0

_C20: Y9 + Z9 >= 0

_C21: - Y9 + Z9 >= 0

_C22: Z9 <= 1

_C23: X10 >= 1

_C24: Y11 + Z11 >= 0

_C25: - Y11 + Z11 >= 0

_C26: Z11 <= 1

_C27: - 10 T12 + X12 <= 0

_C28: - T12 + X12 >= 0

_C29: X12 >= 0

_C30: 2 X12 + Y0 <= 2

_C31: - 2 A96 - B96 + 2 X12 + Y0 = -2

_C32: X1 + Y0 <= 2

_C33: - 2 A97 - B97 + X1 + Y0 = -2

_C34: X1 + Y2 <= 4

_C35: - 2 A98 - B98 + X1 + Y2 = -4

_C36: X3 + Y2 <= 4

_C37: - 2 A99 - B99 + X3 + Y2 = -4

_C38: X3 + Y4 <= 3

_C39: - 2 A100 - B100 + X3 + Y4 = -3

_C40: X5 + Y4 <= 3

_C41: - 2 A101 - B101 + X5 + Y4 = -3

_C42: X5 + Y6 <= 2

_C43: - 2 A102 - B102 + X5 + Y6 = -2

_C44: X7 + X8 + Y6 <= 2

_C45: - 2 A103 - B103 + X7 + X8 + Y6 = -2

_C46: X7 + Y9 <= 2

_C47: - 2 A104 - B104 + X7 + Y9 = -2

_C48: X10 + X8 + Y9 <= 2

_C49: - 2 A105 - B105 + X10 + X8 + Y9 = -2

_C50: X10 + Y11 <= 2

_C51: - 2 A106 - B106 + X10 + Y11 = -2

_C52: - 2 A107 - B107 - Y11 = -2

VARIABLES
0 <= A100 Integer
0 <= A101 Integer
0 <= A102 Integer
0 <= A103 Integer
0 <= A104 Integer
0 <= A105 Integer
0 <= A106 Integer
0 <= A107 Integer
0 <= A96 Integer
0 <= A97 Integer
0 <= A98 Integer
0 <= A99 Integer
0 <= B100 <= 1 Integer
0 <= B101 <= 1 Integer
0 <= B102 <= 1 Integer
0 <= B103 <= 1 Integer
0 <= B104 <= 1 Integer
0 <= B105 <= 1 Integer
0 <= B106 <= 1 Integer
0 <= B107 <= 1 Integer
0 <= B96 <= 1 Integer
0 <= B97 <= 1 Integer
0 <= B98 <= 1 Integer
0 <= B99 <= 1 Integer
0 <= T12 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X12 Integer
0 <= X3 Integer
0 <= X5 Integer
0 <= X7 Integer
0 <= X8 Integer
Y0 free Integer
Y11 free Integer
Y2 free Integer
Y4 free Integer
Y6 free Integer
Y9 free Integer
Z0 free Integer
Z11 free Integer
Z2 free Integer
Z4 free Integer
Z6 free Integer
Z9 free Integer

Optimal
[A100, A101, A102, A103, A104, A105, A106, A107, A96, A97, A98, A99, B100, B101, B102, B103, B104, B105, B106, B107, B96, B97, B98, B99, T12, T8, X1, X10, X12, X3, X5, X7, X8, Y0, Y11, Y2, Y4, Y6, Y9, Z0, Z11, Z2, Z4, Z6, Z9]
97 98 2.0 R
105 106 2.0 R
96 96 1.0 SV
99 100 3.0 R
101 102 2.0 R
103 104 2.0 R
103 105 0.0 SV
A100 = 3.0
A101 = 2.0
A102 = 2.0
A103 = 2.0
A104 = 2.0
A105 = 2.0
A106 = 2.0
A107 = 1.0
A96 = 2.0
A97 = 2.0
A98 = 3.0
A99 = 3.0
B100 = 0.0
B101 = 1.0
B102 = 0.0
B103 = 0.0
B104 = 0.0
B105 = 0.0
B106 = 0.0
B107 = 0.0
B96 = 0.0
B97 = 0.0
B98 = 0.0
B99 = 1.0
T12 = 1.0
T8 = 0.0
X1 = 2.0
X10 = 2.0
X12 = 1.0
X3 = 3.0
X5 = 2.0
X7 = 2.0
X8 = 0.0
Y0 = 0.0
Y11 = 0.0
Y2 = 0.0
Y4 = 0.0
Y6 = 0.0
Y9 = 0.0
Z0 = 0.0
Z11 = 0.0
Z2 = 0.0
Z4 = 0.0
Z6 = 0.0
Z9 = 0.0
52.0 Objective Answer
Siavash [(112, 113, 2, 'S')]
Y0 (112, 113, 2, 'S')
A112 A112
B112 B112
A113 A113
B113 B113
obj -2*Y0 + 4
Sv_sum 0
CN_tune 162*Z0
obj B112 + B113 - 20*Y0 + 1620*Z0 + 40
Problem:
MINIMIZE
1*B112 + 1*B113 + -20*Y0 + 1620*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A112 - B112 - Y0 = -2

_C5: - 2 A113 - B113 - Y0 = -2

VARIABLES
0 <= A112 Integer
0 <= A113 Integer
0 <= B112 <= 1 Integer
0 <= B113 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A112, A113, B112, B113, Y0, Z0]
A112 = 1.0
A113 = 1.0
B112 = 0.0
B113 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(114, 115, 2, 'S'), (115, 116, 0, 'R'), (115, 118, 0, 'SV'), (116, 117, 1, 'S'), (117, 118, 0, 'R'), (118, 119, 2, 'S')]
Y0 (114, 115, 2, 'S')
X1 (115, 116, 0, 'R')
X2 (115, 118, 0, 'SV')
Y3 (116, 117, 1, 'S')
X4 (117, 118, 0, 'R')
Y5 (118, 119, 2, 'S')
A114 A114
B114 B114
A115 A115
B115 B115
A116 A116
B116 B116
A117 A117
B117 B117
A118 A118
B118 B118
A119 A119
B119 B119
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 - 2*Y5 + 10
Sv_sum T2
CN_tune 8*Z0 + 6*Z3 + 72*Z5
obj B114 + B115 + B116 + B117 + B118 + B119 - 10*T2 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 - 20*Y5 + 80*Z0 + 60*Z3 + 720*Z5 + 100
Problem:
MINIMIZE
1*B114 + 1*B115 + 1*B116 + 1*B117 + 1*B118 + 1*B119 + -10*T2 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + -20*Y5 + 80*Z0 + 60*Z3 + 720*Z5 + 100
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A114 - B114 - Y0 = -2

_C16: X1 + X2 + Y0 <= 2

_C17: - 2 A115 - B115 + X1 + X2 + Y0 = -2

_C18: X1 + Y3 <= 1

_C19: - 2 A116 - B116 + X1 + Y3 = -1

_C20: X4 + Y3 <= 1

_C21: - 2 A117 - B117 + X4 + Y3 = -1

_C22: X2 + X4 + Y5 <= 2

_C23: - 2 A118 - B118 + X2 + X4 + Y5 = -2

_C24: - 2 A119 - B119 - Y5 = -2

VARIABLES
0 <= A114 Integer
0 <= A115 Integer
0 <= A116 Integer
0 <= A117 Integer
0 <= A118 Integer
0 <= A119 Integer
0 <= B114 <= 1 Integer
0 <= B115 <= 1 Integer
0 <= B116 <= 1 Integer
0 <= B117 <= 1 Integer
0 <= B118 <= 1 Integer
0 <= B119 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A114, A115, A116, A117, A118, A119, B114, B115, B116, B117, B118, B119, T2, X1, X2, X4, Y0, Y3, Y5, Z0, Z3, Z5]
115 116 1.0 R
115 118 1.0 SV
117 118 1.0 R
A114 = 1.0
A115 = 2.0
A116 = 1.0
A117 = 1.0
A118 = 2.0
A119 = 1.0
B114 = 0.0
B115 = 0.0
B116 = 0.0
B117 = 0.0
B118 = 0.0
B119 = 0.0
T2 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(120, 121, 2, 'S')]
Y0 (120, 121, 2, 'S')
A120 A120
B120 B120
A121 A121
B121 B121
obj -2*Y0 + 4
Sv_sum 0
CN_tune 132*Z0
obj B120 + B121 - 20*Y0 + 1320*Z0 + 40
Problem:
MINIMIZE
1*B120 + 1*B121 + -20*Y0 + 1320*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A120 - B120 - Y0 = -2

_C5: - 2 A121 - B121 - Y0 = -2

VARIABLES
0 <= A120 Integer
0 <= A121 Integer
0 <= B120 <= 1 Integer
0 <= B121 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A120, A121, B120, B121, Y0, Z0]
A120 = 1.0
A121 = 1.0
B120 = 0.0
B121 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(122, 123, 2, 'S')]
Y0 (122, 123, 2, 'S')
A122 A122
B122 B122
A123 A123
B123 B123
obj -2*Y0 + 4
Sv_sum 0
CN_tune 126*Z0
obj B122 + B123 - 20*Y0 + 1260*Z0 + 40
Problem:
MINIMIZE
1*B122 + 1*B123 + -20*Y0 + 1260*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A122 - B122 - Y0 = -2

_C5: - 2 A123 - B123 - Y0 = -2

VARIABLES
0 <= A122 Integer
0 <= A123 Integer
0 <= B122 <= 1 Integer
0 <= B123 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A122, A123, B122, B123, Y0, Z0]
A122 = 1.0
A123 = 1.0
B122 = 0.0
B123 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(124, 125, 2, 'S')]
Y0 (124, 125, 2, 'S')
A124 A124
B124 B124
A125 A125
B125 B125
obj -2*Y0 + 4
Sv_sum 0
CN_tune 114*Z0
obj B124 + B125 - 20*Y0 + 1140*Z0 + 40
Problem:
MINIMIZE
1*B124 + 1*B125 + -20*Y0 + 1140*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A124 - B124 - Y0 = -2

_C5: - 2 A125 - B125 - Y0 = -2

VARIABLES
0 <= A124 Integer
0 <= A125 Integer
0 <= B124 <= 1 Integer
0 <= B125 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A124, A125, B124, B125, Y0, Z0]
A124 = 1.0
A125 = 1.0
B124 = 0.0
B125 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(136, 137, 2, 'S')]
Y0 (136, 137, 2, 'S')
A136 A136
B136 B136
A137 A137
B137 B137
obj -2*Y0 + 4
Sv_sum 0
CN_tune 102*Z0
obj B136 + B137 - 20*Y0 + 1020*Z0 + 40
Problem:
MINIMIZE
1*B136 + 1*B137 + -20*Y0 + 1020*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A136 - B136 - Y0 = -2

_C5: - 2 A137 - B137 - Y0 = -2

VARIABLES
0 <= A136 Integer
0 <= A137 Integer
0 <= B136 <= 1 Integer
0 <= B137 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A136, A137, B136, B137, Y0, Z0]
A136 = 1.0
A137 = 1.0
B136 = 0.0
B137 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(138, 139, 2, 'S')]
Y0 (138, 139, 2, 'S')
A138 A138
B138 B138
A139 A139
B139 B139
obj -2*Y0 + 4
Sv_sum 0
CN_tune 72*Z0
obj B138 + B139 - 20*Y0 + 720*Z0 + 40
Problem:
MINIMIZE
1*B138 + 1*B139 + -20*Y0 + 720*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A138 - B138 - Y0 = -2

_C5: - 2 A139 - B139 - Y0 = -2

VARIABLES
0 <= A138 Integer
0 <= A139 Integer
0 <= B138 <= 1 Integer
0 <= B139 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A138, A139, B138, B139, Y0, Z0]
A138 = 1.0
A139 = 1.0
B138 = 0.0
B139 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(140, 141, 2, 'S')]
Y0 (140, 141, 2, 'S')
A140 A140
B140 B140
A141 A141
B141 B141
obj -2*Y0 + 4
Sv_sum 0
CN_tune 78*Z0
obj B140 + B141 - 20*Y0 + 780*Z0 + 40
Problem:
MINIMIZE
1*B140 + 1*B141 + -20*Y0 + 780*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A140 - B140 - Y0 = -2

_C5: - 2 A141 - B141 - Y0 = -2

VARIABLES
0 <= A140 Integer
0 <= A141 Integer
0 <= B140 <= 1 Integer
0 <= B141 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A140, A141, B140, B141, Y0, Z0]
A140 = 1.0
A141 = 1.0
B140 = 0.0
B141 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(142, 143, 2, 'S')]
Y0 (142, 143, 2, 'S')
A142 A142
B142 B142
A143 A143
B143 B143
obj -2*Y0 + 4
Sv_sum 0
CN_tune 60*Z0
obj B142 + B143 - 20*Y0 + 600*Z0 + 40
Problem:
MINIMIZE
1*B142 + 1*B143 + -20*Y0 + 600*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A142 - B142 - Y0 = -2

_C5: - 2 A143 - B143 - Y0 = -2

VARIABLES
0 <= A142 Integer
0 <= A143 Integer
0 <= B142 <= 1 Integer
0 <= B143 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A142, A143, B142, B143, Y0, Z0]
A142 = 1.0
A143 = 1.0
B142 = 0.0
B143 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(144, 145, 2, 'S')]
Y0 (144, 145, 2, 'S')
A144 A144
B144 B144
A145 A145
B145 B145
obj -2*Y0 + 4
Sv_sum 0
CN_tune 66*Z0
obj B144 + B145 - 20*Y0 + 660*Z0 + 40
Problem:
MINIMIZE
1*B144 + 1*B145 + -20*Y0 + 660*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A144 - B144 - Y0 = -2

_C5: - 2 A145 - B145 - Y0 = -2

VARIABLES
0 <= A144 Integer
0 <= A145 Integer
0 <= B144 <= 1 Integer
0 <= B145 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A144, A145, B144, B145, Y0, Z0]
A144 = 1.0
A145 = 1.0
B144 = 0.0
B145 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(146, 147, 1, 'S')]
Y0 (146, 147, 1, 'S')
A146 A146
B146 B146
A147 A147
B147 B147
obj -2*Y0 + 2
Sv_sum 0
CN_tune 192*Z0
obj B146 + B147 - 20*Y0 + 1920*Z0 + 20
Problem:
MINIMIZE
1*B146 + 1*B147 + -20*Y0 + 1920*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A146 - B146 - Y0 = -1

_C5: - 2 A147 - B147 - Y0 = -1

VARIABLES
0 <= A146 Integer
0 <= A147 Integer
0 <= B146 <= 1 Integer
0 <= B147 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A146, A147, B146, B147, Y0, Z0]
A146 = 0.0
A147 = 0.0
B146 = 1.0
B147 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
Siavash [(148, 149, 1, 'S')]
Y0 (148, 149, 1, 'S')
A148 A148
B148 B148
A149 A149
B149 B149
obj -2*Y0 + 2
Sv_sum 0
CN_tune 72*Z0
obj B148 + B149 - 20*Y0 + 720*Z0 + 20
Problem:
MINIMIZE
1*B148 + 1*B149 + -20*Y0 + 720*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A148 - B148 - Y0 = -1

_C5: - 2 A149 - B149 - Y0 = -1

VARIABLES
0 <= A148 Integer
0 <= A149 Integer
0 <= B148 <= 1 Integer
0 <= B149 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A148, A149, B148, B149, Y0, Z0]
A148 = 0.0
A149 = 0.0
B148 = 1.0
B149 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
[0, 1, 2, 3, 4, 5, 6, 7, 110, 109, 108, 111]
[(1, 0, 2, 'S'), (1, 2, 2, 'R'), (3, 2, 3, 'S'), (2, 109, 1, 'SV'), (3, 4, 2, 'R'), (3, 110, 1, 'SV'), (4, 5, 2, 'S'), (5, 6, 2, 'R'), (6, 7, 1, 'SV'), (6, 7, 3, 'S'), (109, 110, 1, 'R'), (110, 111, 2, 'S'), (109, 108, 2, 'S')]
Component [0, 1, 2, 3, 4, 5, 6, 7, 110, 109, 108, 111]
Component edges [(1, 0, 2, 'S'), (1, 2, 2, 'R'), (3, 2, 3, 'S'), (2, 109, 1, 'SV'), (3, 4, 2, 'R'), (3, 110, 1, 'SV'), (4, 5, 2, 'S'), (5, 6, 2, 'R'), (6, 7, 1, 'SV'), (6, 7, 3, 'S'), (109, 110, 1, 'R'), (110, 111, 2, 'S'), (109, 108, 2, 'S')]
ODD vertices []
TOUR
[0, 7, 108, 111]
paths_score 10 [[0, 1, 2, 3, 4, 5, 6, 7], [7, 6, 7], [7, 6, 5, 4, 3, 2, 109, 108], [108, 109, 110, 111], [111, 110, 3, 2, 1, 0]]
paths_score 10 [[7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 110, 111], [111, 110, 109, 108], [108, 109, 2, 3, 4, 5, 6, 7], [7, 6, 7]]
paths_score 10 [[108, 109, 110, 111], [111, 110, 3, 2, 1, 0], [0, 1, 2, 3, 4, 5, 6, 7], [7, 6, 7], [7, 6, 5, 4, 3, 2, 109, 108]]
paths_score 10 [[111, 110, 109, 108], [108, 109, 2, 3, 4, 5, 6, 7], [7, 6, 7], [7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 2, 3, 110, 111]]
all edges with dummy:  [(1, 0, 2, 'S'), (1, 2, 2, 'R'), (3, 2, 3, 'S'), (2, 109, 1, 'SV'), (3, 4, 2, 'R'), (3, 110, 1, 'SV'), (4, 5, 2, 'S'), (5, 6, 2, 'R'), (6, 7, 1, 'SV'), (6, 7, 3, 'S'), (109, 110, 1, 'R'), (110, 111, 2, 'S'), (109, 108, 2, 'S')]
0 1 14454.0 2 H [1]
1 1 96084215.0 2 T [0, 2]
2 1 96084216.0 2 H [1, 3, 109]
3 1 100841506.0 2 T [2, 4, 110]
4 1 100841507.0 2 H [3, 5]
5 1 243861133.0 2 T [4, 6]
6 1 243861134.0 3 H [5, 7]
7 1 248943333.0 3 T [6]
110 11 15754588.5 2 H [3, 109, 111]
109 11 15754587.5 2 T [2, 108, 110]
108 11 0.0 2 H [109]
111 11 135069565.0 2 T [110]
Answer [0, 1, 2, 3, 4, 5, 6, 7, 6, 7, 6, 5, 4, 3, 2, 109, 108, 109, 110, 111, 110, 3, 2, 1, 0]
[8, 9]
[(8, 9, 2, 'S')]
Component [8, 9]
Component edges [(8, 9, 2, 'S')]
ODD vertices []
TOUR
[8, 9]
paths_score 0 [[8, 9], [9, 8]]
paths_score 0 [[9, 8], [8, 9]]
all edges with dummy:  [(8, 9, 2, 'S')]
8 2 0 2 H [9]
9 2 242181357 2 T [8]
Answer [8, 9, 8]
[10, 11, 132, 131, 130, 129, 128, 127, 126, 133, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 134, 135]
[(11, 10, 2, 'S'), (11, 132, 1, 'SV'), (11, 12, 1, 'R'), (131, 132, 2, 'R'), (133, 132, 3, 'S'), (131, 130, 2, 'S'), (129, 130, 2, 'R'), (128, 129, 1, 'SV'), (128, 129, 3, 'S'), (127, 128, 2, 'R'), (126, 127, 2, 'S'), (12, 133, 1, 'SV'), (133, 134, 2, 'R'), (13, 12, 2, 'S'), (13, 14, 2, 'R'), (14, 15, 2, 'S'), (15, 16, 2, 'R'), (16, 17, 3, 'S'), (17, 18, 1, 'R'), (19, 18, 2, 'S'), (19, 20, 2, 'R'), (20, 21, 2, 'S'), (134, 135, 2, 'S'), (17, 17, 1, 'SV')]
Component [10, 11, 132, 131, 130, 129, 128, 127, 126, 133, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 134, 135]
Component edges [(11, 10, 2, 'S'), (11, 132, 1, 'SV'), (11, 12, 1, 'R'), (131, 132, 2, 'R'), (133, 132, 3, 'S'), (131, 130, 2, 'S'), (129, 130, 2, 'R'), (128, 129, 1, 'SV'), (128, 129, 3, 'S'), (127, 128, 2, 'R'), (126, 127, 2, 'S'), (12, 133, 1, 'SV'), (133, 134, 2, 'R'), (13, 12, 2, 'S'), (13, 14, 2, 'R'), (14, 15, 2, 'S'), (15, 16, 2, 'R'), (16, 17, 3, 'S'), (17, 18, 1, 'R'), (19, 18, 2, 'S'), (19, 20, 2, 'R'), (20, 21, 2, 'S'), (134, 135, 2, 'S'), (17, 17, 1, 'SV')]
ODD vertices [16, 18]
TOUR
[10, 21, 126, 135]
paths_score 20 [[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [21, 20, 19, 18, 16, 17, 17, 16, 15, 14, 13, 12, 133, 132, 131, 130, 129, 128, 127, 126], [126, 127, 128, 129, 128, 129, 130, 131, 132, 133, 134, 135], [135, 134, 133, 132, 11, 10]]
paths_score 20 [[21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10], [10, 11, 132, 133, 134, 135], [135, 134, 133, 132, 131, 130, 129, 128, 127, 126], [126, 127, 128, 129, 128, 129, 130, 131, 132, 133, 12, 13, 14, 15, 16, 17, 17, 16, 18, 19, 20, 21]]
paths_score 20 [[126, 127, 128, 129, 130, 131, 132, 133, 134, 135], [135, 134, 133, 132, 11, 10], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [21, 20, 19, 18, 16, 17, 17, 16, 15, 14, 13, 12, 133, 132, 131, 130, 129, 128, 129, 128, 127, 126]]
paths_score 20 [[135, 134, 133, 132, 131, 130, 129, 128, 127, 126], [126, 127, 128, 129, 128, 129, 130, 131, 132, 133, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [21, 20, 19, 18, 16, 17, 17, 16, 15, 14, 13, 12, 11, 10], [10, 11, 132, 133, 134, 135]]
all edges with dummy:  [(11, 10, 2, 'S'), (11, 132, 1, 'SV'), (11, 12, 1, 'R'), (131, 132, 2, 'R'), (133, 132, 3, 'S'), (131, 130, 2, 'S'), (129, 130, 2, 'R'), (128, 129, 1, 'SV'), (128, 129, 3, 'S'), (127, 128, 2, 'R'), (126, 127, 2, 'S'), (12, 133, 1, 'SV'), (133, 134, 2, 'R'), (13, 12, 2, 'S'), (13, 14, 2, 'R'), (14, 15, 2, 'S'), (15, 16, 2, 'R'), (16, 17, 3, 'S'), (17, 18, 1, 'R'), (19, 18, 2, 'S'), (19, 20, 2, 'R'), (20, 21, 2, 'S'), (134, 135, 2, 'S'), (17, 17, 1, 'SV'), (16, 18, 1, 'D')]
10 3 12920.0 2 H [11]
11 3 25750893.5 2 T [132, 10, 12]
132 17 68423038.0 2 H [11, 131, 133]
131 17 68423037.0 2 T [130, 132]
130 17 15506778.0 2 H [129, 131]
129 17 15506777.0 3 T [128, 130]
128 17 14194344.0 3 H [129, 127]
127 17 14194343.0 2 T [128, 126]
126 17 66654 2 H [127]
133 17 70463096.0 2 T [132, 12, 134]
12 3 25750894.5 2 H [11, 13, 133]
13 3 82126545.0 2 T [12, 14]
14 3 82126546.0 2 H [13, 15]
15 3 82350952.0 2 T [16, 14]
16 3 82350953.0 3 H [17, 18, 15]
17 3 84799609.0 3 T [16, 17, 18]
18 3 84799610.0 2 H [16, 17, 19]
19 3 84900320.5 2 T [18, 20]
20 3 84900321.5 2 H [19, 21]
21 3 198230595.0 2 T [20]
134 17 70463097.0 2 H [133, 135]
135 17 83246391.0 2 T [134]
Answer [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 20, 19, 18, 16, 17, 17, 16, 15, 14, 13, 12, 133, 132, 131, 130, 129, 128, 127, 126, 127, 128, 129, 128, 129, 130, 131, 132, 133, 134, 135, 134, 133, 132, 11, 10]
[22, 23, 24, 25, 26, 27, 28, 29]
[(22, 23, 2, 'S'), (23, 24, 1, 'R'), (25, 24, 1, 'S'), (25, 26, 1, 'R'), (26, 27, 1, 'S'), (27, 28, 1, 'R'), (28, 29, 2, 'S')]
Component [22, 23, 24, 25, 26, 27, 28, 29]
Component edges [(22, 23, 2, 'S'), (23, 24, 1, 'R'), (25, 24, 1, 'S'), (25, 26, 1, 'R'), (26, 27, 1, 'S'), (27, 28, 1, 'R'), (28, 29, 2, 'S')]
ODD vertices [23, 28]
TOUR
[22, 29]
paths_score 0 [[22, 23, 24, 25, 26, 27, 28, 29], [29, 28, 23, 22]]
paths_score 0 [[29, 28, 27, 26, 25, 24, 23, 22], [22, 23, 28, 29]]
all edges with dummy:  [(22, 23, 2, 'S'), (23, 24, 1, 'R'), (25, 24, 1, 'S'), (25, 26, 1, 'R'), (26, 27, 1, 'S'), (27, 28, 1, 'R'), (28, 29, 2, 'S'), (23, 28, 1, 'D')]
22 4 12986 2 H [23]
23 4 21200985.0 2 T [24, 28, 22]
24 4 21200986.0 1 H [25, 23]
25 4 21304673.0 1 T [24, 26]
26 4 21304674.0 1 H [25, 27]
27 4 31028432.0 1 T [26, 28]
28 4 31034116.5 2 H [27, 29, 23]
29 4 190202563.0 2 T [28]
Answer [22, 23, 24, 25, 26, 27, 28, 29, 28, 23, 22]
[30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 48, 47, 50, 51, 52, 89, 88, 79, 80, 81, 82, 83, 84, 85, 78, 77, 86, 87, 76, 90, 91, 92, 53, 54, 55, 56, 57, 93]
[(30, 31, 2, 'S'), (31, 32, 2, 'R'), (32, 33, 3, 'S'), (33, 34, 3, 'R'), (34, 35, 3, 'S'), (35, 36, 3, 'R'), (36, 37, 3, 'S'), (37, 38, 3, 'R'), (38, 39, 3, 'S'), (39, 40, 3, 'R'), (40, 41, 3, 'S'), (41, 42, 3, 'R'), (42, 43, 3, 'S'), (43, 44, 3, 'R'), (44, 45, 3, 'S'), (45, 46, 3, 'R'), (46, 49, 1, 'SV'), (46, 47, 4, 'S'), (49, 48, 3, 'S'), (49, 50, 2, 'R'), (47, 48, 3, 'R'), (51, 50, 3, 'S'), (51, 52, 2, 'R'), (51, 90, 1, 'SV'), (52, 89, 1, 'SV'), (53, 52, 3, 'S'), (89, 88, 2, 'S'), (89, 90, 1, 'R'), (79, 88, 1, 'SV'), (87, 88, 1, 'R'), (79, 80, 1, 'R'), (79, 78, 2, 'S'), (80, 81, 2, 'S'), (80, 87, 1, 'SV'), (81, 82, 2, 'R'), (82, 83, 1, 'SV'), (82, 83, 3, 'S'), (83, 84, 2, 'R'), (85, 84, 2, 'S'), (78, 85, 1, 'SV'), (85, 86, 1, 'R'), (77, 78, 1, 'R'), (77, 86, 1, 'SV'), (77, 76, 2, 'S'), (87, 86, 2, 'S'), (91, 90, 2, 'S'), (91, 92, 1, 'R'), (54, 91, 1, 'SV'), (53, 92, 1, 'SV'), (92, 93, 2, 'S'), (53, 54, 2, 'R'), (54, 55, 3, 'S'), (55, 56, 2, 'R'), (56, 57, 2, 'S')]
Component [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 48, 47, 50, 51, 52, 89, 88, 79, 80, 81, 82, 83, 84, 85, 78, 77, 86, 87, 76, 90, 91, 92, 53, 54, 55, 56, 57, 93]
Component edges [(30, 31, 2, 'S'), (31, 32, 2, 'R'), (32, 33, 3, 'S'), (33, 34, 3, 'R'), (34, 35, 3, 'S'), (35, 36, 3, 'R'), (36, 37, 3, 'S'), (37, 38, 3, 'R'), (38, 39, 3, 'S'), (39, 40, 3, 'R'), (40, 41, 3, 'S'), (41, 42, 3, 'R'), (42, 43, 3, 'S'), (43, 44, 3, 'R'), (44, 45, 3, 'S'), (45, 46, 3, 'R'), (46, 49, 1, 'SV'), (46, 47, 4, 'S'), (49, 48, 3, 'S'), (49, 50, 2, 'R'), (47, 48, 3, 'R'), (51, 50, 3, 'S'), (51, 52, 2, 'R'), (51, 90, 1, 'SV'), (52, 89, 1, 'SV'), (53, 52, 3, 'S'), (89, 88, 2, 'S'), (89, 90, 1, 'R'), (79, 88, 1, 'SV'), (87, 88, 1, 'R'), (79, 80, 1, 'R'), (79, 78, 2, 'S'), (80, 81, 2, 'S'), (80, 87, 1, 'SV'), (81, 82, 2, 'R'), (82, 83, 1, 'SV'), (82, 83, 3, 'S'), (83, 84, 2, 'R'), (85, 84, 2, 'S'), (78, 85, 1, 'SV'), (85, 86, 1, 'R'), (77, 78, 1, 'R'), (77, 86, 1, 'SV'), (77, 76, 2, 'S'), (87, 86, 2, 'S'), (91, 90, 2, 'S'), (91, 92, 1, 'R'), (54, 91, 1, 'SV'), (53, 92, 1, 'SV'), (92, 93, 2, 'S'), (53, 54, 2, 'R'), (54, 55, 3, 'S'), (55, 56, 2, 'R'), (56, 57, 2, 'S')]
ODD vertices [32, 47, 50, 55]
TOUR
[30, 57, 76, 93]
paths_score 40 [[30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], [57, 56, 55, 54, 53, 52, 51, 50, 55, 54, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76], [76, 77, 86, 87, 80, 81, 82, 83, 82, 83, 84, 85, 78, 79, 88, 89, 52, 53, 92, 93], [93, 92, 91, 90, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 47, 46, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30]]
paths_score 40 [[57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30], [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 46, 47, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 50, 51, 90, 91, 92, 93], [93, 92, 53, 52, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76], [76, 77, 86, 87, 80, 81, 82, 83, 82, 83, 84, 85, 78, 79, 88, 89, 90, 91, 54, 55, 56, 57]]
paths_score 40 [[76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], [93, 92, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30], [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 46, 47, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], [57, 56, 55, 54, 91, 90, 51, 50, 55, 54, 53, 52, 89, 88, 79, 78, 85, 84, 83, 82, 83, 82, 81, 80, 87, 86, 77, 76]]
paths_score 40 [[93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76], [76, 77, 86, 87, 80, 81, 82, 83, 82, 83, 84, 85, 78, 79, 88, 89, 52, 53, 54, 55, 56, 57], [57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30], [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 46, 47, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 90, 91, 54, 55, 50, 51, 52, 53, 92, 93]]
all edges with dummy:  [(30, 31, 2, 'S'), (31, 32, 2, 'R'), (32, 33, 3, 'S'), (33, 34, 3, 'R'), (34, 35, 3, 'S'), (35, 36, 3, 'R'), (36, 37, 3, 'S'), (37, 38, 3, 'R'), (38, 39, 3, 'S'), (39, 40, 3, 'R'), (40, 41, 3, 'S'), (41, 42, 3, 'R'), (42, 43, 3, 'S'), (43, 44, 3, 'R'), (44, 45, 3, 'S'), (45, 46, 3, 'R'), (46, 49, 1, 'SV'), (46, 47, 4, 'S'), (49, 48, 3, 'S'), (49, 50, 2, 'R'), (47, 48, 3, 'R'), (51, 50, 3, 'S'), (51, 52, 2, 'R'), (51, 90, 1, 'SV'), (52, 89, 1, 'SV'), (53, 52, 3, 'S'), (89, 88, 2, 'S'), (89, 90, 1, 'R'), (79, 88, 1, 'SV'), (87, 88, 1, 'R'), (79, 80, 1, 'R'), (79, 78, 2, 'S'), (80, 81, 2, 'S'), (80, 87, 1, 'SV'), (81, 82, 2, 'R'), (82, 83, 1, 'SV'), (82, 83, 3, 'S'), (83, 84, 2, 'R'), (85, 84, 2, 'S'), (78, 85, 1, 'SV'), (85, 86, 1, 'R'), (77, 78, 1, 'R'), (77, 86, 1, 'SV'), (77, 76, 2, 'S'), (87, 86, 2, 'S'), (91, 90, 2, 'S'), (91, 92, 1, 'R'), (54, 91, 1, 'SV'), (53, 92, 1, 'SV'), (92, 93, 2, 'S'), (53, 54, 2, 'R'), (54, 55, 3, 'S'), (55, 56, 2, 'R'), (56, 57, 2, 'S'), (32, 47, 1, 'D'), (50, 55, 1, 'D')]
30 5 19315 2 H [31]
31 5 288114.0 2 T [32, 30]
32 5 288115.0 3 H [33, 47, 31]
33 5 46400789.0 3 T [32, 34]
34 5 46400790 2 H [33, 35]
35 5 49709238.0 2 T [34, 36]
36 5 49709239.0 3 H [35, 37]
37 5 70223363.0 3 T [36, 38]
38 5 70223364 2 H [37, 39]
39 5 71035564.0 2 T [40, 38]
40 5 71035565.0 3 H [41, 39]
41 5 88767832.0 3 T [40, 42]
42 5 88772388.0 3 H [41, 43]
43 5 97162715.0 3 T [42, 44]
44 5 97165388.0 3 H [43, 45]
45 5 128026170.0 3 T [44, 46]
46 5 128036247.5 4 H [49, 45, 47]
49 5 135951612.0 3 T [48, 50, 46]
48 5 135594304.0 3 H [49, 47]
47 5 135592864.0 4 T [48, 32, 46]
50 5 135951613.0 3 H [49, 51, 55]
51 5 171227591.5 3 T [50, 52, 90]
52 5 171227592.5 3 H [89, 51, 53]
89 8 111577190.0 2 T [88, 90, 52]
88 8 109536032.0 2 H [89, 79, 87]
79 8 26474433.5 2 T [80, 88, 78]
80 8 26474434.5 2 H [81, 87, 79]
81 8 33263481.0 2 T [80, 82]
82 8 33263482.0 3 H [81, 83]
83 8 35964948.0 3 T [82, 84]
84 8 35964949.0 2 H [83, 85]
85 8 106372610.5 2 T [78, 84, 86]
78 8 23668415.5 2 H [85, 77, 79]
77 8 23668414.5 2 T [86, 76, 78]
86 8 106372611.5 2 H [77, 85, 87]
87 8 109536031.0 2 T [88, 80, 86]
76 8 61806.0 2 H [77]
90 8 111577191.0 2 H [89, 91, 51]
91 8 116833878.5 2 T [90, 92, 54]
92 8 116833879.5 2 H [53, 91, 93]
53 5 174373000.25 3 T [52, 54, 92]
54 5 174373001.25 3 H [91, 53, 55]
55 5 181301991.0 3 T [56, 50, 54]
56 5 181301992 2 H [57, 55]
57 5 181472713 2 T [56]
93 8 145076124.0 2 T [92]
Answer [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 56, 55, 54, 53, 52, 51, 50, 55, 54, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 77, 86, 87, 80, 81, 82, 83, 82, 83, 84, 85, 78, 79, 88, 89, 52, 53, 92, 93, 92, 91, 90, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 47, 46, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30]
[58, 59, 60, 61, 62, 63, 64, 65, 66, 67]
[(59, 58, 2, 'S'), (59, 60, 2, 'R'), (60, 61, 2, 'S'), (61, 62, 1, 'R'), (62, 63, 3, 'S'), (63, 64, 2, 'R'), (65, 64, 2, 'S'), (65, 66, 2, 'R'), (66, 67, 2, 'S'), (62, 62, 1, 'SV')]
Component [58, 59, 60, 61, 62, 63, 64, 65, 66, 67]
Component edges [(59, 58, 2, 'S'), (59, 60, 2, 'R'), (60, 61, 2, 'S'), (61, 62, 1, 'R'), (62, 63, 3, 'S'), (63, 64, 2, 'R'), (65, 64, 2, 'S'), (65, 66, 2, 'R'), (66, 67, 2, 'S'), (62, 62, 1, 'SV')]
ODD vertices [61, 63]
TOUR
[58, 67]
paths_score 0 [[58, 59, 60, 61, 62, 63, 64, 65, 66, 67], [67, 66, 65, 64, 63, 62, 62, 63, 61, 60, 59, 58]]
paths_score 0 [[67, 66, 65, 64, 63, 62, 61, 60, 59, 58], [58, 59, 60, 61, 63, 62, 62, 63, 64, 65, 66, 67]]
all edges with dummy:  [(59, 58, 2, 'S'), (59, 60, 2, 'R'), (60, 61, 2, 'S'), (61, 62, 1, 'R'), (62, 63, 3, 'S'), (63, 64, 2, 'R'), (65, 64, 2, 'S'), (65, 66, 2, 'R'), (66, 67, 2, 'S'), (62, 62, 1, 'SV'), (61, 63, 1, 'D')]
58 6 76217.0 2 H [59]
59 6 5618458.0 2 T [58, 60]
60 6 5618459.0 2 H [59, 61]
61 6 5729123.0 2 T [60, 62, 63]
62 6 5729124.0 3 H [61, 62, 63]
63 6 9480104.0 3 T [64, 61, 62]
64 6 9480105.0 2 H [65, 63]
65 6 9595809.0 2 T [64, 66]
66 6 9595810.0 2 H [65, 67]
67 6 170739896.0 2 T [66]
Answer [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 66, 65, 64, 63, 62, 62, 63, 61, 60, 59, 58]
[68, 69, 70, 73, 72, 71, 74, 75]
[(68, 69, 2, 'S'), (69, 70, 2, 'R'), (70, 73, 1, 'SV'), (70, 71, 3, 'S'), (73, 72, 3, 'S'), (73, 74, 2, 'R'), (71, 72, 3, 'R'), (74, 75, 2, 'S')]
Component [68, 69, 70, 73, 72, 71, 74, 75]
Component edges [(68, 69, 2, 'S'), (69, 70, 2, 'R'), (70, 73, 1, 'SV'), (70, 71, 3, 'S'), (73, 72, 3, 'S'), (73, 74, 2, 'R'), (71, 72, 3, 'R'), (74, 75, 2, 'S')]
ODD vertices []
TOUR
[68, 75]
paths_score 0 [[68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 73, 72, 71, 70, 73, 72, 71, 70, 69, 68]]
paths_score 0 [[75, 74, 73, 72, 71, 70, 69, 68], [68, 69, 70, 71, 72, 73, 70, 71, 72, 73, 74, 75]]
all edges with dummy:  [(68, 69, 2, 'S'), (69, 70, 2, 'R'), (70, 73, 1, 'SV'), (70, 71, 3, 'S'), (73, 72, 3, 'S'), (73, 74, 2, 'R'), (71, 72, 3, 'R'), (74, 75, 2, 'S')]
68 7 10488.0 2 H [69]
69 7 47129223.5 2 T [68, 70]
70 7 47143418.0 3 H [73, 69, 71]
73 7 52904794.5 2 T [72, 74, 70]
72 7 52831828.0 2 H [73, 71]
71 7 52831827.0 3 T [72, 70]
74 7 52904795.5 2 H [73, 75]
75 7 159334983.0 2 T [74]
Answer [68, 69, 70, 71, 72, 73, 74, 75, 74, 73, 72, 71, 70, 73, 72, 71, 70, 69, 68]
[94, 95]
[(94, 95, 2, 'S')]
Component [94, 95]
Component edges [(94, 95, 2, 'S')]
ODD vertices []
TOUR
[94, 95]
paths_score 0 [[94, 95], [95, 94]]
paths_score 0 [[95, 94], [94, 95]]
all edges with dummy:  [(94, 95, 2, 'S')]
94 9 0 2 H [95]
95 9 138334464 2 T [94]
Answer [94, 95, 94]
[96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107]
[(96, 97, 2, 'S'), (97, 98, 2, 'R'), (98, 99, 4, 'S'), (99, 100, 3, 'R'), (100, 101, 3, 'S'), (101, 102, 2, 'R'), (103, 102, 2, 'S'), (103, 104, 2, 'R'), (105, 104, 2, 'S'), (105, 106, 2, 'R'), (106, 107, 2, 'S'), (96, 96, 1, 'SV')]
Component [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107]
Component edges [(96, 97, 2, 'S'), (97, 98, 2, 'R'), (98, 99, 4, 'S'), (99, 100, 3, 'R'), (100, 101, 3, 'S'), (101, 102, 2, 'R'), (103, 102, 2, 'S'), (103, 104, 2, 'R'), (105, 104, 2, 'S'), (105, 106, 2, 'R'), (106, 107, 2, 'S'), (96, 96, 1, 'SV')]
ODD vertices [99, 101]
TOUR
[96, 107]
paths_score 0 [[96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], [107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 99, 100, 101, 99, 98, 97, 96, 96]]
paths_score 0 [[107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 96, 97, 98, 99, 100, 101, 99, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107]]
all edges with dummy:  [(96, 97, 2, 'S'), (97, 98, 2, 'R'), (98, 99, 4, 'S'), (99, 100, 3, 'R'), (100, 101, 3, 'S'), (101, 102, 2, 'R'), (103, 102, 2, 'S'), (103, 104, 2, 'R'), (105, 104, 2, 'S'), (105, 106, 2, 'R'), (106, 107, 2, 'S'), (96, 96, 1, 'SV'), (99, 101, 1, 'D')]
96 10 18515 2 H [96, 97]
97 10 319989.0 2 T [96, 98]
98 10 319990.0 4 H [97, 99]
99 10 2991118.0 4 T [98, 100, 101]
100 10 2992899.0 3 H [99, 101]
101 10 6332955.0 3 T [99, 100, 102]
102 10 6332956.0 2 H [101, 103]
103 10 46991592.0 2 T [104, 102]
104 10 46991593.0 2 H [105, 103]
105 10 48060267.0 2 T [104, 106]
106 10 48060268.0 2 H [105, 107]
107 10 133785265.0 2 T [106]
Answer [96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 99, 100, 101, 99, 98, 97, 96, 96]
[112, 113]
[(112, 113, 2, 'S')]
Component [112, 113]
Component edges [(112, 113, 2, 'S')]
ODD vertices []
TOUR
[112, 113]
paths_score 0 [[112, 113], [113, 112]]
paths_score 0 [[113, 112], [112, 113]]
all edges with dummy:  [(112, 113, 2, 'S')]
112 12 0 2 H [113]
113 12 133263960 2 T [112]
Answer [112, 113, 112]
[114, 115, 116, 117, 118, 119]
[(114, 115, 2, 'S'), (115, 116, 1, 'R'), (115, 118, 1, 'SV'), (116, 117, 1, 'S'), (117, 118, 1, 'R'), (118, 119, 2, 'S')]
Component [114, 115, 116, 117, 118, 119]
Component edges [(114, 115, 2, 'S'), (115, 116, 1, 'R'), (115, 118, 1, 'SV'), (116, 117, 1, 'S'), (117, 118, 1, 'R'), (118, 119, 2, 'S')]
ODD vertices []
TOUR
[114, 119]
paths_score 0 [[114, 115, 116, 117, 118, 119], [119, 118, 115, 114]]
paths_score 0 [[119, 118, 117, 116, 115, 114], [114, 115, 118, 119]]
all edges with dummy:  [(114, 115, 2, 'S'), (115, 116, 1, 'R'), (115, 118, 1, 'SV'), (116, 117, 1, 'S'), (117, 118, 1, 'R'), (118, 119, 2, 'S')]
114 13 16004726 2 H [115]
115 13 25093785.0 2 T [114, 116, 118]
116 13 25093786.0 1 H [115, 117]
117 13 27502514.0 1 T [116, 118]
118 13 27502515 2 H [115, 117, 119]
119 13 114352101 2 T [118]
Answer [114, 115, 116, 117, 118, 119, 118, 115, 114]
[120, 121]
[(120, 121, 2, 'S')]
Component [120, 121]
Component edges [(120, 121, 2, 'S')]
ODD vertices []
TOUR
[120, 121]
paths_score 0 [[120, 121], [121, 120]]
paths_score 0 [[121, 120], [120, 121]]
all edges with dummy:  [(120, 121, 2, 'S')]
120 14 0 2 H [121]
121 14 106873282 2 T [120]
Answer [120, 121, 120]
[122, 123]
[(122, 123, 2, 'S')]
Component [122, 123]
Component edges [(122, 123, 2, 'S')]
ODD vertices []
TOUR
[122, 123]
paths_score 0 [[122, 123], [123, 122]]
paths_score 0 [[123, 122], [122, 123]]
all edges with dummy:  [(122, 123, 2, 'S')]
122 15 0 2 H [123]
123 15 101976509 2 T [122]
Answer [122, 123, 122]
[124, 125]
[(124, 125, 2, 'S')]
Component [124, 125]
Component edges [(124, 125, 2, 'S')]
ODD vertices []
TOUR
[124, 125]
paths_score 0 [[124, 125], [125, 124]]
paths_score 0 [[125, 124], [124, 125]]
all edges with dummy:  [(124, 125, 2, 'S')]
124 16 0 2 H [125]
125 16 90224751 2 T [124]
Answer [124, 125, 124]
[136, 137]
[(136, 137, 2, 'S')]
Component [136, 137]
Component edges [(136, 137, 2, 'S')]
ODD vertices []
TOUR
[136, 137]
paths_score 0 [[136, 137], [137, 136]]
paths_score 0 [[137, 136], [136, 137]]
all edges with dummy:  [(136, 137, 2, 'S')]
136 18 0 2 H [137]
137 18 80256374 2 T [136]
Answer [136, 137, 136]
[138, 139]
[(138, 139, 2, 'S')]
Component [138, 139]
Component edges [(138, 139, 2, 'S')]
ODD vertices []
TOUR
[138, 139]
paths_score 0 [[138, 139], [139, 138]]
paths_score 0 [[139, 138], [138, 139]]
all edges with dummy:  [(138, 139, 2, 'S')]
138 19 0 2 H [139]
139 19 58605715 2 T [138]
Answer [138, 139, 138]
[140, 141]
[(140, 141, 2, 'S')]
Component [140, 141]
Component edges [(140, 141, 2, 'S')]
ODD vertices []
TOUR
[140, 141]
paths_score 0 [[140, 141], [141, 140]]
paths_score 0 [[141, 140], [140, 141]]
all edges with dummy:  [(140, 141, 2, 'S')]
140 20 0 2 H [141]
141 20 64333718 2 T [140]
Answer [140, 141, 140]
[142, 143]
[(142, 143, 2, 'S')]
Component [142, 143]
Component edges [(142, 143, 2, 'S')]
ODD vertices []
TOUR
[142, 143]
paths_score 0 [[142, 143], [143, 142]]
paths_score 0 [[143, 142], [142, 143]]
all edges with dummy:  [(142, 143, 2, 'S')]
142 21 0 2 H [143]
143 21 46697230 2 T [142]
Answer [142, 143, 142]
[144, 145]
[(144, 145, 2, 'S')]
Component [144, 145]
Component edges [(144, 145, 2, 'S')]
ODD vertices []
TOUR
[144, 145]
paths_score 0 [[144, 145], [145, 144]]
paths_score 0 [[145, 144], [144, 145]]
all edges with dummy:  [(144, 145, 2, 'S')]
144 22 0 2 H [145]
145 22 50805587 2 T [144]
Answer [144, 145, 144]
[146, 147]
[(146, 147, 1, 'S')]
Component [146, 147]
Component edges [(146, 147, 1, 'S')]
ODD vertices [146, 147]
TOUR
[146, 147]
all edges with dummy:  [(146, 147, 1, 'S')]
146 23 0 1 H [147]
147 23 156025612 1 T [146]
Answer [146, 147]
[148, 149]
[(148, 149, 1, 'S')]
Component [148, 149]
Component edges [(148, 149, 1, 'S')]
ODD vertices [148, 149]
TOUR
[148, 149]
all edges with dummy:  [(148, 149, 1, 'S')]
148 24 0 1 H [149]
149 24 57212132 1 T [148]
Answer [148, 149]
{(1, 0, 'S'): 2, (1, 2, 'R'): 2, (3, 2, 'S'): 3, (2, 109, 'SV'): 1, (3, 4, 'R'): 2, (3, 110, 'SV'): 1, (4, 5, 'S'): 2, (5, 6, 'R'): 2, (6, 7, 'SV'): 1, (6, 7, 'S'): 3, (109, 110, 'R'): 1, (110, 111, 'S'): 2, (109, 108, 'S'): 2}
split node indices:  [9, 16, 19]
debug paths separation:  [[0, 1, 2, 3, 4, 5, 6, 7, 6, 7], [7, 6, 5, 4, 3, 2, 109, 108], [108, 109, 110, 111], [111, 110, 3, 2, 1, 0]]
{(8, 9, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[8, 9], [9, 8]]
{(11, 10, 'S'): 2, (11, 132, 'SV'): 1, (11, 12, 'R'): 1, (131, 132, 'R'): 2, (133, 132, 'S'): 3, (131, 130, 'S'): 2, (129, 130, 'R'): 2, (128, 129, 'SV'): 1, (128, 129, 'S'): 3, (127, 128, 'R'): 2, (126, 127, 'S'): 2, (12, 133, 'SV'): 1, (133, 134, 'R'): 2, (13, 12, 'S'): 2, (13, 14, 'R'): 2, (14, 15, 'S'): 2, (15, 16, 'R'): 2, (16, 17, 'S'): 3, (17, 18, 'R'): 1, (19, 18, 'S'): 2, (19, 20, 'R'): 2, (20, 21, 'S'): 2, (134, 135, 'S'): 2, (17, 17, 'SV'): 1, (16, 18, 'D'): 1}
split node indices:  [11, 30, 41]
debug paths separation:  [[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [21, 20, 19, 18, 16, 17, 17, 16, 15, 14, 13, 12, 133, 132, 131, 130, 129, 128, 127, 126], [126, 127, 128, 129, 128, 129, 130, 131, 132, 133, 134, 135], [135, 134, 133, 132, 11, 10]]
{(22, 23, 'S'): 2, (23, 24, 'R'): 1, (25, 24, 'S'): 1, (25, 26, 'R'): 1, (26, 27, 'S'): 1, (27, 28, 'R'): 1, (28, 29, 'S'): 2, (23, 28, 'D'): 1}
split node indices:  [7]
debug paths separation:  [[22, 23, 24, 25, 26, 27, 28, 29], [29, 28, 23, 22]]
{(30, 31, 'S'): 2, (31, 32, 'R'): 2, (32, 33, 'S'): 3, (33, 34, 'R'): 3, (34, 35, 'S'): 3, (35, 36, 'R'): 3, (36, 37, 'S'): 3, (37, 38, 'R'): 3, (38, 39, 'S'): 3, (39, 40, 'R'): 3, (40, 41, 'S'): 3, (41, 42, 'R'): 3, (42, 43, 'S'): 3, (43, 44, 'R'): 3, (44, 45, 'S'): 3, (45, 46, 'R'): 3, (46, 49, 'SV'): 1, (46, 47, 'S'): 4, (49, 48, 'S'): 3, (49, 50, 'R'): 2, (47, 48, 'R'): 3, (51, 50, 'S'): 3, (51, 52, 'R'): 2, (51, 90, 'SV'): 1, (52, 89, 'SV'): 1, (53, 52, 'S'): 3, (89, 88, 'S'): 2, (89, 90, 'R'): 1, (79, 88, 'SV'): 1, (87, 88, 'R'): 1, (79, 80, 'R'): 1, (79, 78, 'S'): 2, (80, 81, 'S'): 2, (80, 87, 'SV'): 1, (81, 82, 'R'): 2, (82, 83, 'SV'): 1, (82, 83, 'S'): 3, (83, 84, 'R'): 2, (85, 84, 'S'): 2, (78, 85, 'SV'): 1, (85, 86, 'R'): 1, (77, 78, 'R'): 1, (77, 86, 'SV'): 1, (77, 76, 'S'): 2, (87, 86, 'S'): 2, (91, 90, 'S'): 2, (91, 92, 'R'): 1, (54, 91, 'SV'): 1, (53, 92, 'SV'): 1, (92, 93, 'S'): 2, (53, 54, 'R'): 2, (54, 55, 'S'): 3, (55, 56, 'R'): 2, (56, 57, 'S'): 2, (32, 47, 'D'): 1, (50, 55, 'D'): 1}
split node indices:  [27, 52, 71]
debug paths separation:  [[30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], [57, 56, 55, 54, 53, 52, 51, 50, 55, 54, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76], [76, 77, 86, 87, 80, 81, 82, 83, 82, 83, 84, 85, 78, 79, 88, 89, 52, 53, 92, 93], [93, 92, 91, 90, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 47, 46, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30]]
{(59, 58, 'S'): 2, (59, 60, 'R'): 2, (60, 61, 'S'): 2, (61, 62, 'R'): 1, (62, 63, 'S'): 3, (63, 64, 'R'): 2, (65, 64, 'S'): 2, (65, 66, 'R'): 2, (66, 67, 'S'): 2, (62, 62, 'SV'): 1, (61, 63, 'D'): 1}
split node indices:  [9]
debug paths separation:  [[58, 59, 60, 61, 62, 63, 64, 65, 66, 67], [67, 66, 65, 64, 63, 62, 62, 63, 61, 60, 59, 58]]
{(68, 69, 'S'): 2, (69, 70, 'R'): 2, (70, 73, 'SV'): 1, (70, 71, 'S'): 3, (73, 72, 'S'): 3, (73, 74, 'R'): 2, (71, 72, 'R'): 3, (74, 75, 'S'): 2}
split node indices:  [7]
debug paths separation:  [[68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 73, 72, 71, 70, 73, 72, 71, 70, 69, 68]]
{(94, 95, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[94, 95], [95, 94]]
{(96, 97, 'S'): 2, (97, 98, 'R'): 2, (98, 99, 'S'): 4, (99, 100, 'R'): 3, (100, 101, 'S'): 3, (101, 102, 'R'): 2, (103, 102, 'S'): 2, (103, 104, 'R'): 2, (105, 104, 'S'): 2, (105, 106, 'R'): 2, (106, 107, 'S'): 2, (96, 96, 'SV'): 1, (99, 101, 'D'): 1}
split node indices:  [11, 20]
debug paths separation:  [[96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], [107, 106, 105, 104, 103, 102, 101, 100, 99, 98], [98, 99, 100, 101, 99, 98, 97, 96, 96]]
{(112, 113, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[112, 113], [113, 112]]
{(114, 115, 'S'): 2, (115, 116, 'R'): 1, (115, 118, 'SV'): 1, (116, 117, 'S'): 1, (117, 118, 'R'): 1, (118, 119, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[114, 115, 116, 117, 118, 119], [119, 118, 115, 114]]
{(120, 121, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[120, 121], [121, 120]]
{(122, 123, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[122, 123], [123, 122]]
{(124, 125, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[124, 125], [125, 124]]
{(136, 137, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[136, 137], [137, 136]]
{(138, 139, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[138, 139], [139, 138]]
{(140, 141, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[140, 141], [141, 140]]
{(142, 143, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[142, 143], [143, 142]]
{(144, 145, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[144, 145], [145, 144]]
{(146, 147, 'S'): 1}
split node indices:  []
debug paths separation:  [[146, 147]]
{(148, 149, 'S'): 1}
split node indices:  []
debug paths separation:  [[148, 149]]
