Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d1f07a3286684430bc34427ecca8ba00-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/d1f07a3286684430bc34427ecca8ba00-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 37 COLUMNS
At line 191 RHS
At line 224 BOUNDS
At line 254 ENDATA
Problem MODEL has 32 rows, 29 columns and 74 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -60 - 0.00 seconds
Cgl0003I 0 fixed, 4 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 28 columns (28 integer (19 of which binary)) and 64 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -60 iterations 1
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -60 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -60 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -28 iterations 7
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -28 iterations 3
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -28 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -28 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 123 iterations 3
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 123 iterations 1
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 123 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 123 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 122 iterations 1
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 122 iterations 0
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 122 iterations 0
Cbc0038I Pass  15: suminf.    1.00000 (2) obj. 1594 iterations 8
Cbc0038I Pass  16: suminf.    1.00000 (2) obj. 1594 iterations 2
Cbc0038I Pass  17: suminf.    0.50000 (1) obj. 1614 iterations 3
Cbc0038I Pass  18: suminf.    0.50000 (1) obj. 1614 iterations 2
Cbc0038I Pass  19: suminf.    0.50000 (1) obj. 1614 iterations 2
Cbc0038I Pass  20: suminf.    0.50000 (1) obj. 1613 iterations 1
Cbc0038I Pass  21: suminf.    0.50000 (1) obj. 1613 iterations 2
Cbc0038I Pass  22: suminf.    0.50000 (1) obj. 1613 iterations 1
Cbc0038I Pass  23: suminf.    0.50000 (1) obj. 1592 iterations 5
Cbc0038I Pass  24: suminf.    0.50000 (1) obj. 1592 iterations 1
Cbc0038I Pass  25: suminf.    0.50000 (1) obj. 1592 iterations 2
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. 1502 iterations 10
Cbc0038I Pass  27: suminf.    0.50000 (1) obj. 1502 iterations 4
Cbc0038I Pass  28: suminf.    0.50000 (1) obj. 1502 iterations 2
Cbc0038I Pass  29: suminf.    0.50000 (1) obj. 1502 iterations 1
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 1591 iterations 10
Cbc0038I Rounding solution of -60 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -60 - took 0.00 seconds
Cbc0012I Integer solution of -58 found by DiveCoefficient after 2 iterations and 0 nodes (0.01 seconds)
Cbc0031I 2 added rows had average density of 7.5
Cbc0013I At root node, 2 cuts changed objective from -60 to -58 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -58, took 2 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -60 to -58
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -58.00000000
Enumerated nodes:               0
Total iterations:               2
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/83fc359f0fc74b4e94990d49722cef11-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/83fc359f0fc74b4e94990d49722cef11-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 22 COLUMNS
At line 103 RHS
At line 121 BOUNDS
At line 137 ENDATA
Problem MODEL has 17 rows, 15 columns and 39 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -50 - 0.00 seconds
Cgl0003I 0 fixed, 4 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 13 rows, 15 columns (15 integer (8 of which binary)) and 37 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -50 iterations 1
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -50 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -50 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 1830 iterations 1
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 1830 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 1830 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 1840 iterations 1
Cbc0038I Solution found of 1840
Cbc0038I Cleaned solution of 1840
Cbc0038I Rounding solution of -50 is better than previous of 1840

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -50 - took 0.00 seconds
Cbc0012I Integer solution of -48 found by DiveCoefficient after 5 iterations and 0 nodes (0.00 seconds)
Cbc0031I 3 added rows had average density of 5.3333333
Cbc0013I At root node, 3 cuts changed objective from -50 to -48 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -48, took 5 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -50 to -48
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -48.00000000
Enumerated nodes:               0
Total iterations:               5
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/884c52e2a838406eba68f6f0092e3ed7-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/884c52e2a838406eba68f6f0092e3ed7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 48 COLUMNS
At line 254 RHS
At line 298 BOUNDS
At line 337 ENDATA
Problem MODEL has 43 rows, 38 columns and 101 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -180 - 0.00 seconds
Cgl0003I 0 fixed, 8 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 31 rows, 38 columns (38 integer (21 of which binary)) and 92 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 1.9984e-15
Cbc0038I Solution found of -180
Cbc0038I Cleaned solution of -180
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 2 continuous of which 8 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -180 - took 0.00 seconds
Cbc0012I Integer solution of -180 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -180, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -180 to -180
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -180.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/69c40a06734245feb1b72ab16fdf1ce9-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/69c40a06734245feb1b72ab16fdf1ce9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/141ad87623074411ad1dd843ee0614a0-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/141ad87623074411ad1dd843ee0614a0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 214 COLUMNS
At line 1205 RHS
At line 1415 BOUNDS
At line 1595 ENDATA
Problem MODEL has 209 rows, 179 columns and 497 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -1355 - 0.00 seconds
Cgl0003I 0 fixed, 53 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 149 rows, 177 columns (177 integer (88 of which binary)) and 440 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 8 integers unsatisfied sum - 4
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1340 iterations 7
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -1340 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -1340 iterations 0
Cbc0038I Pass   4: suminf.    1.00000 (2) obj. -200 iterations 25
Cbc0038I Pass   5: suminf.    1.66667 (5) obj. -330 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 250 iterations 5
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 250 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 460 iterations 27
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 460 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 460 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 460 iterations 0
Cbc0038I Pass  12: suminf.    1.50000 (3) obj. 1091 iterations 26
Cbc0038I Pass  13: suminf.    1.50000 (3) obj. 1091 iterations 1
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 1091 iterations 5
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 1091 iterations 0
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 1091 iterations 0
Cbc0038I Pass  17: suminf.    0.50000 (1) obj. 1469 iterations 23
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 1489 iterations 1
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 1489 iterations 0
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 1489 iterations 0
Cbc0038I Pass  21: suminf.    1.00000 (2) obj. 1214 iterations 18
Cbc0038I Pass  22: suminf.    1.00000 (2) obj. 1214 iterations 2
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. 1434 iterations 2
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. 1434 iterations 0
Cbc0038I Pass  25: suminf.    0.50000 (1) obj. 823 iterations 26
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. 823 iterations 0
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. 843 iterations 1
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 843 iterations 0
Cbc0038I Pass  29: suminf.    2.83333 (8) obj. 395 iterations 28
Cbc0038I Pass  30: suminf.    2.33333 (7) obj. 375 iterations 3
Cbc0038I Rounding solution of -1340 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 3 continuous of which 13 were internal integer and 0 internal continuous
Cbc0038I Full problem 149 rows 177 columns, reduced to 23 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -1340 to -1350 (0.02 seconds)
Cbc0038I Round again with cutoff of -1351.4
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass  30: suminf.    0.38000 (1) obj. -1351.4 iterations 6
Cbc0038I Pass  31: suminf.    0.41997 (2) obj. -1351.4 iterations 5
Cbc0038I Pass  32: suminf.    0.38000 (1) obj. -1351.4 iterations 1
Cbc0038I Pass  33: suminf.    0.89991 (2) obj. -1351.4 iterations 4
Cbc0038I Pass  34: suminf.    0.89991 (2) obj. -1351.4 iterations 0
Cbc0038I Pass  35: suminf.    0.56001 (2) obj. -1351.4 iterations 6
Cbc0038I Pass  36: suminf.    0.48000 (1) obj. -1351.4 iterations 1
Cbc0038I Pass  37: suminf.    0.89991 (2) obj. -1351.4 iterations 5
Cbc0038I Pass  38: suminf.    0.89991 (2) obj. -1351.4 iterations 0
Cbc0038I Pass  39: suminf.    0.56001 (2) obj. -1351.4 iterations 10
Cbc0038I Pass  40: suminf.    0.48000 (1) obj. -1351.4 iterations 2
Cbc0038I Pass  41: suminf.    0.89991 (2) obj. -1351.4 iterations 6
Cbc0038I Pass  42: suminf.    0.89991 (2) obj. -1351.4 iterations 1
Cbc0038I Pass  43: suminf.    0.56001 (2) obj. -1351.4 iterations 12
Cbc0038I Pass  44: suminf.    0.48000 (1) obj. -1351.4 iterations 4
Cbc0038I Pass  45: suminf.    0.89991 (2) obj. -1351.4 iterations 5
Cbc0038I Pass  46: suminf.    0.89991 (2) obj. -1351.4 iterations 0
Cbc0038I Pass  47: suminf.    0.89991 (2) obj. -1351.4 iterations 3
Cbc0038I Pass  48: suminf.    0.89991 (2) obj. -1351.4 iterations 0
Cbc0038I Pass  49: suminf.    0.56001 (2) obj. -1351.4 iterations 10
Cbc0038I Pass  50: suminf.    0.48000 (1) obj. -1351.4 iterations 4
Cbc0038I Pass  51: suminf.    0.89991 (2) obj. -1351.4 iterations 7
Cbc0038I Pass  52: suminf.    0.89991 (2) obj. -1351.4 iterations 0
Cbc0038I Pass  53: suminf.    0.56001 (2) obj. -1351.4 iterations 10
Cbc0038I Pass  54: suminf.    0.48000 (1) obj. -1351.4 iterations 3
Cbc0038I Pass  55: suminf.    0.89991 (2) obj. -1351.4 iterations 5
Cbc0038I Pass  56: suminf.    0.89991 (2) obj. -1351.4 iterations 0
Cbc0038I Pass  57: suminf.    0.56001 (2) obj. -1351.4 iterations 9
Cbc0038I Pass  58: suminf.    0.48000 (1) obj. -1351.4 iterations 3
Cbc0038I Pass  59: suminf.    0.89991 (2) obj. -1351.4 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 122 integers at bound fixed and 3 continuous of which 34 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1350 - took 0.02 seconds
Cbc0012I Integer solution of -1350 found by DiveCoefficient after 5 iterations and 0 nodes (0.04 seconds)
Cbc0031I 5 added rows had average density of 5.4
Cbc0013I At root node, 5 cuts changed objective from -1355 to -1350 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 9 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1350, took 5 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -1355 to -1350
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -1350.00000000
Enumerated nodes:               0
Total iterations:               5
Time (CPU seconds):             0.04
Time (Wallclock seconds):       0.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ac3604b11dfd4bb2a59ce6456c81e309-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/ac3604b11dfd4bb2a59ce6456c81e309-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 83 COLUMNS
At line 455 RHS
At line 534 BOUNDS
At line 604 ENDATA
Problem MODEL has 78 rows, 69 columns and 182 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -435 - 0.00 seconds
Cgl0003I 0 fixed, 23 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 68 columns (68 integer (35 of which binary)) and 162 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 4 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -420 iterations 8
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -420 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -420 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 381 iterations 8
Cbc0038I Solution found of 381
Cbc0038I Cleaned solution of 381
Cbc0038I Rounding solution of -420 is better than previous of 381

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 4 continuous of which 9 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -422.4
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   5: suminf.    0.08000 (1) obj. -422.4 iterations 7
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -430 iterations 14
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -430 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -430 iterations 0
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -424 iterations 10
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -424 iterations 4
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -424 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -424 iterations 0
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. -423 iterations 3
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -423 iterations 0
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. -423 iterations 0
Cbc0038I Pass  16: suminf.    0.00308 (1) obj. -422.4 iterations 8
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. -424 iterations 8
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. -424 iterations 0
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. -424 iterations 0
Cbc0038I Pass  20: suminf.    0.21333 (1) obj. -422.4 iterations 8
Cbc0038I Pass  21: suminf.    0.21333 (1) obj. -422.4 iterations 0
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. -426 iterations 12
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -426 iterations 0
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. -426 iterations 0
Cbc0038I Pass  25: suminf.    1.84004 (4) obj. -422.4 iterations 12
Cbc0038I Pass  26: suminf.    0.23000 (1) obj. -422.4 iterations 7
Cbc0038I Pass  27: suminf.    0.23000 (1) obj. -422.4 iterations 0
Cbc0038I Pass  28: suminf.    0.23000 (1) obj. -422.4 iterations 0
Cbc0038I Pass  29: suminf.    0.00523 (1) obj. -422.4 iterations 5
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. -427 iterations 5
Cbc0038I Pass  31: suminf.    0.00000 (0) obj. -427 iterations 0
Cbc0038I Pass  32: suminf.    0.00000 (0) obj. -427 iterations 0
Cbc0038I Pass  33: suminf.    0.00000 (0) obj. -427 iterations 2
Cbc0038I Pass  34: suminf.    0.00000 (0) obj. -427 iterations 0
Cbc0038I Rounding solution of -430 is better than previous of -420

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous of which 11 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -431.8
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  34: suminf.    0.39333 (1) obj. -431.8 iterations 0
Cbc0038I Pass  35: suminf.    0.53998 (2) obj. -431.8 iterations 10
Cbc0038I Pass  36: suminf.    0.39333 (1) obj. -431.8 iterations 2
Cbc0038I Pass  37: suminf.    0.70008 (2) obj. -431.8 iterations 5
Cbc0038I Pass  38: suminf.    0.49333 (1) obj. -431.8 iterations 2
Cbc0038I Pass  39: suminf.    0.52001 (2) obj. -431.8 iterations 9
Cbc0038I Pass  40: suminf.    0.49333 (1) obj. -431.8 iterations 2
Cbc0038I Pass  41: suminf.    0.49333 (1) obj. -431.8 iterations 0
Cbc0038I Pass  42: suminf.    0.70008 (2) obj. -431.8 iterations 4
Cbc0038I Pass  43: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I Pass  44: suminf.    0.52001 (2) obj. -431.8 iterations 10
Cbc0038I Pass  45: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I Pass  46: suminf.    0.70008 (2) obj. -431.8 iterations 5
Cbc0038I Pass  47: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I Pass  48: suminf.    0.52001 (2) obj. -431.8 iterations 10
Cbc0038I Pass  49: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I Pass  50: suminf.    0.70008 (2) obj. -431.8 iterations 4
Cbc0038I Pass  51: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I Pass  52: suminf.    0.52001 (2) obj. -431.8 iterations 10
Cbc0038I Pass  53: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I Pass  54: suminf.    0.70008 (2) obj. -431.8 iterations 4
Cbc0038I Pass  55: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I Pass  56: suminf.    0.52001 (2) obj. -431.8 iterations 10
Cbc0038I Pass  57: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I Pass  58: suminf.    0.49333 (1) obj. -431.8 iterations 2
Cbc0038I Pass  59: suminf.    0.49333 (1) obj. -431.8 iterations 0
Cbc0038I Pass  60: suminf.    0.52001 (2) obj. -431.8 iterations 10
Cbc0038I Pass  61: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I Pass  62: suminf.    0.70008 (2) obj. -431.8 iterations 6
Cbc0038I Pass  63: suminf.    0.49333 (1) obj. -431.8 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 1 continuous of which 13 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -430 - took 0.01 seconds
Cbc0012I Integer solution of -428 found by DiveCoefficient after 8 iterations and 0 nodes (0.02 seconds)
Cbc0031I 5 added rows had average density of 7.6
Cbc0013I At root node, 5 cuts changed objective from -435 to -428 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 6 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -428, took 8 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -435 to -428
Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 3 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -428.00000000
Enumerated nodes:               0
Total iterations:               8
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/cdf35670a4f347cf8774076872e7e546-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/cdf35670a4f347cf8774076872e7e546-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/a22962ec0fe74f37b6d422f628112203-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/a22962ec0fe74f37b6d422f628112203-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 54 COLUMNS
At line 290 RHS
At line 340 BOUNDS
At line 383 ENDATA
Problem MODEL has 49 rows, 42 columns and 119 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -200 - 0.00 seconds
Cgl0003I 0 fixed, 13 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 42 columns (42 integer (21 of which binary)) and 108 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -200
Cbc0038I Cleaned solution of -200
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous of which 9 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -200 - took 0.00 seconds
Cbc0012I Integer solution of -200 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -200, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -200 to -200
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -200.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/56577594b8f842d7947991fb7f3a3069-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/56577594b8f842d7947991fb7f3a3069-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -70 - 0.00 seconds
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 22 columns (22 integer (14 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -70
Cbc0038I Cleaned solution of -70
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -70 - took 0.00 seconds
Cbc0012I Integer solution of -70 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -70, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -70 to -70
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -70.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e4c7889dae574b3bbda8e23bdbbe8b15-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/e4c7889dae574b3bbda8e23bdbbe8b15-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/cfb1da433f754da8a0e152fda40b8a10-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/cfb1da433f754da8a0e152fda40b8a10-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/2789f87e8c4245329d185cb852e17c65-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/2789f87e8c4245329d185cb852e17c65-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/89fb0631af0546b8841ba8623b931af7-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/89fb0631af0546b8841ba8623b931af7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/6060156da4c04e58919b463912f8e8c9-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/6060156da4c04e58919b463912f8e8c9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d650b1fb59634fc28a7fba1595f8095f-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/d650b1fb59634fc28a7fba1595f8095f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/64034d568913427f9612d3604944c360-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/64034d568913427f9612d3604944c360-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d2d25db82d7f4a3482d58f1959007050-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/d2d25db82d7f4a3482d58f1959007050-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 48 COLUMNS
At line 252 RHS
At line 296 BOUNDS
At line 335 ENDATA
Problem MODEL has 43 rows, 38 columns and 99 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -175 - 0.00 seconds
Cgl0003I 0 fixed, 13 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 37 columns (37 integer (19 of which binary)) and 86 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -160 iterations 3
Cbc0038I Solution found of -160
Cbc0038I Cleaned solution of -160
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 4 continuous of which 9 were internal integer and 0 internal continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -162.4
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.08000 (1) obj. -162.4 iterations 3
Cbc0038I Pass   3: suminf.    0.38000 (1) obj. -162.4 iterations 7
Cbc0038I Pass   4: suminf.    0.38000 (1) obj. -162.4 iterations 0
Cbc0038I Pass   5: suminf.    0.38000 (1) obj. -162.4 iterations 0
Cbc0038I Pass   6: suminf.    0.99001 (3) obj. -162.4 iterations 4
Cbc0038I Pass   7: suminf.    0.33000 (1) obj. -162.4 iterations 2
Cbc0038I Pass   8: suminf.    0.33000 (1) obj. -162.4 iterations 0
Cbc0038I Pass   9: suminf.    0.33000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  10: suminf.    0.23000 (1) obj. -162.4 iterations 2
Cbc0038I Pass  11: suminf.    0.23000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  12: suminf.    0.23000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  13: suminf.    0.18000 (1) obj. -162.4 iterations 5
Cbc0038I Pass  14: suminf.    0.18000 (1) obj. -162.4 iterations 8
Cbc0038I Pass  15: suminf.    0.18000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  16: suminf.    0.18000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  17: suminf.    1.33995 (7) obj. -162.4 iterations 11
Cbc0038I Pass  18: suminf.    1.33995 (7) obj. -162.4 iterations 1
Cbc0038I Pass  19: suminf.    0.18000 (1) obj. -162.4 iterations 5
Cbc0038I Pass  20: suminf.    0.18000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  21: suminf.    0.18000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  22: suminf.    0.00813 (1) obj. -162.4 iterations 5
Cbc0038I Pass  23: suminf.    0.13000 (1) obj. -162.4 iterations 2
Cbc0038I Pass  24: suminf.    0.13000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  25: suminf.    0.13000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  26: suminf.    0.13000 (1) obj. -162.4 iterations 2
Cbc0038I Pass  27: suminf.    0.13000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  28: suminf.    0.13000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  29: suminf.    3.19995 (8) obj. -162.4 iterations 9
Cbc0038I Pass  30: suminf.    3.19995 (8) obj. -162.4 iterations 0
Cbc0038I Pass  31: suminf.    0.21333 (1) obj. -162.4 iterations 2
Cbc0038I Rounding solution of -169 is better than previous of -160

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -169 to -170 (0.01 seconds)
Cbc0038I Round again with cutoff of -171.8
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.39333 (1) obj. -171.8 iterations 0
Cbc0038I Pass  32: suminf.    0.53998 (2) obj. -171.8 iterations 4
Cbc0038I Pass  33: suminf.    0.39333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  34: suminf.    0.42666 (1) obj. -171.8 iterations 1
Cbc0038I Pass  35: suminf.    0.42666 (1) obj. -171.8 iterations 0
Cbc0038I Pass  36: suminf.    0.72001 (2) obj. -171.8 iterations 4
Cbc0038I Pass  37: suminf.    0.42666 (1) obj. -171.8 iterations 1
Cbc0038I Pass  38: suminf.    0.61000 (2) obj. -171.8 iterations 5
Cbc0038I Pass  39: suminf.    0.52001 (2) obj. -171.8 iterations 8
Cbc0038I Pass  40: suminf.    0.52001 (2) obj. -171.8 iterations 1
Cbc0038I Pass  41: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  42: suminf.    0.52001 (2) obj. -171.8 iterations 4
Cbc0038I Pass  43: suminf.    0.52001 (2) obj. -171.8 iterations 2
Cbc0038I Pass  44: suminf.    0.52001 (2) obj. -171.8 iterations 0
Cbc0038I Pass  45: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  46: suminf.    0.52001 (2) obj. -171.8 iterations 4
Cbc0038I Pass  47: suminf.    0.70008 (2) obj. -171.8 iterations 6
Cbc0038I Pass  48: suminf.    0.49333 (1) obj. -171.8 iterations 3
Cbc0038I Pass  49: suminf.    0.52001 (2) obj. -171.8 iterations 7
Cbc0038I Pass  50: suminf.    0.49333 (1) obj. -171.8 iterations 4
Cbc0038I Pass  51: suminf.    0.70008 (2) obj. -171.8 iterations 5
Cbc0038I Pass  52: suminf.    0.49333 (1) obj. -171.8 iterations 4
Cbc0038I Pass  53: suminf.    0.52001 (2) obj. -171.8 iterations 5
Cbc0038I Pass  54: suminf.    0.49333 (1) obj. -171.8 iterations 4
Cbc0038I Pass  55: suminf.    0.46000 (1) obj. -171.8 iterations 1
Cbc0038I Pass  56: suminf.    0.62001 (2) obj. -171.8 iterations 5
Cbc0038I Pass  57: suminf.    0.46000 (1) obj. -171.8 iterations 4
Cbc0038I Pass  58: suminf.    0.70008 (2) obj. -171.8 iterations 4
Cbc0038I Pass  59: suminf.    0.49333 (1) obj. -171.8 iterations 3
Cbc0038I Pass  60: suminf.    0.52001 (2) obj. -171.8 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous of which 8 were internal integer and 0 internal continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -170 - took 0.01 seconds
Cbc0012I Integer solution of -168 found by DiveCoefficient after 6 iterations and 0 nodes (0.02 seconds)
Cbc0031I 3 added rows had average density of 6
Cbc0013I At root node, 3 cuts changed objective from -175 to -168 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -168, took 6 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -175 to -168
Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -168.00000000
Enumerated nodes:               0
Total iterations:               6
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/eb8c70ea653d4229adf4479027d5d819-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/eb8c70ea653d4229adf4479027d5d819-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/817c5d3bec0346dab95a9751249078bb-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/817c5d3bec0346dab95a9751249078bb-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/2b2fecf9620846df809ae137507ef3a9-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/2b2fecf9620846df809ae137507ef3a9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/18550ac0902748ca87649ed93b83e260-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/18550ac0902748ca87649ed93b83e260-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

dashag 1.0032436682939616
192	431	1	1	295978.6	286707.1	180504812.0	188406913.0	0.4	translocation_intrachr	33	38	-1	66	65	31092	32836	heterozygous	1	-1	-1.0	7774.48	81.18	-1.0	-1.0	0.276	-/-	0.56
211	432	1	1	295857.7	286586.2	180504812.0	188406913.0	0.31	translocation_intrachr	34	39	-1	66	65	31092	32836	heterozygous	1	-1	-1.0	7774.76	82.86	-1.0	-1.0	0.273	-/-	0.56
285	1181	2	2	332302.7	340476.6	15924.0	9334521.0	0.21	translocation_intrachr	46	50	-1	67	68	1	1663	heterozygous	1	64	-1.0	87.65	125.94	-1.0	-1.0	0.34700000000000003	-/+	0.67
286	1182	2	2	367279.0	375452.9	15924.0	9334521.0	0.1	translocation_intrachr	47	51	-1	70	71	1	1663	heterozygous	1	64	-1.0	91.9	141.17	-1.0	-1.0	0.35100000000000003	-/+	0.67
588	551	3	3	16178981.1	16210325.0	16185602.0	20522374.0	0.99	deletion	84	88	-1	3094	3096	3159	4119	heterozygous	1	130	78.28	3960.5	78.28	4368.91	4305428.1	0.229	NA	0.5
588	551	3	3	16178981.1	16210325.0	16185602.0	20522374.0	0.99	deletion	84	88	-1	3094	3096	3159	4119	heterozygous	1	130	78.28	3960.5	78.28	4368.91	4305428.1	0.229	NA	0.5
595	552	3	3	13311629.9	13342973.7	16185602.0	20522374.0	0.99	deletion	85	89	-1	2475	2477	3159	4119	heterozygous	1	130	79.07	3177.77	79.07	4368.91	4305428.1	0.201	NA	0.5
595	552	3	3	13311629.9	13342973.7	16185602.0	20522374.0	0.99	deletion	85	89	-1	2475	2477	3159	4119	heterozygous	1	130	79.07	3177.77	79.07	4368.91	4305428.1	0.201	NA	0.5
867	1471	3	3	316737.8	329094.6	99896479.0	107195075.0	0.47	translocation_intrachr	95	98	-1	71	72	20022	21608	heterozygous	1	198	-1.0	80.13	59.76	-1.0	-1.0	0.16	-/-	0.41
868	1472	3	3	332339.0	344696.0	99896479.0	107195075.0	0.66	translocation_intrachr	96	97	-1	73	74	20022	21608	heterozygous	1	198	-1.0	83.32	74.0	-1.0	-1.0	0.206	-/-	0.41
1209	401	5	5	319814.8	575673.7	70107744.0	71363699.0	0.01	deletion	112	118	-1	66	118	13865	14123	heterozygous	1	280	0.01	129.91	8388.81	-1.0	1000096.2	0.242	NA	0.49
1210	402	5	5	319644.8	576170.8	70107744.0	71363699.0	0.01	deletion	113	119	-1	64	118	13865	14123	heterozygous	1	280	0.01	148.65	8404.79	-1.0	999429.1	0.234	NA	0.49
1255	641	5	8	8001203.4	7983633.8	101922930.0	99143753.0	0.81	translocation_interchr	120	219	-1	1726	1725	20934	19760	heterozygous	1	291	-1.0	72.7	2162.93	-1.0	-1.0	0.174	-/-	0.52
1256	642	5	8	8000093.7	7982524.1	101922930.0	99143753.0	0.56	translocation_interchr	121	220	-1	1726	1725	20934	19760	heterozygous	1	291	-1.0	70.71	2168.56	-1.0	-1.0	0.13	-/-	0.52
1257	982	5	8	933740.2	929404.2	101935091.5	107154344.0	0.89	translocation_interchr	122	224	-1	183	182	20935	21534	heterozygous	2	291	-1.0	78.71	229.54	-1.0	-1.0	0.181	+/+	0.5
1258	981	5	8	990728.9	986392.9	101935091.5	107154344.0	0.92	translocation_interchr	123	221	-1	197	196	20935	21534	heterozygous	2	291	-1.0	86.21	244.37	-1.0	-1.0	0.161	+/+	0.5
1355	1520	5	7	314423.1	314423.1	124558735.0	48718524.0	0.75	translocation_interchr	126	177	-1	69	69	25994	9703	heterozygous	1	-1	-1.0	85.07	81.26	-1.0	-1.0	0.18600000000000005	-/+	0.2
1358	1512	5	7	288137.2	276201.3	125669789.0	46765451.0	0.8	translocation_interchr	129	169	-1	57	56	26242	9337	heterozygous	1	314	-1.0	61.04	69.96	-1.0	-1.0	0.114	+/+	0.48
1356	1581	5	7	307696.2	313610.2	125662305.0	46775802.0	0.71	translocation_interchr	127	171	-1	74	75	26241	9338	heterozygous	1	314	-1.0	92.78	81.23	-1.0	-1.0	0.195	+/+	0.6
1358	1512	5	7	288137.2	276201.3	125669789.0	46765451.0	0.8	translocation_interchr	129	169	-1	57	56	26242	9337	heterozygous	1	314	-1.0	61.04	69.96	-1.0	-1.0	0.114	+/+	0.48
1357	1582	5	7	308203.9	314117.9	125662305.0	46775802.0	0.93	translocation_interchr	128	172	-1	74	75	26241	9338	heterozygous	1	314	-1.0	91.27	81.89	-1.0	-1.0	0.241	+/+	0.6
1356	1581	5	7	307696.2	313610.2	125662305.0	46775802.0	0.71	translocation_interchr	127	171	-1	74	75	26241	9338	heterozygous	1	314	-1.0	92.78	81.23	-1.0	-1.0	0.195	+/+	0.6
1358	1512	5	7	288137.2	276201.3	125669789.0	46765451.0	0.8	translocation_interchr	129	169	-1	57	56	26242	9337	heterozygous	1	314	-1.0	61.04	69.96	-1.0	-1.0	0.114	+/+	0.48
1356	1581	5	7	307696.2	313610.2	125662305.0	46775802.0	0.71	translocation_interchr	127	171	-1	74	75	26241	9338	heterozygous	1	314	-1.0	92.78	81.23	-1.0	-1.0	0.195	+/+	0.6
1359	1511	5	7	293173.4	281237.6	125669789.0	46765451.0	0.39	translocation_interchr	130	170	-1	59	58	26242	9337	heterozygous	1	314	-1.0	79.31	75.59	-1.0	-1.0	0.15	+/+	0.48
1361	1442	5	7	252539.7	257151.5	132327860.0	56245139.5	0.27	translocation_interchr	132	179	-1	41	42	27667	11189	heterozygous	1	315	-1.0	52.78	72.32	-1.0	-1.0	0.166	-/-	0.47
1360	1700	5	7	305727.6	291141.4	132320355.0	56256824.0	0.2	translocation_interchr	131	180	-1	46	45	27666	11190	heterozygous	1	315	-1.0	55.84	57.06	-1.0	-1.0	0.163	-/-	0.29
1360	1700	5	7	305727.6	291141.4	132320355.0	56256824.0	0.2	translocation_interchr	131	180	-1	46	45	27666	11190	heterozygous	1	315	-1.0	55.84	57.06	-1.0	-1.0	0.163	-/-	0.29
1361	1442	5	7	252539.7	257151.5	132327860.0	56245139.5	0.27	translocation_interchr	132	179	-1	41	42	27667	11189	heterozygous	1	315	-1.0	52.78	72.32	-1.0	-1.0	0.166	-/-	0.47
1360	1700	5	7	305727.6	291141.4	132320355.0	56256824.0	0.2	translocation_interchr	131	180	-1	46	45	27666	11190	heterozygous	1	315	-1.0	55.84	57.06	-1.0	-1.0	0.163	-/-	0.29
1362	1441	5	7	304411.1	309023.0	132327860.0	56245139.5	0.53	translocation_interchr	133	178	-1	53	54	27667	11189	heterozygous	1	315	-1.0	71.77	72.32	-1.0	-1.0	0.222	-/-	0.47
1486	191	6	6	297443.0	301220.4	108768309.0	113354493.0	0.99	deletion	142	152	-1	59	60	22321	23312	heterozygous	1	342	74.73	74.73	14791.91	4425.46	4582406.5	0.191	NA	0.51
1489	192	6	6	142817.6	146595.1	108768309.0	113354493.0	0.99	deletion	145	151	-1	23	24	22321	23312	heterozygous	1	342	30.13	30.13	14745.95	4425.46	4582406.4	0.129	NA	0.51
1490	940	6	15	1079897.8	1086478.4	108774129.0	64651998.0	0.91	translocation_interchr	146	358	-1	218	219	22322	9152	heterozygous	1	343	-1.0	266.25	74.46	-1.0	-1.0	0.287	-/-	0.47
1493	701	6	15	244421.3	242581.7	113353155.0	64657040.0	0.38	translocation_interchr	147	361	-1	33	32	23311	9153	heterozygous	2	343	-1.0	1226.28	46.49	-1.0	-1.0	0.198	-/-	0.61
1496	702	6	15	316986.8	315147.2	113353155.0	64657040.0	0.48	translocation_interchr	148	362	-1	43	42	23311	9153	heterozygous	2	343	-1.0	1227.62	60.73	-1.0	-1.0	0.21600000000000005	-/-	0.61
1551	1550	6	6	300067.8	283342.1	148570169.0	154459017.0	0.73	translocation_intrachr	153	158	-1	55	54	31098	32295	heterozygous	1	-1	-1.0	82.73	68.74	-1.0	-1.0	0.2	-/+	0.26
1552	1642	6	6	98831.9	541286.9	154231953.0	154450987.0	-1.0	duplication_inverted	154	157	-1	14	79	32261	32293	unknown	-1	-1	-1.0	60.51	43.76	-1.0	219034.0	0.215	NA	0.26
1553	1641	6	6	55588.5	497992.2	154231953.0	154450987.0	-1.0	duplication_inverted	155	156	-1	8	73	32261	32293	unknown	-1	-1	-1.0	53.17	43.76	-1.0	219034.0	0.154	NA	0.19
1625	1462	7	7	303261.9	303261.9	17942843.0	25847065.0	0.06	translocation_intrachr	161	168	-1	55	55	3422	5200	heterozygous	1	370	-1.0	77.56	70.73	-1.0	-1.0	0.113	-/+	0.31
1626	1461	7	7	298557.8	298557.8	17942843.0	25847065.0	0.13	translocation_intrachr	162	167	-1	53	53	3422	5200	heterozygous	1	370	-1.0	86.13	68.9	-1.0	-1.0	0.127	-/+	0.31
1628	1681	7	7	123481.9	494279.7	25663867.0	25848223.0	-1.0	duplication_inverted	163	166	-1	14	102	5157	5201	unknown	-1	-1	-1.0	69.98	45.95	-1.0	184356.0	0.122	NA	0.15
1630	1682	7	7	37154.0	580450.7	25577650.0	25848223.0	-1.0	duplication_inverted	164	165	-1	4	113	5147	5201	unknown	-1	-1	-1.0	69.98	65.3	-1.0	270573.0	0.203	NA	0.24
1633	1691	7	7	5598.8	539517.1	48450872.0	48716111.0	-1.0	duplication_inverted	173	175	-1	1	117	9642	9702	unknown	-1	-1	-1.0	80.45	74.67	-1.0	265239.0	0.175	NA	0.22
1634	1692	7	7	5531.3	539774.4	48450872.0	48716111.0	-1.0	duplication_inverted	174	176	-1	1	115	9642	9702	unknown	-1	-1	-1.0	78.14	68.96	-1.0	265239.0	0.099	NA	0.13
1653	1901	7	7	123410.5	217274.8	73178080.0	74825360.0	0.99	deletion	191	192	-1	16	26	13597	13812	heterozygous	2	373	39.88	39.88	51.59	4431.64	1553415.7	0.069	NA	0.07
1697	1632	7	7	300902.5	307951.1	89868585.0	92125534.0	1.0	inversion	196	199	1698	72	73	16994	17536	heterozygous	1	389	-1.0	64.95	84.05	-1.0	295637.0	0.156	NA	0.27 89868585.0 92421171.0 right
1698	1632	7	-1	5191.2	-1.0	92421171.0	-1.0	1.0	inversion_partial	199	-1	1697	1	-1	17611	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	295637.0	0.156	NA	0.27
1701	1631	7	7	295639.2	302687.8	89868585.0	92127159.0	0.99	inversion	197	200	1702	71	72	16994	17537	heterozygous	1	389	-1.0	53.71	81.68	-1.0	294012.0	0.118	NA	0.27 89868585.0 92421171.0 right
1702	1631	7	-1	1579.3	-1.0	92421171.0	-1.0	0.99	inversion_partial	200	-1	1701	1	-1	17611	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	294012.0	0.118	NA	0.27
1704	1600	7	7	290290.6	301919.7	90163612.0	92432311.0	1.0	inversion	198	201	1705	56	57	17054	17612	heterozygous	2	389	-1.0	68.12	83.14	-1.0	287569.5	0.312	NA	0.27 89876042.5 92432311.0 left
1705	1600	7	-1	3012.9	-1.0	89876042.5	-1.0	1.0	inversion_partial	198	-1	1704	1	-1	16995	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	287569.5	0.312	NA	0.27
1706	151	7	7	310982.4	324220.1	96083471.0	100563272.0	0.99	deletion	202	207	-1	72	73	18416	19215	heterozygous	1	390	91.65	91.65	14662.99	4406.6	4466563.3	0.261	NA	0.58
1706	151	7	7	310982.4	324220.1	96083471.0	100563272.0	0.99	deletion	202	207	-1	72	73	18416	19215	heterozygous	1	390	91.65	91.65	14662.99	4406.6	4466563.3	0.261	NA	0.58
1707	152	7	7	311018.0	324255.7	96083471.0	100563272.0	0.99	deletion	203	206	-1	72	73	18416	19215	heterozygous	1	390	91.65	91.65	14633.42	4406.6	4466563.3	0.262	NA	0.58
1707	152	7	7	311018.0	324255.7	96083471.0	100563272.0	0.99	deletion	203	206	-1	72	73	18416	19215	heterozygous	1	390	91.65	91.65	14633.42	4406.6	4466563.3	0.262	NA	0.58
1870	211	8	8	53222950.3	53227054.9	99133151.5	107157370.0	0.29	translocation_intrachr	216	225	-1	11009	11010	19759	21535	heterozygous	1	426	-1.0	13806.13	84.81	-1.0	-1.0	0.215	+/+	0.6
1902	212	8	8	53209555.9	53213660.6	99133151.5	107157370.0	0.6	translocation_intrachr	217	226	-1	11009	11010	19759	21535	heterozygous	1	426	-1.0	13822.8	88.99	-1.0	-1.0	0.184	+/+	0.6
2033	1092	9	9	430606.3	621724.5	39202342.0	42221793.0	0.01	deletion	232	247	-1	72	97	8545	9090	heterozygous	1	452	0.01	127.21	141.6	-1.0	2828332.9	0.183	NA	0.21
2185	1382	10	10	310371.5	310371.5	46991592.0	47870426.5	0.95	inversion	292	299	2186	61	61	8849	8998	heterozygous	1	489	-1.0	78.57	73.97	-1.0	189840.5	0.121	NA	0.21 46991592.0 48060267.0 right
2186	1382	10	-1	500225.9	-1.0	48060267.0	-1.0	0.95	inversion_partial	299	-1	2185	93	-1	9033	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	189840.5	0.121	NA	0.21
2187	1570	10	10	320783.7	320783.7	47274745.0	48060267.0	0.88	inversion	293	300	2188	56	56	8907	9033	heterozygous	2	489	-1.0	105.36	75.54	-1.0	283153.0	0.267	NA	0.21 46991592.0 48060267.0 left
2188	1570	10	-1	603647.2	-1.0	46991592.0	-1.0	0.88	inversion_partial	293	-1	2187	113	-1	8849	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	283153.0	0.267	NA	0.21
2198	62	10	10	70634214.3	70642132.8	63064957.0	63077496.0	1.0	inversion	296	304	2199	13420	13421	12357	12358	heterozygous	1	492	-1.0	4142.21	1169.05	-1.0	4221321.0	0.153	NA	0.96 63064957.0 67298817.0 right
2199	62	10	-1	66412439.8	-1.0	67298817.0	-1.0	1.0	inversion_partial	304	-1	2198	12489	-1	13312	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	4221321.0	0.153	NA	0.96
2207	61	10	10	70625635.6	70633554.1	63064957.0	63077496.0	1.0	inversion	297	303	2208	13421	13422	12357	12358	heterozygous	1	492	-1.0	4122.17	1168.27	-1.0	4221321.0	0.18	NA	0.96 63064957.0 67298817.0 right
2208	61	10	-1	66404086.9	-1.0	67298817.0	-1.0	1.0	inversion_partial	303	-1	2207	12490	-1	13312	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	4221321.0	0.18	NA	0.96
2215	61	10	10	66379869.6	66404086.9	67298817.0	67318345.0	1.0	inversion	303	307	2216	12489	12490	13312	13313	heterozygous	1	495	-1.0	1168.27	15985.17	-1.0	4221321.0	0.196	NA	0.96 63077496.0 67318345.0 left
2216	61	10	-1	70625635.6	-1.0	63077496.0	-1.0	1.0	inversion_partial	303	-1	2215	13421	-1	12358	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	4221321.0	0.196	NA	0.96
2219	62	10	10	66388222.4	66412439.8	67298817.0	67318345.0	1.0	inversion	304	308	2220	12488	12489	13312	13313	heterozygous	1	495	-1.0	1169.05	16020.22	-1.0	4221321.0	0.188	NA	0.96 63077496.0 67318345.0 left
2220	62	10	-1	70634214.3	-1.0	63077496.0	-1.0	1.0	inversion_partial	304	-1	2219	13420	-1	12358	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	4221321.0	0.188	NA	0.96
2329	732	11	11	280025.8	280779.0	43973764.0	46032042.0	0.99	deletion	313	318	-1	58	59	8939	9261	heterozygous	1	520	75.78	75.78	857.91	4431.94	2057524.8	0.255	NA	0.51
2329	732	11	11	280025.8	280779.0	43973764.0	46032042.0	0.99	deletion	313	318	-1	58	59	8939	9261	heterozygous	1	520	75.78	75.78	857.91	4431.94	2057524.8	0.255	NA	0.51
2332	731	11	11	232876.6	233629.8	43973764.0	46032042.0	0.99	deletion	315	317	-1	48	49	8939	9261	heterozygous	1	520	61.8	61.8	861.24	4431.94	2057524.8	0.217	NA	0.51
2332	731	11	11	232876.6	233629.8	43973764.0	46032042.0	0.99	deletion	315	317	-1	48	49	8939	9261	heterozygous	1	520	61.8	61.8	861.24	4431.94	2057524.8	0.217	NA	0.51
2858	1201	15	15	274496.9	465560.2	19993629.0	21190899.0	0.01	deletion	337	344	-1	24	48	32	218	heterozygous	1	649	0.01	69.56	114.03	-1.0	1006206.8	0.112	NA	0.23
2859	1202	15	15	262259.1	453036.5	19993629.0	21190899.0	0.01	deletion	338	345	-1	24	48	32	218	heterozygous	1	649	0.01	69.75	115.07	-1.0	1006492.6	0.14400000000000002	NA	0.23
3328	1590	20	20	296382.6	299429.6	39004489.0	43409479.0	0.99	inversion	412	415	3329	44	45	6824	7712	heterozygous	1	-1	-1.0	62.77	62.15	-1.0	295453.0	0.276	NA	0.18 38709036.0 43409479.0 left
3329	1590	20	-1	595031.5	-1.0	38709036.0	-1.0	0.99	inversion_partial	412	-1	3328	100	-1	6767	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	295453.0	0.276	NA	0.18
3330	1670	20	20	95993.6	545306.9	43181947.0	43395804.0	-1.0	duplication_inverted	413	414	-1	11	76	7679	7711	unknown	-1	-1	-1.0	58.91	45.31	-1.0	213857.0	0.257	NA	0.37
0 1 14454 2 H [1]
1 1 180424360.0 2 T [0, 2]
2 1 180424361.0 1 H [1, 3]
3 1 180504812.0 1 T [2, 4, 6]
4 1 180504813.0 1 H [3, 5]
5 1 188396351.0 1 T [4, 6]
6 1 188401632.5 2 H [3, 5, 7]
7 1 248943332.0 2 T [6]
8 2 7962.0 2 H [9, 10]
9 2 9334521.0 2 T [8, 10]
10 2 9334522.0 2 H [8, 9, 11]
11 2 242181357.0 2 T [10]
12 3 12920 2 H [13]
13 3 16168266.0 2 T [16, 12, 14]
14 3 16168267.0 1 H [13, 15]
15 3 20528202.0 1 T [16, 14]
16 3 20528203 2 H [17, 13, 15]
17 3 99871963.0 2 T [16, 18]
18 3 99884221.5 3 H [17, 19]
19 3 107200361.5 3 T [18, 20]
20 3 107205649 2 H [19, 21]
21 3 198230595 2 T [20]
22 4 0 2 H [23]
23 4 190202564 2 T [22]
24 5 19315.0 2 H [25]
25 5 101929010.75 2 T [24, 26, 78]
26 5 101929011.75 2 H [25, 27, 79]
27 5 124558735.0 2 T [26, 28]
28 5 124558736.0 2 H [64, 27, 29]
29 5 124661010.0 2 T [28, 30]
30 5 124661011.0 3 H [29, 31]
31 5 125561960.0 3 T [32, 30]
32 5 125561961.0 2 H [33, 31]
33 5 125666047.0 2 T [32, 34, 60]
34 5 125666048.0 2 H [33, 35, 59]
35 5 132324107.5 2 T [34, 36, 66]
36 5 132324108.5 2 H [65, 35, 37]
37 5 181472713.0 2 T [36]
38 6 76217.0 2 H [39]
39 6 108774129.0 2 T [40, 38]
40 6 108774130.0 2 H [41, 107, 39]
41 6 113353155.0 2 T [40, 42, 108]
42 6 113353156.0 2 H [41, 43]
43 6 148570169.0 2 T [42, 44]
44 6 148570170.0 2 H [50, 43, 45]
45 6 148707708.0 2 T [44, 46]
46 6 148707709.0 3 H [45, 47]
47 6 154277480.0 3 T [48, 46, 47]
48 6 154277481.0 2 H [49, 47]
49 6 154459017.0 2 T [48, 50]
50 6 154459018.0 2 H [49, 51, 44]
51 6 170739896.0 2 T [50]
52 7 10488.0 2 H [53]
53 7 17942843.0 2 T [52, 54]
54 7 17942844.0 2 H [58, 53, 55]
55 7 18242594.0 2 T [56, 54]
56 7 18242595.0 3 H [57, 55]
57 7 25806906.0 3 T [56, 57, 58]
58 7 25826986.0 2 H [57, 59, 54]
59 7 46788339.666666664 2 T [58, 60, 34]
60 7 46823767.0 3 H [33, 59, 61]
61 7 48619965.0 3 T [60, 61, 62]
62 7 48619966.0 2 H [61, 63]
63 7 48718524.0 2 T [64, 62]
64 7 48718525.0 2 H [65, 28, 63]
65 7 56250981.75 2 T [64, 66, 36]
66 7 56250982.75 2 H [65, 67, 35]
67 7 89872313.75 2 T [66, 68, 69]
68 7 89872314.75 2 H [67, 69, 70]
69 7 92426741.0 2 T [67, 68, 70]
70 7 92426742.0 2 H [68, 69, 71]
71 7 96018368.0 2 T [72, 74, 70]
72 7 96018369.0 1 H [73, 71]
73 7 100700113.0 1 T [72, 74]
74 7 100700114 2 H [73, 75, 71]
75 7 159334983 2 T [74]
76 8 0.0 2 H [77]
77 8 99138452.25 2 T [80, 76, 78]
78 8 99138453.25 2 H [25, 77, 79]
79 8 107155857.0 2 T [80, 26, 78]
80 8 107155858.0 2 H [81, 77, 79]
81 8 145076125.0 2 T [80]
82 9 0 2 H [83]
83 9 138334464 2 T [82]
84 10 0.0 2 H [85]
85 10 46991592.0 2 T [84, 86, 87]
86 10 46991593.0 2 H [88, 85, 87]
87 10 48060267.0 2 T [88, 85, 86]
88 10 48060268.0 2 H [89, 86, 87]
89 10 63071226.5 2 T [88, 90, 91]
90 10 63071227.5 2 H [89, 91, 92]
91 10 67308581.0 2 T [89, 90, 92]
92 10 67308582.0 2 H [90, 91, 93]
93 10 133785266.0 2 T [92]
94 11 60458 2 H [95]
95 11 43860775.0 2 T [96, 98, 94]
96 11 43860776.0 1 H [97, 95]
97 11 46032042.0 1 T [96, 98]
98 11 46032043 2 H [97, 99, 95]
99 11 135069564 2 T [98]
100 12 0 2 H [101]
101 12 133263960 2 T [100]
102 13 0 2 H [103]
103 13 114352102 2 T [102]
104 14 0 2 H [105]
105 14 106873282 2 T [104]
106 15 0.0 2 H [107]
107 15 64654519.0 2 T [40, 106, 108]
108 15 64654520.0 2 H [41, 107, 109]
109 15 101976509.0 2 T [108]
110 16 0 2 H [111]
111 16 90224751 2 T [110]
112 17 0 2 H [113]
113 17 83246392 2 T [112]
114 18 0 2 H [115]
115 18 80256374 2 T [114]
116 19 0 2 H [117]
117 19 58605715 2 T [116]
118 20 70157.0 2 H [119]
119 20 38709036.0 2 T [120, 118]
120 20 38709037.0 2 H [121, 126, 119]
121 20 38937747.0 2 T [120, 122]
122 20 38937748.0 3 H [121, 123]
123 20 43201255.0 3 T [122, 123, 124]
124 20 43201256.0 2 H [123, 125]
125 20 43409479.0 2 T [124, 126]
126 20 43409480.0 2 H [120, 125, 127]
127 20 64333717.0 2 T [126]
128 21 0 2 H [129]
129 21 46697230 2 T [128]
130 22 0 2 H [131]
131 22 50805587 2 T [130]
132 23 0 1 H [133]
133 23 156025612 1 T [132]
134 24 0 1 H [135]
135 24 57212132 1 T [134]
Siavash
[(0, 1, 2, 'S'), (1, 2, 0, 'R'), (3, 2, 1, 'S'), (3, 4, 0, 'R'), (4, 5, 1, 'S'), (5, 6, 0, 'R'), (6, 7, 2, 'S'), (9, 8, 2, 'S'), (9, 10, 0, 'R'), (10, 11, 2, 'S'), (12, 13, 2, 'S'), (13, 14, 0, 'R'), (14, 15, 1, 'S'), (15, 16, 0, 'R'), (16, 17, 2, 'S'), (17, 18, 0, 'R'), (18, 19, 3, 'S'), (19, 20, 0, 'R'), (20, 21, 2, 'S'), (22, 23, 2, 'S'), (25, 24, 2, 'S'), (25, 26, 0, 'R'), (27, 26, 2, 'S'), (27, 28, 0, 'R'), (28, 29, 2, 'S'), (29, 30, 0, 'R'), (30, 31, 3, 'S'), (31, 32, 0, 'R'), (33, 32, 2, 'S'), (33, 34, 0, 'R'), (35, 34, 2, 'S'), (35, 36, 0, 'R'), (36, 37, 2, 'S'), (39, 38, 2, 'S'), (39, 40, 0, 'R'), (41, 40, 2, 'S'), (41, 42, 0, 'R'), (43, 42, 2, 'S'), (43, 44, 0, 'R'), (44, 45, 2, 'S'), (45, 46, 0, 'R'), (46, 47, 3, 'S'), (47, 48, 0, 'R'), (49, 48, 2, 'S'), (49, 50, 0, 'R'), (50, 51, 2, 'S'), (53, 52, 2, 'S'), (53, 54, 0, 'R'), (54, 55, 2, 'S'), (55, 56, 0, 'R'), (56, 57, 3, 'S'), (57, 58, 0, 'R'), (58, 59, 2, 'S'), (59, 60, 0, 'R'), (60, 61, 3, 'S'), (61, 62, 0, 'R'), (63, 62, 2, 'S'), (63, 64, 0, 'R'), (65, 64, 2, 'S'), (65, 66, 0, 'R'), (67, 66, 2, 'S'), (67, 68, 0, 'R'), (69, 68, 2, 'S'), (69, 70, 0, 'R'), (70, 71, 2, 'S'), (71, 72, 0, 'R'), (72, 73, 1, 'S'), (73, 74, 0, 'R'), (74, 75, 2, 'S'), (77, 76, 2, 'S'), (77, 78, 0, 'R'), (79, 78, 2, 'S'), (79, 80, 0, 'R'), (80, 81, 2, 'S'), (82, 83, 2, 'S'), (85, 84, 2, 'S'), (85, 86, 0, 'R'), (87, 86, 2, 'S'), (87, 88, 0, 'R'), (89, 88, 2, 'S'), (89, 90, 0, 'R'), (91, 90, 2, 'S'), (91, 92, 0, 'R'), (92, 93, 2, 'S'), (94, 95, 2, 'S'), (95, 96, 0, 'R'), (96, 97, 1, 'S'), (97, 98, 0, 'R'), (98, 99, 2, 'S'), (100, 101, 2, 'S'), (102, 103, 2, 'S'), (104, 105, 2, 'S'), (107, 106, 2, 'S'), (107, 108, 0, 'R'), (108, 109, 2, 'S'), (110, 111, 2, 'S'), (112, 113, 2, 'S'), (114, 115, 2, 'S'), (116, 117, 2, 'S'), (119, 118, 2, 'S'), (119, 120, 0, 'R'), (120, 121, 2, 'S'), (121, 122, 0, 'R'), (122, 123, 3, 'S'), (123, 124, 0, 'R'), (125, 124, 2, 'S'), (125, 126, 0, 'R'), (126, 127, 2, 'S'), (128, 129, 2, 'S'), (130, 131, 2, 'S'), (132, 133, 1, 'S'), (134, 135, 1, 'S'), (3, 6, 0, 'SV'), (8, 10, 0, 'SV'), (13, 16, 0, 'SV'), (18, 19, 0, 'SV'), (25, 78, 0, 'SV'), (26, 79, 0, 'SV'), (28, 64, 0, 'SV'), (33, 60, 0, 'SV'), (34, 59, 0, 'SV'), (35, 66, 0, 'SV'), (36, 65, 0, 'SV'), (40, 107, 0, 'SV'), (41, 108, 0, 'SV'), (44, 50, 0, 'SV'), (47, 47, 0, 'SV'), (54, 58, 0, 'SV'), (57, 57, 0, 'SV'), (61, 61, 0, 'SV'), (67, 69, 0, 'SV'), (68, 70, 0, 'SV'), (71, 74, 0, 'SV'), (77, 80, 0, 'SV'), (85, 87, 0, 'SV'), (86, 88, 0, 'SV'), (89, 91, 0, 'SV'), (90, 92, 0, 'SV'), (95, 98, 0, 'SV'), (120, 126, 0, 'SV'), (123, 123, 0, 'SV')]
Siavash [(0, 1, 2, 'S'), (1, 2, 0, 'R'), (3, 2, 1, 'S'), (3, 4, 0, 'R'), (3, 6, 0, 'SV'), (4, 5, 1, 'S'), (5, 6, 0, 'R'), (6, 7, 2, 'S')]
Y0 (0, 1, 2, 'S')
X1 (1, 2, 0, 'R')
Y2 (3, 2, 1, 'S')
X3 (3, 4, 0, 'R')
X4 (3, 6, 0, 'SV')
Y5 (4, 5, 1, 'S')
X6 (5, 6, 0, 'R')
Y7 (6, 7, 2, 'S')
A0 A0
B0 B0
A1 A1
B1 B1
A2 A2
B2 B2
A3 A3
B3 B3
A4 A4
B4 B4
A5 A5
B5 B5
A6 A6
B6 B6
A7 A7
B7 B7
obj -2*X1 - 2*X3 - 2*X4 - 2*X6 - 2*Y0 - 2*Y2 - 2*Y5 - 2*Y7 + 12
Sv_sum T4
CN_tune 148*Z0 + 6*Z2 + 12*Z5 + 52*Z7
obj B0 + B1 + B2 + B3 + B4 + B5 + B6 + B7 - 10*T4 - 20*X1 - 20*X3 - 20*X4 - 20*X6 - 20*Y0 - 20*Y2 - 20*Y5 - 20*Y7 + 1480*Z0 + 60*Z2 + 120*Z5 + 520*Z7 + 120
Problem:
MINIMIZE
1*B0 + 1*B1 + 1*B2 + 1*B3 + 1*B4 + 1*B5 + 1*B6 + 1*B7 + -10*T4 + -20*X1 + -20*X3 + -20*X4 + -20*X6 + -20*Y0 + -20*Y2 + -20*Y5 + -20*Y7 + 1480*Z0 + 60*Z2 + 120*Z5 + 520*Z7 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: X3 >= 1

_C9: - 10 T4 + X4 <= 0

_C10: - T4 + X4 >= 0

_C11: X4 >= 0

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 2 A0 - B0 - Y0 = -2

_C20: X1 + Y0 <= 2

_C21: - 2 A1 - B1 + X1 + Y0 = -2

_C22: X1 + Y2 <= 1

_C23: - 2 A2 - B2 + X1 + Y2 = -1

_C24: X3 + X4 + Y2 <= 1

_C25: - 2 A3 - B3 + X3 + X4 + Y2 = -1

_C26: X3 + Y5 <= 1

_C27: - 2 A4 - B4 + X3 + Y5 = -1

_C28: X6 + Y5 <= 1

_C29: - 2 A5 - B5 + X6 + Y5 = -1

_C30: X4 + X6 + Y7 <= 2

_C31: - 2 A6 - B6 + X4 + X6 + Y7 = -2

_C32: - 2 A7 - B7 - Y7 = -2

VARIABLES
0 <= A0 Integer
0 <= A1 Integer
0 <= A2 Integer
0 <= A3 Integer
0 <= A4 Integer
0 <= A5 Integer
0 <= A6 Integer
0 <= A7 Integer
0 <= B0 <= 1 Integer
0 <= B1 <= 1 Integer
0 <= B2 <= 1 Integer
0 <= B3 <= 1 Integer
0 <= B4 <= 1 Integer
0 <= B5 <= 1 Integer
0 <= B6 <= 1 Integer
0 <= B7 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
0 <= X6 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Y7 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer
Z7 free Integer

Optimal
[A0, A1, A2, A3, A4, A5, A6, A7, B0, B1, B2, B3, B4, B5, B6, B7, T4, X1, X3, X4, X6, Y0, Y2, Y5, Y7, Z0, Z2, Z5, Z7]
1 2 1.0 R
3 4 1.0 R
3 6 0.0 SV
5 6 1.0 R
A0 = 1.0
A1 = 1.0
A2 = 1.0
A3 = 1.0
A4 = 1.0
A5 = 1.0
A6 = 1.0
A7 = 1.0
B0 = 0.0
B1 = 1.0
B2 = 0.0
B3 = 0.0
B4 = 0.0
B5 = 0.0
B6 = 1.0
B7 = 0.0
T4 = 0.0
X1 = 1.0
X3 = 1.0
X4 = 0.0
X6 = 1.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Y7 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
Z7 = 0.0
62.0 Objective Answer
Siavash [(9, 8, 2, 'S'), (8, 10, 0, 'SV'), (9, 10, 0, 'R'), (10, 11, 2, 'S')]
Y0 (9, 8, 2, 'S')
X1 (8, 10, 0, 'SV')
X2 (9, 10, 0, 'R')
Y3 (10, 11, 2, 'S')
A8 A8
B8 B8
A9 A9
B9 B9
A10 A10
B10 B10
A11 A11
B11 B11
obj -2*X1 - 2*X2 - 2*Y0 - 2*Y3 + 8
Sv_sum T1
CN_tune 4*Z0 + 188*Z3
obj B10 + B11 + B8 + B9 - 10*T1 - 20*X1 - 20*X2 - 20*Y0 - 20*Y3 + 40*Z0 + 1880*Z3 + 80
Problem:
MINIMIZE
1*B10 + 1*B11 + 1*B8 + 1*B9 + -10*T1 + -20*X1 + -20*X2 + -20*Y0 + -20*Y3 + 40*Z0 + 1880*Z3 + 80
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 10 T1 + X1 <= 0

_C5: - T1 + X1 >= 0

_C6: X1 >= 0

_C7: X2 >= 1

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X1 + Y0 <= 2

_C12: - 2 A8 - B8 + X1 + Y0 = -2

_C13: X2 + Y0 <= 2

_C14: - 2 A9 - B9 + X2 + Y0 = -2

_C15: X1 + X2 + Y3 <= 2

_C16: - 2 A10 - B10 + X1 + X2 + Y3 = -2

_C17: - 2 A11 - B11 - Y3 = -2

VARIABLES
0 <= A10 Integer
0 <= A11 Integer
0 <= A8 Integer
0 <= A9 Integer
0 <= B10 <= 1 Integer
0 <= B11 <= 1 Integer
0 <= B8 <= 1 Integer
0 <= B9 <= 1 Integer
0 <= T1 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
Y0 free Integer
Y3 free Integer
Z0 free Integer
Z3 free Integer

Optimal
[A10, A11, A8, A9, B10, B11, B8, B9, T1, X1, X2, Y0, Y3, Z0, Z3]
8 10 1.0 SV
9 10 1.0 R
A10 = 2.0
A11 = 1.0
A8 = 1.0
A9 = 1.0
B10 = 0.0
B11 = 0.0
B8 = 1.0
B9 = 1.0
T1 = 1.0
X1 = 1.0
X2 = 1.0
Y0 = 0.0
Y3 = 0.0
Z0 = 0.0
Z3 = 0.0
32.0 Objective Answer
Siavash [(12, 13, 2, 'S'), (13, 16, 0, 'SV'), (13, 14, 0, 'R'), (16, 17, 2, 'S'), (15, 16, 0, 'R'), (17, 18, 0, 'R'), (18, 19, 3, 'S'), (18, 19, 0, 'SV'), (19, 20, 0, 'R'), (20, 21, 2, 'S'), (14, 15, 1, 'S')]
Y0 (12, 13, 2, 'S')
X1 (13, 16, 0, 'SV')
X2 (13, 14, 0, 'R')
Y3 (16, 17, 2, 'S')
X4 (15, 16, 0, 'R')
X5 (17, 18, 0, 'R')
Y6 (18, 19, 3, 'S')
X7 (18, 19, 0, 'SV')
X8 (19, 20, 0, 'R')
Y9 (20, 21, 2, 'S')
Y10 (14, 15, 1, 'S')
A12 A12
B12 B12
A13 A13
B13 B13
A16 A16
B16 B16
A17 A17
B17 B17
A18 A18
B18 B18
A19 A19
B19 B19
A20 A20
B20 B20
A21 A21
B21 B21
A15 A15
B15 B15
A14 A14
B14 B14
obj -2*X1 - 2*X2 - 2*X4 - 2*X5 - 2*X7 - 2*X8 - 2*Y0 - 2*Y10 - 2*Y3 - 2*Y6 - 2*Y9 + 20
Sv_sum T1 + T7
CN_tune 16*Z0 + 6*Z10 + 32*Z3 + 12*Z6 + 76*Z9
obj B12 + B13 + B14 + B15 + B16 + B17 + B18 + B19 + B20 + B21 - 10*T1 - 10*T7 - 20*X1 - 20*X2 - 20*X4 - 20*X5 - 20*X7 - 20*X8 - 20*Y0 - 20*Y10 - 20*Y3 - 20*Y6 - 20*Y9 + 160*Z0 + 60*Z10 + 320*Z3 + 120*Z6 + 760*Z9 + 200
Problem:
MINIMIZE
1*B12 + 1*B13 + 1*B14 + 1*B15 + 1*B16 + 1*B17 + 1*B18 + 1*B19 + 1*B20 + 1*B21 + -10*T1 + -10*T7 + -20*X1 + -20*X2 + -20*X4 + -20*X5 + -20*X7 + -20*X8 + -20*Y0 + -20*Y10 + -20*Y3 + -20*Y6 + -20*Y9 + 160*Z0 + 60*Z10 + 320*Z3 + 120*Z6 + 760*Z9 + 200
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 10 T1 + X1 <= 0

_C5: - T1 + X1 >= 0

_C6: X1 >= 0

_C7: X2 >= 1

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: X5 >= 1

_C13: Y6 + Z6 >= 0

_C14: - Y6 + Z6 >= 0

_C15: Z6 <= 1

_C16: - 10 T7 + X7 <= 0

_C17: - T7 + X7 >= 0

_C18: X7 >= 0

_C19: X8 >= 1

_C20: Y9 + Z9 >= 0

_C21: - Y9 + Z9 >= 0

_C22: Z9 <= 1

_C23: Y10 + Z10 >= 0

_C24: - Y10 + Z10 >= 0

_C25: Z10 <= 1

_C26: - 2 A12 - B12 - Y0 = -2

_C27: X1 + X2 + Y0 <= 2

_C28: - 2 A13 - B13 + X1 + X2 + Y0 = -2

_C29: X1 + X4 + Y3 <= 2

_C30: - 2 A16 - B16 + X1 + X4 + Y3 = -2

_C31: X5 + Y3 <= 2

_C32: - 2 A17 - B17 + X5 + Y3 = -2

_C33: X5 + X7 + Y6 <= 3

_C34: - 2 A18 - B18 + X5 + X7 + Y6 = -3

_C35: X7 + X8 + Y6 <= 3

_C36: - 2 A19 - B19 + X7 + X8 + Y6 = -3

_C37: X8 + Y9 <= 2

_C38: - 2 A20 - B20 + X8 + Y9 = -2

_C39: - 2 A21 - B21 - Y9 = -2

_C40: X4 + Y10 <= 1

_C41: - 2 A15 - B15 + X4 + Y10 = -1

_C42: X2 + Y10 <= 1

_C43: - 2 A14 - B14 + X2 + Y10 = -1

VARIABLES
0 <= A12 Integer
0 <= A13 Integer
0 <= A14 Integer
0 <= A15 Integer
0 <= A16 Integer
0 <= A17 Integer
0 <= A18 Integer
0 <= A19 Integer
0 <= A20 Integer
0 <= A21 Integer
0 <= B12 <= 1 Integer
0 <= B13 <= 1 Integer
0 <= B14 <= 1 Integer
0 <= B15 <= 1 Integer
0 <= B16 <= 1 Integer
0 <= B17 <= 1 Integer
0 <= B18 <= 1 Integer
0 <= B19 <= 1 Integer
0 <= B20 <= 1 Integer
0 <= B21 <= 1 Integer
0 <= T1 <= 1 Integer
0 <= T7 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X7 Integer
0 <= X8 Integer
Y0 free Integer
Y10 free Integer
Y3 free Integer
Y6 free Integer
Y9 free Integer
Z0 free Integer
Z10 free Integer
Z3 free Integer
Z6 free Integer
Z9 free Integer

Optimal
[A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, B12, B13, B14, B15, B16, B17, B18, B19, B20, B21, T1, T7, X1, X2, X4, X5, X7, X8, Y0, Y10, Y3, Y6, Y9, Z0, Z10, Z3, Z6, Z9]
13 16 1.0 SV
13 14 1.0 R
15 16 1.0 R
17 18 2.0 R
18 19 1.0 SV
19 20 2.0 R
A12 = 1.0
A13 = 2.0
A14 = 1.0
A15 = 1.0
A16 = 2.0
A17 = 2.0
A18 = 3.0
A19 = 3.0
A20 = 2.0
A21 = 1.0
B12 = 0.0
B13 = 0.0
B14 = 0.0
B15 = 0.0
B16 = 0.0
B17 = 0.0
B18 = 0.0
B19 = 0.0
B20 = 0.0
B21 = 0.0
T1 = 1.0
T7 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
X5 = 2.0
X7 = 1.0
X8 = 2.0
Y0 = 0.0
Y10 = 0.0
Y3 = 0.0
Y6 = 0.0
Y9 = 0.0
Z0 = 0.0
Z10 = 0.0
Z3 = 0.0
Z6 = 0.0
Z9 = 0.0
20.0 Objective Answer
Siavash [(22, 23, 2, 'S')]
Y0 (22, 23, 2, 'S')
A22 A22
B22 B22
A23 A23
B23 B23
obj -2*Y0 + 4
Sv_sum 0
CN_tune 234*Z0
obj B22 + B23 - 20*Y0 + 2340*Z0 + 40
Problem:
MINIMIZE
1*B22 + 1*B23 + -20*Y0 + 2340*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A22 - B22 - Y0 = -2

_C5: - 2 A23 - B23 - Y0 = -2

VARIABLES
0 <= A22 Integer
0 <= A23 Integer
0 <= B22 <= 1 Integer
0 <= B23 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A22, A23, B22, B23, Y0, Z0]
A22 = 1.0
A23 = 1.0
B22 = 0.0
B23 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(25, 24, 2, 'S'), (25, 26, 0, 'R'), (25, 78, 0, 'SV'), (27, 26, 2, 'S'), (26, 79, 0, 'SV'), (27, 28, 0, 'R'), (28, 64, 0, 'SV'), (28, 29, 2, 'S'), (65, 64, 2, 'S'), (63, 64, 0, 'R'), (65, 66, 0, 'R'), (36, 65, 0, 'SV'), (67, 66, 2, 'S'), (35, 66, 0, 'SV'), (67, 68, 0, 'R'), (67, 69, 0, 'SV'), (69, 68, 2, 'S'), (68, 70, 0, 'SV'), (69, 70, 0, 'R'), (70, 71, 2, 'S'), (71, 72, 0, 'R'), (71, 74, 0, 'SV'), (72, 73, 1, 'S'), (73, 74, 0, 'R'), (74, 75, 2, 'S'), (35, 34, 2, 'S'), (35, 36, 0, 'R'), (33, 34, 0, 'R'), (34, 59, 0, 'SV'), (33, 32, 2, 'S'), (33, 60, 0, 'SV'), (31, 32, 0, 'R'), (30, 31, 3, 'S'), (29, 30, 0, 'R'), (59, 60, 0, 'R'), (60, 61, 3, 'S'), (58, 59, 2, 'S'), (57, 58, 0, 'R'), (54, 58, 0, 'SV'), (56, 57, 3, 'S'), (55, 56, 0, 'R'), (54, 55, 2, 'S'), (53, 54, 0, 'R'), (53, 52, 2, 'S'), (61, 62, 0, 'R'), (63, 62, 2, 'S'), (36, 37, 2, 'S'), (79, 80, 0, 'R'), (79, 78, 2, 'S'), (80, 81, 2, 'S'), (77, 80, 0, 'SV'), (77, 76, 2, 'S'), (77, 78, 0, 'R'), (57, 57, 0, 'SV'), (61, 61, 0, 'SV')]
Y0 (25, 24, 2, 'S')
X1 (25, 26, 0, 'R')
X2 (25, 78, 0, 'SV')
Y3 (27, 26, 2, 'S')
X4 (26, 79, 0, 'SV')
X5 (27, 28, 0, 'R')
X6 (28, 64, 0, 'SV')
Y7 (28, 29, 2, 'S')
Y8 (65, 64, 2, 'S')
X9 (63, 64, 0, 'R')
X10 (65, 66, 0, 'R')
X11 (36, 65, 0, 'SV')
Y12 (67, 66, 2, 'S')
X13 (35, 66, 0, 'SV')
X14 (67, 68, 0, 'R')
X15 (67, 69, 0, 'SV')
Y16 (69, 68, 2, 'S')
X17 (68, 70, 0, 'SV')
X18 (69, 70, 0, 'R')
Y19 (70, 71, 2, 'S')
X20 (71, 72, 0, 'R')
X21 (71, 74, 0, 'SV')
Y22 (72, 73, 1, 'S')
X23 (73, 74, 0, 'R')
Y24 (74, 75, 2, 'S')
Y25 (35, 34, 2, 'S')
X26 (35, 36, 0, 'R')
X27 (33, 34, 0, 'R')
X28 (34, 59, 0, 'SV')
Y29 (33, 32, 2, 'S')
X30 (33, 60, 0, 'SV')
X31 (31, 32, 0, 'R')
Y32 (30, 31, 3, 'S')
X33 (29, 30, 0, 'R')
X34 (59, 60, 0, 'R')
Y35 (60, 61, 3, 'S')
Y36 (58, 59, 2, 'S')
X37 (57, 58, 0, 'R')
X38 (54, 58, 0, 'SV')
Y39 (56, 57, 3, 'S')
X40 (55, 56, 0, 'R')
Y41 (54, 55, 2, 'S')
X42 (53, 54, 0, 'R')
Y43 (53, 52, 2, 'S')
X44 (61, 62, 0, 'R')
Y45 (63, 62, 2, 'S')
Y46 (36, 37, 2, 'S')
X47 (79, 80, 0, 'R')
Y48 (79, 78, 2, 'S')
Y49 (80, 81, 2, 'S')
X50 (77, 80, 0, 'SV')
Y51 (77, 76, 2, 'S')
X52 (77, 78, 0, 'R')
X53 (57, 57, 0, 'SV')
X54 (61, 61, 0, 'SV')
A24 A24
B24 B24
A25 A25
B25 B25
A26 A26
B26 B26
A27 A27
B27 B27
A28 A28
B28 B28
A64 A64
B64 B64
A65 A65
B65 B65
A66 A66
B66 B66
A67 A67
B67 B67
A68 A68
B68 B68
A69 A69
B69 B69
A70 A70
B70 B70
A71 A71
B71 B71
A72 A72
B72 B72
A73 A73
B73 B73
A74 A74
B74 B74
A75 A75
B75 B75
A35 A35
B35 B35
A34 A34
B34 B34
A33 A33
B33 B33
A32 A32
B32 B32
A31 A31
B31 B31
A30 A30
B30 B30
A29 A29
B29 B29
A60 A60
B60 B60
A59 A59
B59 B59
A58 A58
B58 B58
A57 A57
B57 B57
A56 A56
B56 B56
A55 A55
B55 B55
A54 A54
B54 B54
A53 A53
B53 B53
A52 A52
B52 B52
A61 A61
B61 B61
A62 A62
B62 B62
A63 A63
B63 B63
A36 A36
B36 B36
A37 A37
B37 B37
A79 A79
B79 B79
A80 A80
B80 B80
A81 A81
B81 B81
A77 A77
B77 B77
A76 A76
B76 B76
A78 A78
B78 B78
obj -2*X1 - 2*X10 - 2*X11 - 2*X13 - 2*X14 - 2*X15 - 2*X17 - 2*X18 - 2*X2 - 2*X20 - 2*X21 - 2*X23 - 2*X26 - 2*X27 - 2*X28 - 2*X30 - 2*X31 - 2*X33 - 2*X34 - 2*X37 - 2*X38 - 2*X4 - 2*X40 - 2*X42 - 2*X44 - 2*X47 - 2*X5 - 2*X50 - 2*X52 - 2*X53 - 2*X54 - 2*X6 - 2*X9 - 2*Y0 - 2*Y12 - 2*Y16 - 2*Y19 - 2*Y22 - 2*Y24 - 2*Y25 - 2*Y29 - 2*Y3 - 2*Y32 - 2*Y35 - 2*Y36 - 2*Y39 - 2*Y41 - 2*Y43 - 2*Y45 - 2*Y46 - 2*Y48 - 2*Y49 - 2*Y51 - 2*Y7 - 2*Y8 + 92
Sv_sum 8*T11 + 8*T13 + T15 + T17 + 8*T2 + T21 + 8*T28 + 8*T30 + T38 + 8*T4 + T50 + T53 + T54 + 8*T6
CN_tune 84*Z0 + 14*Z12 + 2*Z16 + 2*Z19 + 6*Z22 + 48*Z24 + 4*Z25 + 2*Z29 + 10*Z3 + 6*Z32 + 6*Z35 + 10*Z36 + 12*Z39 + 2*Z41 + 16*Z43 + 2*Z45 + 40*Z46 + 4*Z48 + 32*Z49 + 80*Z51 + 2*Z7 + 4*Z8
obj B24 + B25 + B26 + B27 + B28 + B29 + B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 + B52 + B53 + B54 + B55 + B56 + B57 + B58 + B59 + B60 + B61 + B62 + B63 + B64 + B65 + B66 + B67 + B68 + B69 + B70 + B71 + B72 + B73 + B74 + B75 + B76 + B77 + B78 + B79 + B80 + B81 - 80*T11 - 80*T13 - 10*T15 - 10*T17 - 80*T2 - 10*T21 - 80*T28 - 80*T30 - 10*T38 - 80*T4 - 10*T50 - 10*T53 - 10*T54 - 80*T6 - 20*X1 - 20*X10 - 20*X11 - 20*X13 - 20*X14 - 20*X15 - 20*X17 - 20*X18 - 20*X2 - 20*X20 - 20*X21 - 20*X23 - 20*X26 - 20*X27 - 20*X28 - 20*X30 - 20*X31 - 20*X33 - 20*X34 - 20*X37 - 20*X38 - 20*X4 - 20*X40 - 20*X42 - 20*X44 - 20*X47 - 20*X5 - 20*X50 - 20*X52 - 20*X53 - 20*X54 - 20*X6 - 20*X9 - 20*Y0 - 20*Y12 - 20*Y16 - 20*Y19 - 20*Y22 - 20*Y24 - 20*Y25 - 20*Y29 - 20*Y3 - 20*Y32 - 20*Y35 - 20*Y36 - 20*Y39 - 20*Y41 - 20*Y43 - 20*Y45 - 20*Y46 - 20*Y48 - 20*Y49 - 20*Y51 - 20*Y7 - 20*Y8 + 840*Z0 + 140*Z12 + 20*Z16 + 20*Z19 + 60*Z22 + 480*Z24 + 40*Z25 + 20*Z29 + 100*Z3 + 60*Z32 + 60*Z35 + 100*Z36 + 120*Z39 + 20*Z41 + 160*Z43 + 20*Z45 + 400*Z46 + 40*Z48 + 320*Z49 + 800*Z51 + 20*Z7 + 40*Z8 + 920
Problem:
MINIMIZE
1*B24 + 1*B25 + 1*B26 + 1*B27 + 1*B28 + 1*B29 + 1*B30 + 1*B31 + 1*B32 + 1*B33 + 1*B34 + 1*B35 + 1*B36 + 1*B37 + 1*B52 + 1*B53 + 1*B54 + 1*B55 + 1*B56 + 1*B57 + 1*B58 + 1*B59 + 1*B60 + 1*B61 + 1*B62 + 1*B63 + 1*B64 + 1*B65 + 1*B66 + 1*B67 + 1*B68 + 1*B69 + 1*B70 + 1*B71 + 1*B72 + 1*B73 + 1*B74 + 1*B75 + 1*B76 + 1*B77 + 1*B78 + 1*B79 + 1*B80 + 1*B81 + -80*T11 + -80*T13 + -10*T15 + -10*T17 + -80*T2 + -10*T21 + -80*T28 + -80*T30 + -10*T38 + -80*T4 + -10*T50 + -10*T53 + -10*T54 + -80*T6 + -20*X1 + -20*X10 + -20*X11 + -20*X13 + -20*X14 + -20*X15 + -20*X17 + -20*X18 + -20*X2 + -20*X20 + -20*X21 + -20*X23 + -20*X26 + -20*X27 + -20*X28 + -20*X30 + -20*X31 + -20*X33 + -20*X34 + -20*X37 + -20*X38 + -20*X4 + -20*X40 + -20*X42 + -20*X44 + -20*X47 + -20*X5 + -20*X50 + -20*X52 + -20*X53 + -20*X54 + -20*X6 + -20*X9 + -20*Y0 + -20*Y12 + -20*Y16 + -20*Y19 + -20*Y22 + -20*Y24 + -20*Y25 + -20*Y29 + -20*Y3 + -20*Y32 + -20*Y35 + -20*Y36 + -20*Y39 + -20*Y41 + -20*Y43 + -20*Y45 + -20*Y46 + -20*Y48 + -20*Y49 + -20*Y51 + -20*Y7 + -20*Y8 + 840*Z0 + 140*Z12 + 20*Z16 + 20*Z19 + 60*Z22 + 480*Z24 + 40*Z25 + 20*Z29 + 100*Z3 + 60*Z32 + 60*Z35 + 100*Z36 + 120*Z39 + 20*Z41 + 160*Z43 + 20*Z45 + 400*Z46 + 40*Z48 + 320*Z49 + 800*Z51 + 20*Z7 + 40*Z8 + 920
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: - 10 T6 + X6 <= 0

_C16: - T6 + X6 >= 0

_C17: X6 >= 0

_C18: Y7 + Z7 >= 0

_C19: - Y7 + Z7 >= 0

_C20: Z7 <= 1

_C21: Y8 + Z8 >= 0

_C22: - Y8 + Z8 >= 0

_C23: Z8 <= 1

_C24: X9 >= 1

_C25: X10 >= 1

_C26: - 10 T11 + X11 <= 0

_C27: - T11 + X11 >= 0

_C28: X11 >= 0

_C29: Y12 + Z12 >= 0

_C30: - Y12 + Z12 >= 0

_C31: Z12 <= 1

_C32: - 10 T13 + X13 <= 0

_C33: - T13 + X13 >= 0

_C34: X13 >= 0

_C35: X14 >= 1

_C36: - 10 T15 + X15 <= 0

_C37: - T15 + X15 >= 0

_C38: X15 >= 0

_C39: Y16 + Z16 >= 0

_C40: - Y16 + Z16 >= 0

_C41: Z16 <= 1

_C42: - 10 T17 + X17 <= 0

_C43: - T17 + X17 >= 0

_C44: X17 >= 0

_C45: X18 >= 1

_C46: Y19 + Z19 >= 0

_C47: - Y19 + Z19 >= 0

_C48: Z19 <= 1

_C49: X20 >= 1

_C50: - 10 T21 + X21 <= 0

_C51: - T21 + X21 >= 0

_C52: X21 >= 0

_C53: Y22 + Z22 >= 0

_C54: - Y22 + Z22 >= 0

_C55: Z22 <= 1

_C56: X23 >= 1

_C57: Y24 + Z24 >= 0

_C58: - Y24 + Z24 >= 0

_C59: Z24 <= 1

_C60: Y25 + Z25 >= 0

_C61: - Y25 + Z25 >= 0

_C62: Z25 <= 1

_C63: X26 >= 1

_C64: X27 >= 1

_C65: - 10 T28 + X28 <= 0

_C66: - T28 + X28 >= 0

_C67: X28 >= 0

_C68: Y29 + Z29 >= 0

_C69: - Y29 + Z29 >= 0

_C70: Z29 <= 1

_C71: - 10 T30 + X30 <= 0

_C72: - T30 + X30 >= 0

_C73: X30 >= 0

_C74: X31 >= 1

_C75: Y32 + Z32 >= 0

_C76: - Y32 + Z32 >= 0

_C77: Z32 <= 1

_C78: X33 >= 1

_C79: X34 >= 1

_C80: Y35 + Z35 >= 0

_C81: - Y35 + Z35 >= 0

_C82: Z35 <= 1

_C83: Y36 + Z36 >= 0

_C84: - Y36 + Z36 >= 0

_C85: Z36 <= 1

_C86: X37 >= 1

_C87: - 10 T38 + X38 <= 0

_C88: - T38 + X38 >= 0

_C89: X38 >= 0

_C90: Y39 + Z39 >= 0

_C91: - Y39 + Z39 >= 0

_C92: Z39 <= 1

_C93: X40 >= 1

_C94: Y41 + Z41 >= 0

_C95: - Y41 + Z41 >= 0

_C96: Z41 <= 1

_C97: X42 >= 1

_C98: Y43 + Z43 >= 0

_C99: - Y43 + Z43 >= 0

_C100: Z43 <= 1

_C101: X44 >= 1

_C102: Y45 + Z45 >= 0

_C103: - Y45 + Z45 >= 0

_C104: Z45 <= 1

_C105: Y46 + Z46 >= 0

_C106: - Y46 + Z46 >= 0

_C107: Z46 <= 1

_C108: X47 >= 1

_C109: Y48 + Z48 >= 0

_C110: - Y48 + Z48 >= 0

_C111: Z48 <= 1

_C112: Y49 + Z49 >= 0

_C113: - Y49 + Z49 >= 0

_C114: Z49 <= 1

_C115: - 10 T50 + X50 <= 0

_C116: - T50 + X50 >= 0

_C117: X50 >= 0

_C118: Y51 + Z51 >= 0

_C119: - Y51 + Z51 >= 0

_C120: Z51 <= 1

_C121: X52 >= 1

_C122: - 10 T53 + X53 <= 0

_C123: - T53 + X53 >= 0

_C124: X53 >= 0

_C125: - 10 T54 + X54 <= 0

_C126: - T54 + X54 >= 0

_C127: X54 >= 0

_C128: - 2 A24 - B24 - Y0 = -2

_C129: X1 + X2 + Y0 <= 2

_C130: - 2 A25 - B25 + X1 + X2 + Y0 = -2

_C131: X1 + X4 + Y3 <= 2

_C132: - 2 A26 - B26 + X1 + X4 + Y3 = -2

_C133: X5 + Y3 <= 2

_C134: - 2 A27 - B27 + X5 + Y3 = -2

_C135: X5 + X6 + Y7 <= 2

_C136: - 2 A28 - B28 + X5 + X6 + Y7 = -2

_C137: X6 + X9 + Y8 <= 2

_C138: - 2 A64 - B64 + X6 + X9 + Y8 = -2

_C139: X10 + X11 + Y8 <= 2

_C140: - 2 A65 - B65 + X10 + X11 + Y8 = -2

_C141: X10 + X13 + Y12 <= 2

_C142: - 2 A66 - B66 + X10 + X13 + Y12 = -2

_C143: X14 + X15 + Y12 <= 2

_C144: - 2 A67 - B67 + X14 + X15 + Y12 = -2

_C145: X14 + X17 + Y16 <= 2

_C146: - 2 A68 - B68 + X14 + X17 + Y16 = -2

_C147: X15 + X18 + Y16 <= 2

_C148: - 2 A69 - B69 + X15 + X18 + Y16 = -2

_C149: X17 + X18 + Y19 <= 2

_C150: - 2 A70 - B70 + X17 + X18 + Y19 = -2

_C151: X20 + X21 + Y19 <= 2

_C152: - 2 A71 - B71 + X20 + X21 + Y19 = -2

_C153: X20 + Y22 <= 1

_C154: - 2 A72 - B72 + X20 + Y22 = -1

_C155: X23 + Y22 <= 1

_C156: - 2 A73 - B73 + X23 + Y22 = -1

_C157: X21 + X23 + Y24 <= 2

_C158: - 2 A74 - B74 + X21 + X23 + Y24 = -2

_C159: - 2 A75 - B75 - Y24 = -2

_C160: X13 + X26 + Y25 <= 2

_C161: - 2 A35 - B35 + X13 + X26 + Y25 = -2

_C162: X27 + X28 + Y25 <= 2

_C163: - 2 A34 - B34 + X27 + X28 + Y25 = -2

_C164: X27 + X30 + Y29 <= 2

_C165: - 2 A33 - B33 + X27 + X30 + Y29 = -2

_C166: X31 + Y29 <= 2

_C167: - 2 A32 - B32 + X31 + Y29 = -2

_C168: X31 + Y32 <= 3

_C169: - 2 A31 - B31 + X31 + Y32 = -3

_C170: X33 + Y32 <= 3

_C171: - 2 A30 - B30 + X33 + Y32 = -3

_C172: X33 + Y7 <= 2

_C173: - 2 A29 - B29 + X33 + Y7 = -2

_C174: X30 + X34 + Y35 <= 3

_C175: - 2 A60 - B60 + X30 + X34 + Y35 = -3

_C176: X28 + X34 + Y36 <= 2

_C177: - 2 A59 - B59 + X28 + X34 + Y36 = -2

_C178: X37 + X38 + Y36 <= 2

_C179: - 2 A58 - B58 + X37 + X38 + Y36 = -2

_C180: X37 + 2 X53 + Y39 <= 3

_C181: - 2 A57 - B57 + X37 + 2 X53 + Y39 = -3

_C182: X40 + Y39 <= 3

_C183: - 2 A56 - B56 + X40 + Y39 = -3

_C184: X40 + Y41 <= 2

_C185: - 2 A55 - B55 + X40 + Y41 = -2

_C186: X38 + X42 + Y41 <= 2

_C187: - 2 A54 - B54 + X38 + X42 + Y41 = -2

_C188: X42 + Y43 <= 2

_C189: - 2 A53 - B53 + X42 + Y43 = -2

_C190: - 2 A52 - B52 - Y43 = -2

_C191: X44 + 2 X54 + Y35 <= 3

_C192: - 2 A61 - B61 + X44 + 2 X54 + Y35 = -3

_C193: X44 + Y45 <= 2

_C194: - 2 A62 - B62 + X44 + Y45 = -2

_C195: X9 + Y45 <= 2

_C196: - 2 A63 - B63 + X9 + Y45 = -2

_C197: X11 + X26 + Y46 <= 2

_C198: - 2 A36 - B36 + X11 + X26 + Y46 = -2

_C199: - 2 A37 - B37 - Y46 = -2

_C200: X4 + X47 + Y48 <= 2

_C201: - 2 A79 - B79 + X4 + X47 + Y48 = -2

_C202: X47 + X50 + Y49 <= 2

_C203: - 2 A80 - B80 + X47 + X50 + Y49 = -2

_C204: - 2 A81 - B81 - Y49 = -2

_C205: X50 + X52 + Y51 <= 2

_C206: - 2 A77 - B77 + X50 + X52 + Y51 = -2

_C207: - 2 A76 - B76 - Y51 = -2

_C208: X2 + X52 + Y48 <= 2

_C209: - 2 A78 - B78 + X2 + X52 + Y48 = -2

VARIABLES
0 <= A24 Integer
0 <= A25 Integer
0 <= A26 Integer
0 <= A27 Integer
0 <= A28 Integer
0 <= A29 Integer
0 <= A30 Integer
0 <= A31 Integer
0 <= A32 Integer
0 <= A33 Integer
0 <= A34 Integer
0 <= A35 Integer
0 <= A36 Integer
0 <= A37 Integer
0 <= A52 Integer
0 <= A53 Integer
0 <= A54 Integer
0 <= A55 Integer
0 <= A56 Integer
0 <= A57 Integer
0 <= A58 Integer
0 <= A59 Integer
0 <= A60 Integer
0 <= A61 Integer
0 <= A62 Integer
0 <= A63 Integer
0 <= A64 Integer
0 <= A65 Integer
0 <= A66 Integer
0 <= A67 Integer
0 <= A68 Integer
0 <= A69 Integer
0 <= A70 Integer
0 <= A71 Integer
0 <= A72 Integer
0 <= A73 Integer
0 <= A74 Integer
0 <= A75 Integer
0 <= A76 Integer
0 <= A77 Integer
0 <= A78 Integer
0 <= A79 Integer
0 <= A80 Integer
0 <= A81 Integer
0 <= B24 <= 1 Integer
0 <= B25 <= 1 Integer
0 <= B26 <= 1 Integer
0 <= B27 <= 1 Integer
0 <= B28 <= 1 Integer
0 <= B29 <= 1 Integer
0 <= B30 <= 1 Integer
0 <= B31 <= 1 Integer
0 <= B32 <= 1 Integer
0 <= B33 <= 1 Integer
0 <= B34 <= 1 Integer
0 <= B35 <= 1 Integer
0 <= B36 <= 1 Integer
0 <= B37 <= 1 Integer
0 <= B52 <= 1 Integer
0 <= B53 <= 1 Integer
0 <= B54 <= 1 Integer
0 <= B55 <= 1 Integer
0 <= B56 <= 1 Integer
0 <= B57 <= 1 Integer
0 <= B58 <= 1 Integer
0 <= B59 <= 1 Integer
0 <= B60 <= 1 Integer
0 <= B61 <= 1 Integer
0 <= B62 <= 1 Integer
0 <= B63 <= 1 Integer
0 <= B64 <= 1 Integer
0 <= B65 <= 1 Integer
0 <= B66 <= 1 Integer
0 <= B67 <= 1 Integer
0 <= B68 <= 1 Integer
0 <= B69 <= 1 Integer
0 <= B70 <= 1 Integer
0 <= B71 <= 1 Integer
0 <= B72 <= 1 Integer
0 <= B73 <= 1 Integer
0 <= B74 <= 1 Integer
0 <= B75 <= 1 Integer
0 <= B76 <= 1 Integer
0 <= B77 <= 1 Integer
0 <= B78 <= 1 Integer
0 <= B79 <= 1 Integer
0 <= B80 <= 1 Integer
0 <= B81 <= 1 Integer
0 <= T11 <= 1 Integer
0 <= T13 <= 1 Integer
0 <= T15 <= 1 Integer
0 <= T17 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T21 <= 1 Integer
0 <= T28 <= 1 Integer
0 <= T30 <= 1 Integer
0 <= T38 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= T50 <= 1 Integer
0 <= T53 <= 1 Integer
0 <= T54 <= 1 Integer
0 <= T6 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X11 Integer
0 <= X13 Integer
0 <= X14 Integer
0 <= X15 Integer
0 <= X17 Integer
0 <= X18 Integer
0 <= X2 Integer
0 <= X20 Integer
0 <= X21 Integer
0 <= X23 Integer
0 <= X26 Integer
0 <= X27 Integer
0 <= X28 Integer
0 <= X30 Integer
0 <= X31 Integer
0 <= X33 Integer
0 <= X34 Integer
0 <= X37 Integer
0 <= X38 Integer
0 <= X4 Integer
0 <= X40 Integer
0 <= X42 Integer
0 <= X44 Integer
0 <= X47 Integer
0 <= X5 Integer
0 <= X50 Integer
0 <= X52 Integer
0 <= X53 Integer
0 <= X54 Integer
0 <= X6 Integer
0 <= X9 Integer
Y0 free Integer
Y12 free Integer
Y16 free Integer
Y19 free Integer
Y22 free Integer
Y24 free Integer
Y25 free Integer
Y29 free Integer
Y3 free Integer
Y32 free Integer
Y35 free Integer
Y36 free Integer
Y39 free Integer
Y41 free Integer
Y43 free Integer
Y45 free Integer
Y46 free Integer
Y48 free Integer
Y49 free Integer
Y51 free Integer
Y7 free Integer
Y8 free Integer
Z0 free Integer
Z12 free Integer
Z16 free Integer
Z19 free Integer
Z22 free Integer
Z24 free Integer
Z25 free Integer
Z29 free Integer
Z3 free Integer
Z32 free Integer
Z35 free Integer
Z36 free Integer
Z39 free Integer
Z41 free Integer
Z43 free Integer
Z45 free Integer
Z46 free Integer
Z48 free Integer
Z49 free Integer
Z51 free Integer
Z7 free Integer
Z8 free Integer

Optimal
[A24, A25, A26, A27, A28, A29, A30, A31, A32, A33, A34, A35, A36, A37, A52, A53, A54, A55, A56, A57, A58, A59, A60, A61, A62, A63, A64, A65, A66, A67, A68, A69, A70, A71, A72, A73, A74, A75, A76, A77, A78, A79, A80, A81, B24, B25, B26, B27, B28, B29, B30, B31, B32, B33, B34, B35, B36, B37, B52, B53, B54, B55, B56, B57, B58, B59, B60, B61, B62, B63, B64, B65, B66, B67, B68, B69, B70, B71, B72, B73, B74, B75, B76, B77, B78, B79, B80, B81, T11, T13, T15, T17, T2, T21, T28, T30, T38, T4, T50, T53, T54, T6, X1, X10, X11, X13, X14, X15, X17, X18, X2, X20, X21, X23, X26, X27, X28, X30, X31, X33, X34, X37, X38, X4, X40, X42, X44, X47, X5, X50, X52, X53, X54, X6, X9, Y0, Y12, Y16, Y19, Y22, Y24, Y25, Y29, Y3, Y32, Y35, Y36, Y39, Y41, Y43, Y45, Y46, Y48, Y49, Y51, Y7, Y8, Z0, Z12, Z16, Z19, Z22, Z24, Z25, Z29, Z3, Z32, Z35, Z36, Z39, Z41, Z43, Z45, Z46, Z48, Z49, Z51, Z7, Z8]
25 26 1.0 R
65 66 1.0 R
36 65 1.0 SV
35 66 1.0 SV
67 68 1.0 R
67 69 1.0 SV
68 70 1.0 SV
69 70 1.0 R
25 78 1.0 SV
71 72 1.0 R
71 74 1.0 SV
73 74 1.0 R
35 36 1.0 R
33 34 1.0 R
34 59 1.0 SV
33 60 2.0 SV
31 32 3.0 R
29 30 3.0 R
59 60 1.0 R
57 58 1.0 R
54 58 1.0 SV
26 79 1.0 SV
55 56 3.0 R
53 54 2.0 R
61 62 1.0 R
79 80 1.0 R
27 28 2.0 R
77 80 1.0 SV
77 78 1.0 R
57 57 1.0 SV
61 61 1.0 SV
28 64 1.0 SV
63 64 1.0 R
A24 = 1.0
A25 = 2.0
A26 = 2.0
A27 = 2.0
A28 = 2.0
A29 = 2.0
A30 = 3.0
A31 = 3.0
A32 = 2.0
A33 = 2.0
A34 = 2.0
A35 = 2.0
A36 = 2.0
A37 = 1.0
A52 = 1.0
A53 = 2.0
A54 = 2.0
A55 = 2.0
A56 = 3.0
A57 = 3.0
A58 = 2.0
A59 = 2.0
A60 = 3.0
A61 = 3.0
A62 = 2.0
A63 = 2.0
A64 = 2.0
A65 = 2.0
A66 = 2.0
A67 = 2.0
A68 = 2.0
A69 = 2.0
A70 = 2.0
A71 = 2.0
A72 = 1.0
A73 = 1.0
A74 = 2.0
A75 = 1.0
A76 = 1.0
A77 = 2.0
A78 = 2.0
A79 = 2.0
A80 = 2.0
A81 = 1.0
B24 = 0.0
B25 = 0.0
B26 = 0.0
B27 = 0.0
B28 = 0.0
B29 = 0.0
B30 = 0.0
B31 = 0.0
B32 = 0.0
B33 = 0.0
B34 = 0.0
B35 = 0.0
B36 = 0.0
B37 = 0.0
B52 = 0.0
B53 = 0.0
B54 = 0.0
B55 = 0.0
B56 = 0.0
B57 = 0.0
B58 = 0.0
B59 = 0.0
B60 = 0.0
B61 = 0.0
B62 = 0.0
B63 = 0.0
B64 = 0.0
B65 = 0.0
B66 = 0.0
B67 = 0.0
B68 = 0.0
B69 = 0.0
B70 = 0.0
B71 = 0.0
B72 = 0.0
B73 = 0.0
B74 = 0.0
B75 = 0.0
B76 = 0.0
B77 = 0.0
B78 = 0.0
B79 = 0.0
B80 = 0.0
B81 = 0.0
T11 = 1.0
T13 = 1.0
T15 = 1.0
T17 = 1.0
T2 = 1.0
T21 = 1.0
T28 = 1.0
T30 = 1.0
T38 = 1.0
T4 = 1.0
T50 = 1.0
T53 = 1.0
T54 = 1.0
T6 = 1.0
X1 = 1.0
X10 = 1.0
X11 = 1.0
X13 = 1.0
X14 = 1.0
X15 = 1.0
X17 = 1.0
X18 = 1.0
X2 = 1.0
X20 = 1.0
X21 = 1.0
X23 = 1.0
X26 = 1.0
X27 = 1.0
X28 = 1.0
X30 = 2.0
X31 = 3.0
X33 = 3.0
X34 = 1.0
X37 = 1.0
X38 = 1.0
X4 = 1.0
X40 = 3.0
X42 = 2.0
X44 = 1.0
X47 = 1.0
X5 = 2.0
X50 = 1.0
X52 = 1.0
X53 = 1.0
X54 = 1.0
X6 = 1.0
X9 = 1.0
Y0 = 0.0
Y12 = 0.0
Y16 = 0.0
Y19 = 0.0
Y22 = 0.0
Y24 = 0.0
Y25 = 0.0
Y29 = -1.0
Y3 = 0.0
Y32 = 0.0
Y35 = 0.0
Y36 = 0.0
Y39 = 0.0
Y41 = -1.0
Y43 = 0.0
Y45 = 1.0
Y46 = 0.0
Y48 = 0.0
Y49 = 0.0
Y51 = 0.0
Y7 = -1.0
Y8 = 0.0
Z0 = 0.0
Z12 = 0.0
Z16 = 0.0
Z19 = 0.0
Z22 = 0.0
Z24 = 0.0
Z25 = 0.0
Z29 = 1.0
Z3 = 0.0
Z32 = 0.0
Z35 = 0.0
Z36 = 0.0
Z39 = 0.0
Z41 = 1.0
Z43 = 0.0
Z45 = 1.0
Z46 = 0.0
Z48 = 0.0
Z49 = 0.0
Z51 = 0.0
Z7 = 1.0
Z8 = 0.0
-430.0 Objective Answer
Siavash [(39, 38, 2, 'S'), (39, 40, 0, 'R'), (41, 40, 2, 'S'), (40, 107, 0, 'SV'), (41, 42, 0, 'R'), (41, 108, 0, 'SV'), (43, 42, 2, 'S'), (43, 44, 0, 'R'), (44, 50, 0, 'SV'), (44, 45, 2, 'S'), (49, 50, 0, 'R'), (50, 51, 2, 'S'), (49, 48, 2, 'S'), (47, 48, 0, 'R'), (46, 47, 3, 'S'), (45, 46, 0, 'R'), (107, 108, 0, 'R'), (108, 109, 2, 'S'), (107, 106, 2, 'S'), (47, 47, 0, 'SV')]
Y0 (39, 38, 2, 'S')
X1 (39, 40, 0, 'R')
Y2 (41, 40, 2, 'S')
X3 (40, 107, 0, 'SV')
X4 (41, 42, 0, 'R')
X5 (41, 108, 0, 'SV')
Y6 (43, 42, 2, 'S')
X7 (43, 44, 0, 'R')
X8 (44, 50, 0, 'SV')
Y9 (44, 45, 2, 'S')
X10 (49, 50, 0, 'R')
Y11 (50, 51, 2, 'S')
Y12 (49, 48, 2, 'S')
X13 (47, 48, 0, 'R')
Y14 (46, 47, 3, 'S')
X15 (45, 46, 0, 'R')
X16 (107, 108, 0, 'R')
Y17 (108, 109, 2, 'S')
Y18 (107, 106, 2, 'S')
X19 (47, 47, 0, 'SV')
A38 A38
B38 B38
A39 A39
B39 B39
A40 A40
B40 B40
A41 A41
B41 B41
A42 A42
B42 B42
A43 A43
B43 B43
A44 A44
B44 B44
A50 A50
B50 B50
A49 A49
B49 B49
A48 A48
B48 B48
A47 A47
B47 B47
A46 A46
B46 B46
A45 A45
B45 B45
A51 A51
B51 B51
A108 A108
B108 B108
A107 A107
B107 B107
A106 A106
B106 B106
A109 A109
B109 B109
obj -2*X1 - 2*X10 - 2*X13 - 2*X15 - 2*X16 - 2*X19 - 2*X3 - 2*X4 - 2*X5 - 2*X7 - 2*X8 - 2*Y0 - 2*Y11 - 2*Y12 - 2*Y14 - 2*Y17 - 2*Y18 - 2*Y2 - 2*Y6 - 2*Y9 + 38
Sv_sum T19 + 8*T3 + 8*T5 + T8
CN_tune 88*Z0 + 16*Z11 + 2*Z12 + 12*Z14 + 32*Z17 + 52*Z18 + 2*Z2 + 16*Z6 + 2*Z9
obj B106 + B107 + B108 + B109 + B38 + B39 + B40 + B41 + B42 + B43 + B44 + B45 + B46 + B47 + B48 + B49 + B50 + B51 - 10*T19 - 80*T3 - 80*T5 - 10*T8 - 20*X1 - 20*X10 - 20*X13 - 20*X15 - 20*X16 - 20*X19 - 20*X3 - 20*X4 - 20*X5 - 20*X7 - 20*X8 - 20*Y0 - 20*Y11 - 20*Y12 - 20*Y14 - 20*Y17 - 20*Y18 - 20*Y2 - 20*Y6 - 20*Y9 + 880*Z0 + 160*Z11 + 20*Z12 + 120*Z14 + 320*Z17 + 520*Z18 + 20*Z2 + 160*Z6 + 20*Z9 + 380
Problem:
MINIMIZE
1*B106 + 1*B107 + 1*B108 + 1*B109 + 1*B38 + 1*B39 + 1*B40 + 1*B41 + 1*B42 + 1*B43 + 1*B44 + 1*B45 + 1*B46 + 1*B47 + 1*B48 + 1*B49 + 1*B50 + 1*B51 + -10*T19 + -80*T3 + -80*T5 + -10*T8 + -20*X1 + -20*X10 + -20*X13 + -20*X15 + -20*X16 + -20*X19 + -20*X3 + -20*X4 + -20*X5 + -20*X7 + -20*X8 + -20*Y0 + -20*Y11 + -20*Y12 + -20*Y14 + -20*Y17 + -20*Y18 + -20*Y2 + -20*Y6 + -20*Y9 + 880*Z0 + 160*Z11 + 20*Z12 + 120*Z14 + 320*Z17 + 520*Z18 + 20*Z2 + 160*Z6 + 20*Z9 + 380
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: - 10 T5 + X5 <= 0

_C13: - T5 + X5 >= 0

_C14: X5 >= 0

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: X7 >= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: Y9 + Z9 >= 0

_C23: - Y9 + Z9 >= 0

_C24: Z9 <= 1

_C25: X10 >= 1

_C26: Y11 + Z11 >= 0

_C27: - Y11 + Z11 >= 0

_C28: Z11 <= 1

_C29: Y12 + Z12 >= 0

_C30: - Y12 + Z12 >= 0

_C31: Z12 <= 1

_C32: X13 >= 1

_C33: Y14 + Z14 >= 0

_C34: - Y14 + Z14 >= 0

_C35: Z14 <= 1

_C36: X15 >= 1

_C37: X16 >= 1

_C38: Y17 + Z17 >= 0

_C39: - Y17 + Z17 >= 0

_C40: Z17 <= 1

_C41: Y18 + Z18 >= 0

_C42: - Y18 + Z18 >= 0

_C43: Z18 <= 1

_C44: - 10 T19 + X19 <= 0

_C45: - T19 + X19 >= 0

_C46: X19 >= 0

_C47: - 2 A38 - B38 - Y0 = -2

_C48: X1 + Y0 <= 2

_C49: - 2 A39 - B39 + X1 + Y0 = -2

_C50: X1 + X3 + Y2 <= 2

_C51: - 2 A40 - B40 + X1 + X3 + Y2 = -2

_C52: X4 + X5 + Y2 <= 2

_C53: - 2 A41 - B41 + X4 + X5 + Y2 = -2

_C54: X4 + Y6 <= 2

_C55: - 2 A42 - B42 + X4 + Y6 = -2

_C56: X7 + Y6 <= 2

_C57: - 2 A43 - B43 + X7 + Y6 = -2

_C58: X7 + X8 + Y9 <= 2

_C59: - 2 A44 - B44 + X7 + X8 + Y9 = -2

_C60: X10 + X8 + Y11 <= 2

_C61: - 2 A50 - B50 + X10 + X8 + Y11 = -2

_C62: X10 + Y12 <= 2

_C63: - 2 A49 - B49 + X10 + Y12 = -2

_C64: X13 + Y12 <= 2

_C65: - 2 A48 - B48 + X13 + Y12 = -2

_C66: X13 + 2 X19 + Y14 <= 3

_C67: - 2 A47 - B47 + X13 + 2 X19 + Y14 = -3

_C68: X15 + Y14 <= 3

_C69: - 2 A46 - B46 + X15 + Y14 = -3

_C70: X15 + Y9 <= 2

_C71: - 2 A45 - B45 + X15 + Y9 = -2

_C72: - 2 A51 - B51 - Y11 = -2

_C73: X16 + X5 + Y17 <= 2

_C74: - 2 A108 - B108 + X16 + X5 + Y17 = -2

_C75: X16 + X3 + Y18 <= 2

_C76: - 2 A107 - B107 + X16 + X3 + Y18 = -2

_C77: - 2 A106 - B106 - Y18 = -2

_C78: - 2 A109 - B109 - Y17 = -2

VARIABLES
0 <= A106 Integer
0 <= A107 Integer
0 <= A108 Integer
0 <= A109 Integer
0 <= A38 Integer
0 <= A39 Integer
0 <= A40 Integer
0 <= A41 Integer
0 <= A42 Integer
0 <= A43 Integer
0 <= A44 Integer
0 <= A45 Integer
0 <= A46 Integer
0 <= A47 Integer
0 <= A48 Integer
0 <= A49 Integer
0 <= A50 Integer
0 <= A51 Integer
0 <= B106 <= 1 Integer
0 <= B107 <= 1 Integer
0 <= B108 <= 1 Integer
0 <= B109 <= 1 Integer
0 <= B38 <= 1 Integer
0 <= B39 <= 1 Integer
0 <= B40 <= 1 Integer
0 <= B41 <= 1 Integer
0 <= B42 <= 1 Integer
0 <= B43 <= 1 Integer
0 <= B44 <= 1 Integer
0 <= B45 <= 1 Integer
0 <= B46 <= 1 Integer
0 <= B47 <= 1 Integer
0 <= B48 <= 1 Integer
0 <= B49 <= 1 Integer
0 <= B50 <= 1 Integer
0 <= B51 <= 1 Integer
0 <= T19 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= T5 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X13 Integer
0 <= X15 Integer
0 <= X16 Integer
0 <= X19 Integer
0 <= X3 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X7 Integer
0 <= X8 Integer
Y0 free Integer
Y11 free Integer
Y12 free Integer
Y14 free Integer
Y17 free Integer
Y18 free Integer
Y2 free Integer
Y6 free Integer
Y9 free Integer
Z0 free Integer
Z11 free Integer
Z12 free Integer
Z14 free Integer
Z17 free Integer
Z18 free Integer
Z2 free Integer
Z6 free Integer
Z9 free Integer

Optimal
[A106, A107, A108, A109, A38, A39, A40, A41, A42, A43, A44, A45, A46, A47, A48, A49, A50, A51, B106, B107, B108, B109, B38, B39, B40, B41, B42, B43, B44, B45, B46, B47, B48, B49, B50, B51, T19, T3, T5, T8, X1, X10, X13, X15, X16, X19, X3, X4, X5, X7, X8, Y0, Y11, Y12, Y14, Y17, Y18, Y2, Y6, Y9, Z0, Z11, Z12, Z14, Z17, Z18, Z2, Z6, Z9]
39 40 2.0 R
49 50 2.0 R
47 48 1.0 R
45 46 2.0 R
107 108 1.0 R
47 47 1.0 SV
40 107 1.0 SV
41 42 2.0 R
41 108 1.0 SV
43 44 2.0 R
44 50 0.0 SV
A106 = 1.0
A107 = 2.0
A108 = 2.0
A109 = 1.0
A38 = 1.0
A39 = 2.0
A40 = 2.0
A41 = 2.0
A42 = 2.0
A43 = 2.0
A44 = 2.0
A45 = 2.0
A46 = 2.0
A47 = 3.0
A48 = 1.0
A49 = 2.0
A50 = 2.0
A51 = 1.0
B106 = 0.0
B107 = 0.0
B108 = 0.0
B109 = 0.0
B38 = 0.0
B39 = 0.0
B40 = 0.0
B41 = 0.0
B42 = 0.0
B43 = 0.0
B44 = 0.0
B45 = 0.0
B46 = 1.0
B47 = 0.0
B48 = 1.0
B49 = 0.0
B50 = 0.0
B51 = 0.0
T19 = 1.0
T3 = 1.0
T5 = 1.0
T8 = 0.0
X1 = 2.0
X10 = 2.0
X13 = 1.0
X15 = 2.0
X16 = 1.0
X19 = 1.0
X3 = 1.0
X4 = 2.0
X5 = 1.0
X7 = 2.0
X8 = 0.0
Y0 = 0.0
Y11 = 0.0
Y12 = 0.0
Y14 = 0.0
Y17 = 0.0
Y18 = 0.0
Y2 = -1.0
Y6 = 0.0
Y9 = 0.0
Z0 = 0.0
Z11 = 0.0
Z12 = 0.0
Z14 = 0.0
Z17 = 0.0
Z18 = 0.0
Z2 = 1.0
Z6 = 0.0
Z9 = 0.0
-48.0 Objective Answer
Siavash [(82, 83, 2, 'S')]
Y0 (82, 83, 2, 'S')
A82 A82
B82 B82
A83 A83
B83 B83
obj -2*Y0 + 4
Sv_sum 0
CN_tune 168*Z0
obj B82 + B83 - 20*Y0 + 1680*Z0 + 40
Problem:
MINIMIZE
1*B82 + 1*B83 + -20*Y0 + 1680*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A82 - B82 - Y0 = -2

_C5: - 2 A83 - B83 - Y0 = -2

VARIABLES
0 <= A82 Integer
0 <= A83 Integer
0 <= B82 <= 1 Integer
0 <= B83 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A82, A83, B82, B83, Y0, Z0]
A82 = 1.0
A83 = 1.0
B82 = 0.0
B83 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(85, 84, 2, 'S'), (85, 86, 0, 'R'), (85, 87, 0, 'SV'), (86, 88, 0, 'SV'), (87, 86, 2, 'S'), (89, 88, 2, 'S'), (87, 88, 0, 'R'), (89, 90, 0, 'R'), (89, 91, 0, 'SV'), (91, 90, 2, 'S'), (90, 92, 0, 'SV'), (91, 92, 0, 'R'), (92, 93, 2, 'S')]
Y0 (85, 84, 2, 'S')
X1 (85, 86, 0, 'R')
X2 (85, 87, 0, 'SV')
X3 (86, 88, 0, 'SV')
Y4 (87, 86, 2, 'S')
Y5 (89, 88, 2, 'S')
X6 (87, 88, 0, 'R')
X7 (89, 90, 0, 'R')
X8 (89, 91, 0, 'SV')
Y9 (91, 90, 2, 'S')
X10 (90, 92, 0, 'SV')
X11 (91, 92, 0, 'R')
Y12 (92, 93, 2, 'S')
A84 A84
B84 B84
A85 A85
B85 B85
A86 A86
B86 B86
A88 A88
B88 B88
A89 A89
B89 B89
A90 A90
B90 B90
A91 A91
B91 B91
A92 A92
B92 B92
A93 A93
B93 B93
A87 A87
B87 B87
obj -2*X1 - 2*X10 - 2*X11 - 2*X2 - 2*X3 - 2*X6 - 2*X7 - 2*X8 - 2*Y0 - 2*Y12 - 2*Y4 - 2*Y5 - 2*Y9 + 20
Sv_sum T10 + T2 + T3 + T8
CN_tune 40*Z0 + 56*Z12 + 2*Z4 + 8*Z5 + 2*Z9
obj B84 + B85 + B86 + B87 + B88 + B89 + B90 + B91 + B92 + B93 - 10*T10 - 10*T2 - 10*T3 - 10*T8 - 20*X1 - 20*X10 - 20*X11 - 20*X2 - 20*X3 - 20*X6 - 20*X7 - 20*X8 - 20*Y0 - 20*Y12 - 20*Y4 - 20*Y5 - 20*Y9 + 400*Z0 + 560*Z12 + 20*Z4 + 80*Z5 + 20*Z9 + 200
Problem:
MINIMIZE
1*B84 + 1*B85 + 1*B86 + 1*B87 + 1*B88 + 1*B89 + 1*B90 + 1*B91 + 1*B92 + 1*B93 + -10*T10 + -10*T2 + -10*T3 + -10*T8 + -20*X1 + -20*X10 + -20*X11 + -20*X2 + -20*X3 + -20*X6 + -20*X7 + -20*X8 + -20*Y0 + -20*Y12 + -20*Y4 + -20*Y5 + -20*Y9 + 400*Z0 + 560*Z12 + 20*Z4 + 80*Z5 + 20*Z9 + 200
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: Y4 + Z4 >= 0

_C12: - Y4 + Z4 >= 0

_C13: Z4 <= 1

_C14: Y5 + Z5 >= 0

_C15: - Y5 + Z5 >= 0

_C16: Z5 <= 1

_C17: X6 >= 1

_C18: X7 >= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: Y9 + Z9 >= 0

_C23: - Y9 + Z9 >= 0

_C24: Z9 <= 1

_C25: - 10 T10 + X10 <= 0

_C26: - T10 + X10 >= 0

_C27: X10 >= 0

_C28: X11 >= 1

_C29: Y12 + Z12 >= 0

_C30: - Y12 + Z12 >= 0

_C31: Z12 <= 1

_C32: - 2 A84 - B84 - Y0 = -2

_C33: X1 + X2 + Y0 <= 2

_C34: - 2 A85 - B85 + X1 + X2 + Y0 = -2

_C35: X1 + X3 + Y4 <= 2

_C36: - 2 A86 - B86 + X1 + X3 + Y4 = -2

_C37: X3 + X6 + Y5 <= 2

_C38: - 2 A88 - B88 + X3 + X6 + Y5 = -2

_C39: X7 + X8 + Y5 <= 2

_C40: - 2 A89 - B89 + X7 + X8 + Y5 = -2

_C41: X10 + X7 + Y9 <= 2

_C42: - 2 A90 - B90 + X10 + X7 + Y9 = -2

_C43: X11 + X8 + Y9 <= 2

_C44: - 2 A91 - B91 + X11 + X8 + Y9 = -2

_C45: X10 + X11 + Y12 <= 2

_C46: - 2 A92 - B92 + X10 + X11 + Y12 = -2

_C47: - 2 A93 - B93 - Y12 = -2

_C48: X2 + X6 + Y4 <= 2

_C49: - 2 A87 - B87 + X2 + X6 + Y4 = -2

VARIABLES
0 <= A84 Integer
0 <= A85 Integer
0 <= A86 Integer
0 <= A87 Integer
0 <= A88 Integer
0 <= A89 Integer
0 <= A90 Integer
0 <= A91 Integer
0 <= A92 Integer
0 <= A93 Integer
0 <= B84 <= 1 Integer
0 <= B85 <= 1 Integer
0 <= B86 <= 1 Integer
0 <= B87 <= 1 Integer
0 <= B88 <= 1 Integer
0 <= B89 <= 1 Integer
0 <= B90 <= 1 Integer
0 <= B91 <= 1 Integer
0 <= B92 <= 1 Integer
0 <= B93 <= 1 Integer
0 <= T10 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X11 Integer
0 <= X2 Integer
0 <= X3 Integer
0 <= X6 Integer
0 <= X7 Integer
0 <= X8 Integer
Y0 free Integer
Y12 free Integer
Y4 free Integer
Y5 free Integer
Y9 free Integer
Z0 free Integer
Z12 free Integer
Z4 free Integer
Z5 free Integer
Z9 free Integer

Optimal
[A84, A85, A86, A87, A88, A89, A90, A91, A92, A93, B84, B85, B86, B87, B88, B89, B90, B91, B92, B93, T10, T2, T3, T8, X1, X10, X11, X2, X3, X6, X7, X8, Y0, Y12, Y4, Y5, Y9, Z0, Z12, Z4, Z5, Z9]
85 86 1.0 R
90 92 1.0 SV
91 92 1.0 R
85 87 1.0 SV
86 88 1.0 SV
87 88 1.0 R
89 90 1.0 R
89 91 1.0 SV
A84 = 1.0
A85 = 2.0
A86 = 2.0
A87 = 2.0
A88 = 2.0
A89 = 2.0
A90 = 2.0
A91 = 2.0
A92 = 2.0
A93 = 1.0
B84 = 0.0
B85 = 0.0
B86 = 0.0
B87 = 0.0
B88 = 0.0
B89 = 0.0
B90 = 0.0
B91 = 0.0
B92 = 0.0
B93 = 0.0
T10 = 1.0
T2 = 1.0
T3 = 1.0
T8 = 1.0
X1 = 1.0
X10 = 1.0
X11 = 1.0
X2 = 1.0
X3 = 1.0
X6 = 1.0
X7 = 1.0
X8 = 1.0
Y0 = 0.0
Y12 = 0.0
Y4 = 0.0
Y5 = 0.0
Y9 = 0.0
Z0 = 0.0
Z12 = 0.0
Z4 = 0.0
Z5 = 0.0
Z9 = 0.0
0.0 Objective Answer
Siavash [(94, 95, 2, 'S'), (95, 96, 0, 'R'), (95, 98, 0, 'SV'), (96, 97, 1, 'S'), (97, 98, 0, 'R'), (98, 99, 2, 'S')]
Y0 (94, 95, 2, 'S')
X1 (95, 96, 0, 'R')
X2 (95, 98, 0, 'SV')
Y3 (96, 97, 1, 'S')
X4 (97, 98, 0, 'R')
Y5 (98, 99, 2, 'S')
A94 A94
B94 B94
A95 A95
B95 B95
A96 A96
B96 B96
A97 A97
B97 B97
A98 A98
B98 B98
A99 A99
B99 B99
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 - 2*Y5 + 10
Sv_sum T2
CN_tune 36*Z0 + 6*Z3 + 72*Z5
obj B94 + B95 + B96 + B97 + B98 + B99 - 10*T2 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 - 20*Y5 + 360*Z0 + 60*Z3 + 720*Z5 + 100
Problem:
MINIMIZE
1*B94 + 1*B95 + 1*B96 + 1*B97 + 1*B98 + 1*B99 + -10*T2 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + -20*Y5 + 360*Z0 + 60*Z3 + 720*Z5 + 100
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A94 - B94 - Y0 = -2

_C16: X1 + X2 + Y0 <= 2

_C17: - 2 A95 - B95 + X1 + X2 + Y0 = -2

_C18: X1 + Y3 <= 1

_C19: - 2 A96 - B96 + X1 + Y3 = -1

_C20: X4 + Y3 <= 1

_C21: - 2 A97 - B97 + X4 + Y3 = -1

_C22: X2 + X4 + Y5 <= 2

_C23: - 2 A98 - B98 + X2 + X4 + Y5 = -2

_C24: - 2 A99 - B99 - Y5 = -2

VARIABLES
0 <= A94 Integer
0 <= A95 Integer
0 <= A96 Integer
0 <= A97 Integer
0 <= A98 Integer
0 <= A99 Integer
0 <= B94 <= 1 Integer
0 <= B95 <= 1 Integer
0 <= B96 <= 1 Integer
0 <= B97 <= 1 Integer
0 <= B98 <= 1 Integer
0 <= B99 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A94, A95, A96, A97, A98, A99, B94, B95, B96, B97, B98, B99, T2, X1, X2, X4, Y0, Y3, Y5, Z0, Z3, Z5]
95 96 1.0 R
95 98 1.0 SV
97 98 1.0 R
A94 = 1.0
A95 = 2.0
A96 = 1.0
A97 = 1.0
A98 = 2.0
A99 = 1.0
B94 = 0.0
B95 = 0.0
B96 = 0.0
B97 = 0.0
B98 = 0.0
B99 = 0.0
T2 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(100, 101, 2, 'S')]
Y0 (100, 101, 2, 'S')
A100 A100
B100 B100
A101 A101
B101 B101
obj -2*Y0 + 4
Sv_sum 0
CN_tune 162*Z0
obj B100 + B101 - 20*Y0 + 1620*Z0 + 40
Problem:
MINIMIZE
1*B100 + 1*B101 + -20*Y0 + 1620*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A100 - B100 - Y0 = -2

_C5: - 2 A101 - B101 - Y0 = -2

VARIABLES
0 <= A100 Integer
0 <= A101 Integer
0 <= B100 <= 1 Integer
0 <= B101 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A100, A101, B100, B101, Y0, Z0]
A100 = 1.0
A101 = 1.0
B100 = 0.0
B101 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(102, 103, 2, 'S')]
Y0 (102, 103, 2, 'S')
A102 A102
B102 B102
A103 A103
B103 B103
obj -2*Y0 + 4
Sv_sum 0
CN_tune 138*Z0
obj B102 + B103 - 20*Y0 + 1380*Z0 + 40
Problem:
MINIMIZE
1*B102 + 1*B103 + -20*Y0 + 1380*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A102 - B102 - Y0 = -2

_C5: - 2 A103 - B103 - Y0 = -2

VARIABLES
0 <= A102 Integer
0 <= A103 Integer
0 <= B102 <= 1 Integer
0 <= B103 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A102, A103, B102, B103, Y0, Z0]
A102 = 1.0
A103 = 1.0
B102 = 0.0
B103 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(104, 105, 2, 'S')]
Y0 (104, 105, 2, 'S')
A104 A104
B104 B104
A105 A105
B105 B105
obj -2*Y0 + 4
Sv_sum 0
CN_tune 132*Z0
obj B104 + B105 - 20*Y0 + 1320*Z0 + 40
Problem:
MINIMIZE
1*B104 + 1*B105 + -20*Y0 + 1320*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A104 - B104 - Y0 = -2

_C5: - 2 A105 - B105 - Y0 = -2

VARIABLES
0 <= A104 Integer
0 <= A105 Integer
0 <= B104 <= 1 Integer
0 <= B105 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A104, A105, B104, B105, Y0, Z0]
A104 = 1.0
A105 = 1.0
B104 = 0.0
B105 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(110, 111, 2, 'S')]
Y0 (110, 111, 2, 'S')
A110 A110
B110 B110
A111 A111
B111 B111
obj -2*Y0 + 4
Sv_sum 0
CN_tune 114*Z0
obj B110 + B111 - 20*Y0 + 1140*Z0 + 40
Problem:
MINIMIZE
1*B110 + 1*B111 + -20*Y0 + 1140*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A110 - B110 - Y0 = -2

_C5: - 2 A111 - B111 - Y0 = -2

VARIABLES
0 <= A110 Integer
0 <= A111 Integer
0 <= B110 <= 1 Integer
0 <= B111 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A110, A111, B110, B111, Y0, Z0]
A110 = 1.0
A111 = 1.0
B110 = 0.0
B111 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(112, 113, 2, 'S')]
Y0 (112, 113, 2, 'S')
A112 A112
B112 B112
A113 A113
B113 B113
obj -2*Y0 + 4
Sv_sum 0
CN_tune 102*Z0
obj B112 + B113 - 20*Y0 + 1020*Z0 + 40
Problem:
MINIMIZE
1*B112 + 1*B113 + -20*Y0 + 1020*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A112 - B112 - Y0 = -2

_C5: - 2 A113 - B113 - Y0 = -2

VARIABLES
0 <= A112 Integer
0 <= A113 Integer
0 <= B112 <= 1 Integer
0 <= B113 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A112, A113, B112, B113, Y0, Z0]
A112 = 1.0
A113 = 1.0
B112 = 0.0
B113 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(114, 115, 2, 'S')]
Y0 (114, 115, 2, 'S')
A114 A114
B114 B114
A115 A115
B115 B115
obj -2*Y0 + 4
Sv_sum 0
CN_tune 102*Z0
obj B114 + B115 - 20*Y0 + 1020*Z0 + 40
Problem:
MINIMIZE
1*B114 + 1*B115 + -20*Y0 + 1020*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A114 - B114 - Y0 = -2

_C5: - 2 A115 - B115 - Y0 = -2

VARIABLES
0 <= A114 Integer
0 <= A115 Integer
0 <= B114 <= 1 Integer
0 <= B115 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A114, A115, B114, B115, Y0, Z0]
A114 = 1.0
A115 = 1.0
B114 = 0.0
B115 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(116, 117, 2, 'S')]
Y0 (116, 117, 2, 'S')
A116 A116
B116 B116
A117 A117
B117 B117
obj -2*Y0 + 4
Sv_sum 0
CN_tune 72*Z0
obj B116 + B117 - 20*Y0 + 720*Z0 + 40
Problem:
MINIMIZE
1*B116 + 1*B117 + -20*Y0 + 720*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A116 - B116 - Y0 = -2

_C5: - 2 A117 - B117 - Y0 = -2

VARIABLES
0 <= A116 Integer
0 <= A117 Integer
0 <= B116 <= 1 Integer
0 <= B117 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A116, A117, B116, B117, Y0, Z0]
A116 = 1.0
A117 = 1.0
B116 = 0.0
B117 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(119, 118, 2, 'S'), (119, 120, 0, 'R'), (120, 121, 2, 'S'), (120, 126, 0, 'SV'), (121, 122, 0, 'R'), (122, 123, 3, 'S'), (123, 124, 0, 'R'), (125, 124, 2, 'S'), (125, 126, 0, 'R'), (126, 127, 2, 'S'), (123, 123, 0, 'SV')]
Y0 (119, 118, 2, 'S')
X1 (119, 120, 0, 'R')
Y2 (120, 121, 2, 'S')
X3 (120, 126, 0, 'SV')
X4 (121, 122, 0, 'R')
Y5 (122, 123, 3, 'S')
X6 (123, 124, 0, 'R')
Y7 (125, 124, 2, 'S')
X8 (125, 126, 0, 'R')
Y9 (126, 127, 2, 'S')
X10 (123, 123, 0, 'SV')
A118 A118
B118 B118
A119 A119
B119 B119
A120 A120
B120 B120
A121 A121
B121 B121
A122 A122
B122 B122
A123 A123
B123 B123
A124 A124
B124 B124
A125 A125
B125 B125
A126 A126
B126 B126
A127 A127
B127 B127
obj -2*X1 - 2*X10 - 2*X3 - 2*X4 - 2*X6 - 2*X8 - 2*Y0 - 2*Y2 - 2*Y5 - 2*Y7 - 2*Y9 + 22
Sv_sum T10 + T3
CN_tune 32*Z0 + 2*Z2 + 6*Z5 + 2*Z7 + 20*Z9
obj B118 + B119 + B120 + B121 + B122 + B123 + B124 + B125 + B126 + B127 - 10*T10 - 10*T3 - 20*X1 - 20*X10 - 20*X3 - 20*X4 - 20*X6 - 20*X8 - 20*Y0 - 20*Y2 - 20*Y5 - 20*Y7 - 20*Y9 + 320*Z0 + 20*Z2 + 60*Z5 + 20*Z7 + 200*Z9 + 220
Problem:
MINIMIZE
1*B118 + 1*B119 + 1*B120 + 1*B121 + 1*B122 + 1*B123 + 1*B124 + 1*B125 + 1*B126 + 1*B127 + -10*T10 + -10*T3 + -20*X1 + -20*X10 + -20*X3 + -20*X4 + -20*X6 + -20*X8 + -20*Y0 + -20*Y2 + -20*Y5 + -20*Y7 + -20*Y9 + 320*Z0 + 20*Z2 + 60*Z5 + 20*Z7 + 200*Z9 + 220
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: X8 >= 1

_C20: Y9 + Z9 >= 0

_C21: - Y9 + Z9 >= 0

_C22: Z9 <= 1

_C23: - 10 T10 + X10 <= 0

_C24: - T10 + X10 >= 0

_C25: X10 >= 0

_C26: - 2 A118 - B118 - Y0 = -2

_C27: X1 + Y0 <= 2

_C28: - 2 A119 - B119 + X1 + Y0 = -2

_C29: X1 + X3 + Y2 <= 2

_C30: - 2 A120 - B120 + X1 + X3 + Y2 = -2

_C31: X4 + Y2 <= 2

_C32: - 2 A121 - B121 + X4 + Y2 = -2

_C33: X4 + Y5 <= 3

_C34: - 2 A122 - B122 + X4 + Y5 = -3

_C35: 2 X10 + X6 + Y5 <= 3

_C36: - 2 A123 - B123 + 2 X10 + X6 + Y5 = -3

_C37: X6 + Y7 <= 2

_C38: - 2 A124 - B124 + X6 + Y7 = -2

_C39: X8 + Y7 <= 2

_C40: - 2 A125 - B125 + X8 + Y7 = -2

_C41: X3 + X8 + Y9 <= 2

_C42: - 2 A126 - B126 + X3 + X8 + Y9 = -2

_C43: - 2 A127 - B127 - Y9 = -2

VARIABLES
0 <= A118 Integer
0 <= A119 Integer
0 <= A120 Integer
0 <= A121 Integer
0 <= A122 Integer
0 <= A123 Integer
0 <= A124 Integer
0 <= A125 Integer
0 <= A126 Integer
0 <= A127 Integer
0 <= B118 <= 1 Integer
0 <= B119 <= 1 Integer
0 <= B120 <= 1 Integer
0 <= B121 <= 1 Integer
0 <= B122 <= 1 Integer
0 <= B123 <= 1 Integer
0 <= B124 <= 1 Integer
0 <= B125 <= 1 Integer
0 <= B126 <= 1 Integer
0 <= B127 <= 1 Integer
0 <= T10 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X3 Integer
0 <= X4 Integer
0 <= X6 Integer
0 <= X8 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Y7 free Integer
Y9 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer
Z7 free Integer
Z9 free Integer

Optimal
[A118, A119, A120, A121, A122, A123, A124, A125, A126, A127, B118, B119, B120, B121, B122, B123, B124, B125, B126, B127, T10, T3, X1, X10, X3, X4, X6, X8, Y0, Y2, Y5, Y7, Y9, Z0, Z2, Z5, Z7, Z9]
119 120 2.0 R
123 123 1.0 SV
120 126 0.0 SV
121 122 2.0 R
123 124 1.0 R
125 126 2.0 R
A118 = 1.0
A119 = 2.0
A120 = 2.0
A121 = 2.0
A122 = 2.0
A123 = 3.0
A124 = 1.0
A125 = 2.0
A126 = 2.0
A127 = 1.0
B118 = 0.0
B119 = 0.0
B120 = 0.0
B121 = 0.0
B122 = 1.0
B123 = 0.0
B124 = 1.0
B125 = 0.0
B126 = 0.0
B127 = 0.0
T10 = 1.0
T3 = 0.0
X1 = 2.0
X10 = 1.0
X3 = 0.0
X4 = 2.0
X6 = 1.0
X8 = 2.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Y7 = 0.0
Y9 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
Z7 = 0.0
Z9 = 0.0
52.0 Objective Answer
Siavash [(128, 129, 2, 'S')]
Y0 (128, 129, 2, 'S')
A128 A128
B128 B128
A129 A129
B129 B129
obj -2*Y0 + 4
Sv_sum 0
CN_tune 60*Z0
obj B128 + B129 - 20*Y0 + 600*Z0 + 40
Problem:
MINIMIZE
1*B128 + 1*B129 + -20*Y0 + 600*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A128 - B128 - Y0 = -2

_C5: - 2 A129 - B129 - Y0 = -2

VARIABLES
0 <= A128 Integer
0 <= A129 Integer
0 <= B128 <= 1 Integer
0 <= B129 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A128, A129, B128, B129, Y0, Z0]
A128 = 1.0
A129 = 1.0
B128 = 0.0
B129 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(130, 131, 2, 'S')]
Y0 (130, 131, 2, 'S')
A130 A130
B130 B130
A131 A131
B131 B131
obj -2*Y0 + 4
Sv_sum 0
CN_tune 66*Z0
obj B130 + B131 - 20*Y0 + 660*Z0 + 40
Problem:
MINIMIZE
1*B130 + 1*B131 + -20*Y0 + 660*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A130 - B130 - Y0 = -2

_C5: - 2 A131 - B131 - Y0 = -2

VARIABLES
0 <= A130 Integer
0 <= A131 Integer
0 <= B130 <= 1 Integer
0 <= B131 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A130, A131, B130, B131, Y0, Z0]
A130 = 1.0
A131 = 1.0
B130 = 0.0
B131 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(132, 133, 1, 'S')]
Y0 (132, 133, 1, 'S')
A132 A132
B132 B132
A133 A133
B133 B133
obj -2*Y0 + 2
Sv_sum 0
CN_tune 192*Z0
obj B132 + B133 - 20*Y0 + 1920*Z0 + 20
Problem:
MINIMIZE
1*B132 + 1*B133 + -20*Y0 + 1920*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A132 - B132 - Y0 = -1

_C5: - 2 A133 - B133 - Y0 = -1

VARIABLES
0 <= A132 Integer
0 <= A133 Integer
0 <= B132 <= 1 Integer
0 <= B133 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A132, A133, B132, B133, Y0, Z0]
A132 = 0.0
A133 = 0.0
B132 = 1.0
B133 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
Siavash [(134, 135, 1, 'S')]
Y0 (134, 135, 1, 'S')
A134 A134
B134 B134
A135 A135
B135 B135
obj -2*Y0 + 2
Sv_sum 0
CN_tune 72*Z0
obj B134 + B135 - 20*Y0 + 720*Z0 + 20
Problem:
MINIMIZE
1*B134 + 1*B135 + -20*Y0 + 720*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A134 - B134 - Y0 = -1

_C5: - 2 A135 - B135 - Y0 = -1

VARIABLES
0 <= A134 Integer
0 <= A135 Integer
0 <= B134 <= 1 Integer
0 <= B135 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A134, A135, B134, B135, Y0, Z0]
A134 = 0.0
A135 = 0.0
B134 = 1.0
B135 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
[0, 1, 2, 3, 4, 5, 6, 7]
[(0, 1, 2, 'S'), (1, 2, 1, 'R'), (3, 2, 1, 'S'), (3, 4, 1, 'R'), (4, 5, 1, 'S'), (5, 6, 1, 'R'), (6, 7, 2, 'S')]
Component [0, 1, 2, 3, 4, 5, 6, 7]
Component edges [(0, 1, 2, 'S'), (1, 2, 1, 'R'), (3, 2, 1, 'S'), (3, 4, 1, 'R'), (4, 5, 1, 'S'), (5, 6, 1, 'R'), (6, 7, 2, 'S')]
ODD vertices [1, 6]
TOUR
[0, 7]
paths_score 0 [[0, 1, 2, 3, 4, 5, 6, 7], [7, 6, 1, 0]]
paths_score 0 [[7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 6, 7]]
all edges with dummy:  [(0, 1, 2, 'S'), (1, 2, 1, 'R'), (3, 2, 1, 'S'), (3, 4, 1, 'R'), (4, 5, 1, 'S'), (5, 6, 1, 'R'), (6, 7, 2, 'S'), (1, 6, 1, 'D')]
0 1 14454 2 H [1]
1 1 180424360.0 2 T [0, 2, 6]
2 1 180424361.0 1 H [1, 3]
3 1 180504812.0 1 T [2, 4]
4 1 180504813.0 1 H [3, 5]
5 1 188396351.0 1 T [4, 6]
6 1 188401632.5 2 H [1, 5, 7]
7 1 248943332.0 2 T [6]
Answer [0, 1, 2, 3, 4, 5, 6, 7, 6, 1, 0]
[8, 9, 10, 11]
[(9, 8, 2, 'S'), (8, 10, 1, 'SV'), (9, 10, 1, 'R'), (10, 11, 2, 'S')]
Component [8, 9, 10, 11]
Component edges [(9, 8, 2, 'S'), (8, 10, 1, 'SV'), (9, 10, 1, 'R'), (10, 11, 2, 'S')]
ODD vertices [8, 9]
TOUR
[8, 11]
all edges with dummy:  [(9, 8, 2, 'S'), (8, 10, 1, 'SV'), (9, 10, 1, 'R'), (10, 11, 2, 'S')]
8 2 7962.0 2 H [9, 10]
9 2 9334521.0 2 T [8, 10]
10 2 9334522.0 2 H [8, 9, 11]
11 2 242181357.0 2 T [10]
Answer [8, 9, 10, 11, 10, 8, 9]
[12, 13, 16, 17, 18, 19, 20, 21, 15, 14]
[(12, 13, 2, 'S'), (13, 16, 1, 'SV'), (13, 14, 1, 'R'), (16, 17, 2, 'S'), (15, 16, 1, 'R'), (17, 18, 2, 'R'), (18, 19, 1, 'SV'), (18, 19, 3, 'S'), (19, 20, 2, 'R'), (20, 21, 2, 'S'), (14, 15, 1, 'S')]
Component [12, 13, 16, 17, 18, 19, 20, 21, 15, 14]
Component edges [(12, 13, 2, 'S'), (13, 16, 1, 'SV'), (13, 14, 1, 'R'), (16, 17, 2, 'S'), (15, 16, 1, 'R'), (17, 18, 2, 'R'), (18, 19, 1, 'SV'), (18, 19, 3, 'S'), (19, 20, 2, 'R'), (20, 21, 2, 'S'), (14, 15, 1, 'S')]
ODD vertices []
TOUR
[12, 21]
paths_score 0 [[12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [21, 20, 19, 18, 19, 18, 17, 16, 13, 12]]
paths_score 0 [[21, 20, 19, 18, 17, 16, 15, 14, 13, 12], [12, 13, 16, 17, 18, 19, 18, 19, 20, 21]]
all edges with dummy:  [(12, 13, 2, 'S'), (13, 16, 1, 'SV'), (13, 14, 1, 'R'), (16, 17, 2, 'S'), (15, 16, 1, 'R'), (17, 18, 2, 'R'), (18, 19, 1, 'SV'), (18, 19, 3, 'S'), (19, 20, 2, 'R'), (20, 21, 2, 'S'), (14, 15, 1, 'S')]
12 3 12920 2 H [13]
13 3 16168266.0 2 T [16, 12, 14]
16 3 20528203 2 H [17, 13, 15]
17 3 99871963.0 2 T [16, 18]
18 3 99884221.5 3 H [17, 19]
19 3 107200361.5 3 T [18, 20]
20 3 107205649 2 H [19, 21]
21 3 198230595 2 T [20]
15 3 20528202.0 1 T [16, 14]
14 3 16168267.0 1 H [13, 15]
Answer [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 20, 19, 18, 19, 18, 17, 16, 13, 12]
[22, 23]
[(22, 23, 2, 'S')]
Component [22, 23]
Component edges [(22, 23, 2, 'S')]
ODD vertices []
TOUR
[22, 23]
paths_score 0 [[22, 23], [23, 22]]
paths_score 0 [[23, 22], [22, 23]]
all edges with dummy:  [(22, 23, 2, 'S')]
22 4 0 2 H [23]
23 4 190202564 2 T [22]
Answer [22, 23, 22]
[24, 25, 26, 27, 28, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 35, 34, 33, 32, 31, 30, 29, 60, 59, 58, 57, 56, 55, 54, 53, 52, 61, 62, 63, 36, 37, 79, 80, 81, 77, 76, 78]
[(25, 24, 2, 'S'), (25, 26, 1, 'R'), (25, 78, 1, 'SV'), (27, 26, 2, 'S'), (26, 79, 1, 'SV'), (27, 28, 2, 'R'), (28, 64, 1, 'SV'), (28, 29, 3, 'S'), (65, 64, 2, 'S'), (63, 64, 1, 'R'), (65, 66, 1, 'R'), (36, 65, 1, 'SV'), (67, 66, 2, 'S'), (35, 66, 1, 'SV'), (67, 68, 1, 'R'), (67, 69, 1, 'SV'), (69, 68, 2, 'S'), (68, 70, 1, 'SV'), (69, 70, 1, 'R'), (70, 71, 2, 'S'), (71, 72, 1, 'R'), (71, 74, 1, 'SV'), (72, 73, 1, 'S'), (73, 74, 1, 'R'), (74, 75, 2, 'S'), (35, 34, 2, 'S'), (35, 36, 1, 'R'), (33, 34, 1, 'R'), (34, 59, 1, 'SV'), (33, 32, 3, 'S'), (33, 60, 2, 'SV'), (31, 32, 3, 'R'), (30, 31, 3, 'S'), (29, 30, 3, 'R'), (59, 60, 1, 'R'), (60, 61, 3, 'S'), (58, 59, 2, 'S'), (57, 58, 1, 'R'), (54, 58, 1, 'SV'), (56, 57, 3, 'S'), (55, 56, 3, 'R'), (54, 55, 3, 'S'), (53, 54, 2, 'R'), (53, 52, 2, 'S'), (61, 62, 1, 'R'), (63, 62, 1, 'S'), (36, 37, 2, 'S'), (79, 80, 1, 'R'), (79, 78, 2, 'S'), (80, 81, 2, 'S'), (77, 80, 1, 'SV'), (77, 76, 2, 'S'), (77, 78, 1, 'R'), (57, 57, 1, 'SV'), (61, 61, 1, 'SV')]
Component [24, 25, 26, 27, 28, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 35, 34, 33, 32, 31, 30, 29, 60, 59, 58, 57, 56, 55, 54, 53, 52, 61, 62, 63, 36, 37, 79, 80, 81, 77, 76, 78]
Component edges [(25, 24, 2, 'S'), (25, 26, 1, 'R'), (25, 78, 1, 'SV'), (27, 26, 2, 'S'), (26, 79, 1, 'SV'), (27, 28, 2, 'R'), (28, 64, 1, 'SV'), (28, 29, 3, 'S'), (65, 64, 2, 'S'), (63, 64, 1, 'R'), (65, 66, 1, 'R'), (36, 65, 1, 'SV'), (67, 66, 2, 'S'), (35, 66, 1, 'SV'), (67, 68, 1, 'R'), (67, 69, 1, 'SV'), (69, 68, 2, 'S'), (68, 70, 1, 'SV'), (69, 70, 1, 'R'), (70, 71, 2, 'S'), (71, 72, 1, 'R'), (71, 74, 1, 'SV'), (72, 73, 1, 'S'), (73, 74, 1, 'R'), (74, 75, 2, 'S'), (35, 34, 2, 'S'), (35, 36, 1, 'R'), (33, 34, 1, 'R'), (34, 59, 1, 'SV'), (33, 32, 3, 'S'), (33, 60, 2, 'SV'), (31, 32, 3, 'R'), (30, 31, 3, 'S'), (29, 30, 3, 'R'), (59, 60, 1, 'R'), (60, 61, 3, 'S'), (58, 59, 2, 'S'), (57, 58, 1, 'R'), (54, 58, 1, 'SV'), (56, 57, 3, 'S'), (55, 56, 3, 'R'), (54, 55, 3, 'S'), (53, 54, 2, 'R'), (53, 52, 2, 'S'), (61, 62, 1, 'R'), (63, 62, 1, 'S'), (36, 37, 2, 'S'), (79, 80, 1, 'R'), (79, 78, 2, 'S'), (80, 81, 2, 'S'), (77, 80, 1, 'SV'), (77, 76, 2, 'S'), (77, 78, 1, 'R'), (57, 57, 1, 'SV'), (61, 61, 1, 'SV')]
ODD vertices []
TOUR
[24, 37, 52, 75, 76, 81]
paths_score 20 [[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52], [52, 53, 54, 55, 56, 57, 57, 56, 55, 54, 58, 59, 34, 35, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 71, 70, 68, 69, 67, 66, 65, 64, 28, 29, 30, 31, 32, 33, 60, 61, 61, 60, 33, 32, 31, 30, 29, 28, 27, 26, 79, 78, 77, 76], [76, 77, 80, 81], [81, 80, 79, 78, 25, 24]]
paths_score 20 [[37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24], [24, 25, 78, 79, 80, 81], [81, 80, 77, 76], [76, 77, 78, 79, 26, 27, 28, 29, 30, 31, 32, 33, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 71, 70, 68, 69, 67, 66, 35, 34, 59, 58, 57, 56, 55, 54, 53, 52], [52, 53, 54, 55, 56, 57, 57, 56, 55, 54, 58, 59, 60, 61, 61, 60, 33, 32, 31, 30, 29, 28, 64, 65, 36, 37]]
paths_score 20 [[52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 71, 70, 68, 69, 67, 66, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24], [24, 25, 78, 79, 80, 81], [81, 80, 77, 76], [76, 77, 78, 79, 26, 27, 28, 29, 30, 31, 32, 33, 60, 61, 61, 60, 33, 32, 31, 30, 29, 28, 64, 65, 36, 37], [37, 36, 35, 34, 59, 58, 54, 55, 56, 57, 57, 56, 55, 54, 53, 52]]
paths_score 20 [[75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52], [52, 53, 54, 55, 56, 57, 57, 56, 55, 54, 58, 59, 34, 35, 36, 37], [37, 36, 65, 64, 28, 29, 30, 31, 32, 33, 60, 61, 61, 60, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24], [24, 25, 78, 79, 80, 81], [81, 80, 77, 76], [76, 77, 78, 79, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 66, 67, 69, 68, 70, 71, 74, 75]]
paths_score 20 [[76, 77, 78, 79, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52], [52, 53, 54, 55, 56, 57, 57, 56, 55, 54, 58, 59, 34, 35, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 71, 70, 68, 69, 67, 66, 65, 64, 28, 29, 30, 31, 32, 33, 60, 61, 61, 60, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24], [24, 25, 78, 79, 80, 81], [81, 80, 77, 76]]
paths_score 20 [[81, 80, 79, 78, 25, 24], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52], [52, 53, 54, 55, 56, 57, 57, 56, 55, 54, 58, 59, 34, 35, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 71, 70, 68, 69, 67, 66, 65, 64, 28, 29, 30, 31, 32, 33, 60, 61, 61, 60, 33, 32, 31, 30, 29, 28, 27, 26, 79, 78, 77, 76], [76, 77, 80, 81]]
all edges with dummy:  [(25, 24, 2, 'S'), (25, 26, 1, 'R'), (25, 78, 1, 'SV'), (27, 26, 2, 'S'), (26, 79, 1, 'SV'), (27, 28, 2, 'R'), (28, 64, 1, 'SV'), (28, 29, 3, 'S'), (65, 64, 2, 'S'), (63, 64, 1, 'R'), (65, 66, 1, 'R'), (36, 65, 1, 'SV'), (67, 66, 2, 'S'), (35, 66, 1, 'SV'), (67, 68, 1, 'R'), (67, 69, 1, 'SV'), (69, 68, 2, 'S'), (68, 70, 1, 'SV'), (69, 70, 1, 'R'), (70, 71, 2, 'S'), (71, 72, 1, 'R'), (71, 74, 1, 'SV'), (72, 73, 1, 'S'), (73, 74, 1, 'R'), (74, 75, 2, 'S'), (35, 34, 2, 'S'), (35, 36, 1, 'R'), (33, 34, 1, 'R'), (34, 59, 1, 'SV'), (33, 32, 3, 'S'), (33, 60, 2, 'SV'), (31, 32, 3, 'R'), (30, 31, 3, 'S'), (29, 30, 3, 'R'), (59, 60, 1, 'R'), (60, 61, 3, 'S'), (58, 59, 2, 'S'), (57, 58, 1, 'R'), (54, 58, 1, 'SV'), (56, 57, 3, 'S'), (55, 56, 3, 'R'), (54, 55, 3, 'S'), (53, 54, 2, 'R'), (53, 52, 2, 'S'), (61, 62, 1, 'R'), (63, 62, 1, 'S'), (36, 37, 2, 'S'), (79, 80, 1, 'R'), (79, 78, 2, 'S'), (80, 81, 2, 'S'), (77, 80, 1, 'SV'), (77, 76, 2, 'S'), (77, 78, 1, 'R'), (57, 57, 1, 'SV'), (61, 61, 1, 'SV')]
24 5 19315.0 2 H [25]
25 5 101929010.75 2 T [24, 26, 78]
26 5 101929011.75 2 H [25, 27, 79]
27 5 124558735.0 2 T [26, 28]
28 5 124558736.0 2 H [64, 27, 29]
64 7 48718525.0 2 H [65, 28, 63]
65 7 56250981.75 2 T [64, 66, 36]
66 7 56250982.75 2 H [65, 67, 35]
67 7 89872313.75 2 T [66, 68, 69]
68 7 89872314.75 2 H [67, 69, 70]
69 7 92426741.0 2 T [67, 68, 70]
70 7 92426742.0 2 H [68, 69, 71]
71 7 96018368.0 2 T [72, 74, 70]
72 7 96018369.0 1 H [73, 71]
73 7 100700113.0 1 T [72, 74]
74 7 100700114 2 H [73, 75, 71]
75 7 159334983 2 T [74]
35 5 132324107.5 2 T [34, 36, 66]
34 5 125666048.0 2 H [33, 35, 59]
33 5 125666047.0 2 T [32, 34, 60]
32 5 125561961.0 2 H [33, 31]
31 5 125561960.0 3 T [32, 30]
30 5 124661011.0 3 H [29, 31]
29 5 124661010.0 2 T [28, 30]
60 7 46823767.0 3 H [33, 59, 61]
59 7 46788339.666666664 2 T [58, 60, 34]
58 7 25826986.0 2 H [57, 59, 54]
57 7 25806906.0 3 T [56, 57, 58]
56 7 18242595.0 3 H [57, 55]
55 7 18242594.0 2 T [56, 54]
54 7 17942844.0 2 H [58, 53, 55]
53 7 17942843.0 2 T [52, 54]
52 7 10488.0 2 H [53]
61 7 48619965.0 3 T [60, 61, 62]
62 7 48619966.0 2 H [61, 63]
63 7 48718524.0 2 T [64, 62]
36 5 132324108.5 2 H [65, 35, 37]
37 5 181472713.0 2 T [36]
79 8 107155857.0 2 T [80, 26, 78]
80 8 107155858.0 2 H [81, 77, 79]
81 8 145076125.0 2 T [80]
77 8 99138452.25 2 T [80, 76, 78]
76 8 0.0 2 H [77]
78 8 99138453.25 2 H [25, 77, 79]
Answer [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 36, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 53, 54, 55, 56, 57, 57, 56, 55, 54, 58, 59, 34, 35, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 74, 71, 70, 68, 69, 67, 66, 65, 64, 28, 29, 30, 31, 32, 33, 60, 61, 61, 60, 33, 32, 31, 30, 29, 28, 27, 26, 79, 78, 77, 76, 77, 80, 81, 80, 79, 78, 25, 24]
[38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 108, 107, 106, 109]
[(39, 38, 2, 'S'), (39, 40, 2, 'R'), (41, 40, 3, 'S'), (40, 107, 1, 'SV'), (41, 42, 2, 'R'), (41, 108, 1, 'SV'), (43, 42, 2, 'S'), (43, 44, 2, 'R'), (44, 45, 2, 'S'), (45, 46, 2, 'R'), (46, 47, 3, 'S'), (47, 48, 1, 'R'), (49, 48, 2, 'S'), (49, 50, 2, 'R'), (50, 51, 2, 'S'), (107, 108, 1, 'R'), (108, 109, 2, 'S'), (107, 106, 2, 'S'), (47, 47, 1, 'SV')]
Component [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 108, 107, 106, 109]
Component edges [(39, 38, 2, 'S'), (39, 40, 2, 'R'), (41, 40, 3, 'S'), (40, 107, 1, 'SV'), (41, 42, 2, 'R'), (41, 108, 1, 'SV'), (43, 42, 2, 'S'), (43, 44, 2, 'R'), (44, 45, 2, 'S'), (45, 46, 2, 'R'), (46, 47, 3, 'S'), (47, 48, 1, 'R'), (49, 48, 2, 'S'), (49, 50, 2, 'R'), (50, 51, 2, 'S'), (107, 108, 1, 'R'), (108, 109, 2, 'S'), (107, 106, 2, 'S'), (47, 47, 1, 'SV')]
ODD vertices [46, 48]
TOUR
[38, 51, 106, 109]
paths_score 0 [[38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [51, 50, 49, 48, 46, 47, 47, 46, 45, 44, 43, 42, 41, 40, 107, 106], [106, 107, 108, 109], [109, 108, 41, 40, 39, 38]]
paths_score 0 [[51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38], [38, 39, 40, 41, 108, 109], [109, 108, 107, 106], [106, 107, 40, 41, 42, 43, 44, 45, 46, 47, 47, 46, 48, 49, 50, 51]]
paths_score 0 [[106, 107, 108, 109], [109, 108, 41, 40, 39, 38], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [51, 50, 49, 48, 46, 47, 47, 46, 45, 44, 43, 42, 41, 40, 107, 106]]
paths_score 0 [[109, 108, 107, 106], [106, 107, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [51, 50, 49, 48, 46, 47, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38], [38, 39, 40, 41, 108, 109]]
all edges with dummy:  [(39, 38, 2, 'S'), (39, 40, 2, 'R'), (41, 40, 3, 'S'), (40, 107, 1, 'SV'), (41, 42, 2, 'R'), (41, 108, 1, 'SV'), (43, 42, 2, 'S'), (43, 44, 2, 'R'), (44, 45, 2, 'S'), (45, 46, 2, 'R'), (46, 47, 3, 'S'), (47, 48, 1, 'R'), (49, 48, 2, 'S'), (49, 50, 2, 'R'), (50, 51, 2, 'S'), (107, 108, 1, 'R'), (108, 109, 2, 'S'), (107, 106, 2, 'S'), (47, 47, 1, 'SV'), (46, 48, 1, 'D')]
38 6 76217.0 2 H [39]
39 6 108774129.0 2 T [40, 38]
40 6 108774130.0 2 H [41, 107, 39]
41 6 113353155.0 2 T [40, 42, 108]
42 6 113353156.0 2 H [41, 43]
43 6 148570169.0 2 T [42, 44]
44 6 148570170.0 2 H [43, 45]
45 6 148707708.0 2 T [44, 46]
46 6 148707709.0 3 H [48, 45, 47]
47 6 154277480.0 3 T [48, 46, 47]
48 6 154277481.0 2 H [49, 46, 47]
49 6 154459017.0 2 T [48, 50]
50 6 154459018.0 2 H [49, 51]
51 6 170739896.0 2 T [50]
108 15 64654520.0 2 H [41, 107, 109]
107 15 64654519.0 2 T [40, 106, 108]
106 15 0.0 2 H [107]
109 15 101976509.0 2 T [108]
Answer [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 50, 49, 48, 46, 47, 47, 46, 45, 44, 43, 42, 41, 40, 107, 106, 107, 108, 109, 108, 41, 40, 39, 38]
[82, 83]
[(82, 83, 2, 'S')]
Component [82, 83]
Component edges [(82, 83, 2, 'S')]
ODD vertices []
TOUR
[82, 83]
paths_score 0 [[82, 83], [83, 82]]
paths_score 0 [[83, 82], [82, 83]]
all edges with dummy:  [(82, 83, 2, 'S')]
82 9 0 2 H [83]
83 9 138334464 2 T [82]
Answer [82, 83, 82]
[84, 85, 86, 88, 89, 90, 91, 92, 93, 87]
[(85, 84, 2, 'S'), (85, 86, 1, 'R'), (85, 87, 1, 'SV'), (86, 88, 1, 'SV'), (87, 86, 2, 'S'), (89, 88, 2, 'S'), (87, 88, 1, 'R'), (89, 90, 1, 'R'), (89, 91, 1, 'SV'), (91, 90, 2, 'S'), (90, 92, 1, 'SV'), (91, 92, 1, 'R'), (92, 93, 2, 'S')]
Component [84, 85, 86, 88, 89, 90, 91, 92, 93, 87]
Component edges [(85, 84, 2, 'S'), (85, 86, 1, 'R'), (85, 87, 1, 'SV'), (86, 88, 1, 'SV'), (87, 86, 2, 'S'), (89, 88, 2, 'S'), (87, 88, 1, 'R'), (89, 90, 1, 'R'), (89, 91, 1, 'SV'), (91, 90, 2, 'S'), (90, 92, 1, 'SV'), (91, 92, 1, 'R'), (92, 93, 2, 'S')]
ODD vertices []
TOUR
[84, 93]
paths_score 0 [[84, 85, 86, 87, 88, 89, 90, 91, 92, 93], [93, 92, 90, 91, 89, 88, 86, 87, 85, 84]]
paths_score 0 [[93, 92, 91, 90, 89, 88, 87, 86, 85, 84], [84, 85, 87, 86, 88, 89, 91, 90, 92, 93]]
all edges with dummy:  [(85, 84, 2, 'S'), (85, 86, 1, 'R'), (85, 87, 1, 'SV'), (86, 88, 1, 'SV'), (87, 86, 2, 'S'), (89, 88, 2, 'S'), (87, 88, 1, 'R'), (89, 90, 1, 'R'), (89, 91, 1, 'SV'), (91, 90, 2, 'S'), (90, 92, 1, 'SV'), (91, 92, 1, 'R'), (92, 93, 2, 'S')]
84 10 0.0 2 H [85]
85 10 46991592.0 2 T [84, 86, 87]
86 10 46991593.0 2 H [88, 85, 87]
88 10 48060268.0 2 H [89, 86, 87]
89 10 63071226.5 2 T [88, 90, 91]
90 10 63071227.5 2 H [89, 91, 92]
91 10 67308581.0 2 T [89, 90, 92]
92 10 67308582.0 2 H [90, 91, 93]
93 10 133785266.0 2 T [92]
87 10 48060267.0 2 T [88, 85, 86]
Answer [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 92, 90, 91, 89, 88, 86, 87, 85, 84]
[94, 95, 96, 97, 98, 99]
[(94, 95, 2, 'S'), (95, 96, 1, 'R'), (95, 98, 1, 'SV'), (96, 97, 1, 'S'), (97, 98, 1, 'R'), (98, 99, 2, 'S')]
Component [94, 95, 96, 97, 98, 99]
Component edges [(94, 95, 2, 'S'), (95, 96, 1, 'R'), (95, 98, 1, 'SV'), (96, 97, 1, 'S'), (97, 98, 1, 'R'), (98, 99, 2, 'S')]
ODD vertices []
TOUR
[94, 99]
paths_score 0 [[94, 95, 96, 97, 98, 99], [99, 98, 95, 94]]
paths_score 0 [[99, 98, 97, 96, 95, 94], [94, 95, 98, 99]]
all edges with dummy:  [(94, 95, 2, 'S'), (95, 96, 1, 'R'), (95, 98, 1, 'SV'), (96, 97, 1, 'S'), (97, 98, 1, 'R'), (98, 99, 2, 'S')]
94 11 60458 2 H [95]
95 11 43860775.0 2 T [96, 98, 94]
96 11 43860776.0 1 H [97, 95]
97 11 46032042.0 1 T [96, 98]
98 11 46032043 2 H [97, 99, 95]
99 11 135069564 2 T [98]
Answer [94, 95, 96, 97, 98, 99, 98, 95, 94]
[100, 101]
[(100, 101, 2, 'S')]
Component [100, 101]
Component edges [(100, 101, 2, 'S')]
ODD vertices []
TOUR
[100, 101]
paths_score 0 [[100, 101], [101, 100]]
paths_score 0 [[101, 100], [100, 101]]
all edges with dummy:  [(100, 101, 2, 'S')]
100 12 0 2 H [101]
101 12 133263960 2 T [100]
Answer [100, 101, 100]
[102, 103]
[(102, 103, 2, 'S')]
Component [102, 103]
Component edges [(102, 103, 2, 'S')]
ODD vertices []
TOUR
[102, 103]
paths_score 0 [[102, 103], [103, 102]]
paths_score 0 [[103, 102], [102, 103]]
all edges with dummy:  [(102, 103, 2, 'S')]
102 13 0 2 H [103]
103 13 114352102 2 T [102]
Answer [102, 103, 102]
[104, 105]
[(104, 105, 2, 'S')]
Component [104, 105]
Component edges [(104, 105, 2, 'S')]
ODD vertices []
TOUR
[104, 105]
paths_score 0 [[104, 105], [105, 104]]
paths_score 0 [[105, 104], [104, 105]]
all edges with dummy:  [(104, 105, 2, 'S')]
104 14 0 2 H [105]
105 14 106873282 2 T [104]
Answer [104, 105, 104]
[110, 111]
[(110, 111, 2, 'S')]
Component [110, 111]
Component edges [(110, 111, 2, 'S')]
ODD vertices []
TOUR
[110, 111]
paths_score 0 [[110, 111], [111, 110]]
paths_score 0 [[111, 110], [110, 111]]
all edges with dummy:  [(110, 111, 2, 'S')]
110 16 0 2 H [111]
111 16 90224751 2 T [110]
Answer [110, 111, 110]
[112, 113]
[(112, 113, 2, 'S')]
Component [112, 113]
Component edges [(112, 113, 2, 'S')]
ODD vertices []
TOUR
[112, 113]
paths_score 0 [[112, 113], [113, 112]]
paths_score 0 [[113, 112], [112, 113]]
all edges with dummy:  [(112, 113, 2, 'S')]
112 17 0 2 H [113]
113 17 83246392 2 T [112]
Answer [112, 113, 112]
[114, 115]
[(114, 115, 2, 'S')]
Component [114, 115]
Component edges [(114, 115, 2, 'S')]
ODD vertices []
TOUR
[114, 115]
paths_score 0 [[114, 115], [115, 114]]
paths_score 0 [[115, 114], [114, 115]]
all edges with dummy:  [(114, 115, 2, 'S')]
114 18 0 2 H [115]
115 18 80256374 2 T [114]
Answer [114, 115, 114]
[116, 117]
[(116, 117, 2, 'S')]
Component [116, 117]
Component edges [(116, 117, 2, 'S')]
ODD vertices []
TOUR
[116, 117]
paths_score 0 [[116, 117], [117, 116]]
paths_score 0 [[117, 116], [116, 117]]
all edges with dummy:  [(116, 117, 2, 'S')]
116 19 0 2 H [117]
117 19 58605715 2 T [116]
Answer [116, 117, 116]
[118, 119, 120, 121, 122, 123, 124, 125, 126, 127]
[(119, 118, 2, 'S'), (119, 120, 2, 'R'), (120, 121, 2, 'S'), (121, 122, 2, 'R'), (122, 123, 3, 'S'), (123, 124, 1, 'R'), (125, 124, 2, 'S'), (125, 126, 2, 'R'), (126, 127, 2, 'S'), (123, 123, 1, 'SV')]
Component [118, 119, 120, 121, 122, 123, 124, 125, 126, 127]
Component edges [(119, 118, 2, 'S'), (119, 120, 2, 'R'), (120, 121, 2, 'S'), (121, 122, 2, 'R'), (122, 123, 3, 'S'), (123, 124, 1, 'R'), (125, 124, 2, 'S'), (125, 126, 2, 'R'), (126, 127, 2, 'S'), (123, 123, 1, 'SV')]
ODD vertices [122, 124]
TOUR
[118, 127]
paths_score 0 [[118, 119, 120, 121, 122, 123, 124, 125, 126, 127], [127, 126, 125, 124, 122, 123, 123, 122, 121, 120, 119, 118]]
paths_score 0 [[127, 126, 125, 124, 123, 122, 121, 120, 119, 118], [118, 119, 120, 121, 122, 123, 123, 122, 124, 125, 126, 127]]
all edges with dummy:  [(119, 118, 2, 'S'), (119, 120, 2, 'R'), (120, 121, 2, 'S'), (121, 122, 2, 'R'), (122, 123, 3, 'S'), (123, 124, 1, 'R'), (125, 124, 2, 'S'), (125, 126, 2, 'R'), (126, 127, 2, 'S'), (123, 123, 1, 'SV'), (122, 124, 1, 'D')]
118 20 70157.0 2 H [119]
119 20 38709036.0 2 T [120, 118]
120 20 38709037.0 2 H [121, 119]
121 20 38937747.0 2 T [120, 122]
122 20 38937748.0 3 H [121, 123, 124]
123 20 43201255.0 3 T [122, 123, 124]
124 20 43201256.0 2 H [122, 123, 125]
125 20 43409479.0 2 T [124, 126]
126 20 43409480.0 2 H [125, 127]
127 20 64333717.0 2 T [126]
Answer [118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 126, 125, 124, 122, 123, 123, 122, 121, 120, 119, 118]
[128, 129]
[(128, 129, 2, 'S')]
Component [128, 129]
Component edges [(128, 129, 2, 'S')]
ODD vertices []
TOUR
[128, 129]
paths_score 0 [[128, 129], [129, 128]]
paths_score 0 [[129, 128], [128, 129]]
all edges with dummy:  [(128, 129, 2, 'S')]
128 21 0 2 H [129]
129 21 46697230 2 T [128]
Answer [128, 129, 128]
[130, 131]
[(130, 131, 2, 'S')]
Component [130, 131]
Component edges [(130, 131, 2, 'S')]
ODD vertices []
TOUR
[130, 131]
paths_score 0 [[130, 131], [131, 130]]
paths_score 0 [[131, 130], [130, 131]]
all edges with dummy:  [(130, 131, 2, 'S')]
130 22 0 2 H [131]
131 22 50805587 2 T [130]
Answer [130, 131, 130]
[132, 133]
[(132, 133, 1, 'S')]
Component [132, 133]
Component edges [(132, 133, 1, 'S')]
ODD vertices [132, 133]
TOUR
[132, 133]
all edges with dummy:  [(132, 133, 1, 'S')]
132 23 0 1 H [133]
133 23 156025612 1 T [132]
Answer [132, 133]
[134, 135]
[(134, 135, 1, 'S')]
Component [134, 135]
Component edges [(134, 135, 1, 'S')]
ODD vertices [134, 135]
TOUR
[134, 135]
all edges with dummy:  [(134, 135, 1, 'S')]
134 24 0 1 H [135]
135 24 57212132 1 T [134]
Answer [134, 135]
{(0, 1, 'S'): 2, (1, 2, 'R'): 1, (3, 2, 'S'): 1, (3, 4, 'R'): 1, (4, 5, 'S'): 1, (5, 6, 'R'): 1, (6, 7, 'S'): 2, (1, 6, 'D'): 1}
split node indices:  [7]
debug paths separation:  [[0, 1, 2, 3, 4, 5, 6, 7], [7, 6, 1, 0]]
{(9, 8, 'S'): 2, (8, 10, 'SV'): 1, (9, 10, 'R'): 1, (10, 11, 'S'): 2}
split node indices:  [3]
debug paths separation:  [[8, 9, 10, 11], [11, 10, 8, 9]]
{(12, 13, 'S'): 2, (13, 16, 'SV'): 1, (13, 14, 'R'): 1, (16, 17, 'S'): 2, (15, 16, 'R'): 1, (17, 18, 'R'): 2, (18, 19, 'SV'): 1, (18, 19, 'S'): 3, (19, 20, 'R'): 2, (20, 21, 'S'): 2, (14, 15, 'S'): 1}
split node indices:  [9]
debug paths separation:  [[12, 13, 14, 15, 16, 17, 18, 19, 20, 21], [21, 20, 19, 18, 19, 18, 17, 16, 13, 12]]
{(22, 23, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[22, 23], [23, 22]]
{(25, 24, 'S'): 2, (25, 26, 'R'): 1, (25, 78, 'SV'): 1, (27, 26, 'S'): 2, (26, 79, 'SV'): 1, (27, 28, 'R'): 2, (28, 64, 'SV'): 1, (28, 29, 'S'): 3, (65, 64, 'S'): 2, (63, 64, 'R'): 1, (65, 66, 'R'): 1, (36, 65, 'SV'): 1, (67, 66, 'S'): 2, (35, 66, 'SV'): 1, (67, 68, 'R'): 1, (67, 69, 'SV'): 1, (69, 68, 'S'): 2, (68, 70, 'SV'): 1, (69, 70, 'R'): 1, (70, 71, 'S'): 2, (71, 72, 'R'): 1, (71, 74, 'SV'): 1, (72, 73, 'S'): 1, (73, 74, 'R'): 1, (74, 75, 'S'): 2, (35, 34, 'S'): 2, (35, 36, 'R'): 1, (33, 34, 'R'): 1, (34, 59, 'SV'): 1, (33, 32, 'S'): 3, (33, 60, 'SV'): 2, (31, 32, 'R'): 3, (30, 31, 'S'): 3, (29, 30, 'R'): 3, (59, 60, 'R'): 1, (60, 61, 'S'): 3, (58, 59, 'S'): 2, (57, 58, 'R'): 1, (54, 58, 'SV'): 1, (56, 57, 'S'): 3, (55, 56, 'R'): 3, (54, 55, 'S'): 3, (53, 54, 'R'): 2, (53, 52, 'S'): 2, (61, 62, 'R'): 1, (63, 62, 'S'): 1, (36, 37, 'S'): 2, (79, 80, 'R'): 1, (79, 78, 'S'): 2, (80, 81, 'S'): 2, (77, 80, 'SV'): 1, (77, 76, 'S'): 2, (77, 78, 'R'): 1, (57, 57, 'SV'): 1, (61, 61, 'SV'): 1}
split node indices:  [13, 28, 51, 82, 85]
debug paths separation:  [[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52], [52, 53, 54, 55, 56, 57, 57, 56, 55, 54, 58, 59, 34, 35, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 71, 70, 68, 69, 67, 66, 65, 64, 28, 29, 30, 31, 32, 33, 60, 61, 61, 60, 33, 32, 31, 30, 29, 28, 27, 26, 79, 78, 77, 76], [76, 77, 80, 81], [81, 80, 79, 78, 25, 24]]
{(39, 38, 'S'): 2, (39, 40, 'R'): 2, (41, 40, 'S'): 3, (40, 107, 'SV'): 1, (41, 42, 'R'): 2, (41, 108, 'SV'): 1, (43, 42, 'S'): 2, (43, 44, 'R'): 2, (44, 45, 'S'): 2, (45, 46, 'R'): 2, (46, 47, 'S'): 3, (47, 48, 'R'): 1, (49, 48, 'S'): 2, (49, 50, 'R'): 2, (50, 51, 'S'): 2, (107, 108, 'R'): 1, (108, 109, 'S'): 2, (107, 106, 'S'): 2, (47, 47, 'SV'): 1, (46, 48, 'D'): 1}
split node indices:  [13, 28, 31]
debug paths separation:  [[38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], [51, 50, 49, 48, 46, 47, 47, 46, 45, 44, 43, 42, 41, 40, 107, 106], [106, 107, 108, 109], [109, 108, 41, 40, 39, 38]]
{(82, 83, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[82, 83], [83, 82]]
{(85, 84, 'S'): 2, (85, 86, 'R'): 1, (85, 87, 'SV'): 1, (86, 88, 'SV'): 1, (87, 86, 'S'): 2, (89, 88, 'S'): 2, (87, 88, 'R'): 1, (89, 90, 'R'): 1, (89, 91, 'SV'): 1, (91, 90, 'S'): 2, (90, 92, 'SV'): 1, (91, 92, 'R'): 1, (92, 93, 'S'): 2}
split node indices:  [9]
debug paths separation:  [[84, 85, 86, 87, 88, 89, 90, 91, 92, 93], [93, 92, 90, 91, 89, 88, 86, 87, 85, 84]]
{(94, 95, 'S'): 2, (95, 96, 'R'): 1, (95, 98, 'SV'): 1, (96, 97, 'S'): 1, (97, 98, 'R'): 1, (98, 99, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[94, 95, 96, 97, 98, 99], [99, 98, 95, 94]]
{(100, 101, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[100, 101], [101, 100]]
{(102, 103, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[102, 103], [103, 102]]
{(104, 105, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[104, 105], [105, 104]]
{(110, 111, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[110, 111], [111, 110]]
{(112, 113, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[112, 113], [113, 112]]
{(114, 115, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[114, 115], [115, 114]]
{(116, 117, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[116, 117], [117, 116]]
{(119, 118, 'S'): 2, (119, 120, 'R'): 2, (120, 121, 'S'): 2, (121, 122, 'R'): 2, (122, 123, 'S'): 3, (123, 124, 'R'): 1, (125, 124, 'S'): 2, (125, 126, 'R'): 2, (126, 127, 'S'): 2, (123, 123, 'SV'): 1, (122, 124, 'D'): 1}
split node indices:  [9]
debug paths separation:  [[118, 119, 120, 121, 122, 123, 124, 125, 126, 127], [127, 126, 125, 124, 122, 123, 123, 122, 121, 120, 119, 118]]
{(128, 129, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[128, 129], [129, 128]]
{(130, 131, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[130, 131], [131, 130]]
{(132, 133, 'S'): 1}
split node indices:  []
debug paths separation:  [[132, 133]]
{(134, 135, 'S'): 1}
split node indices:  []
debug paths separation:  [[134, 135]]
