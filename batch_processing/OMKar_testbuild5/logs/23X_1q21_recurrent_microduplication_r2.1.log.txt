Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/916cf0e75676484fac58a32de54aef19-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/916cf0e75676484fac58a32de54aef19-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 220 COLUMNS
At line 1250 RHS
At line 1466 BOUNDS
At line 1651 ENDATA
Problem MODEL has 215 rows, 184 columns and 521 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -1760 - 0.00 seconds
Cgl0003I 0 fixed, 58 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 158 rows, 184 columns (184 integer (91 of which binary)) and 472 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 1.42109e-14
Cbc0038I Solution found of -1760
Cbc0038I Cleaned solution of -1760
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 4 continuous of which 42 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -1760 - took 0.00 seconds
Cbc0012I Integer solution of -1760 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0001I Search completed - best objective -1760, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -1760 to -1760
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -1760.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/240fa18a391643a8acb0e0e16caa9011-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/240fa18a391643a8acb0e0e16caa9011-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 33 COLUMNS
At line 164 RHS
At line 193 BOUNDS
At line 218 ENDATA
Problem MODEL has 28 rows, 24 columns and 64 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -100 - 0.00 seconds
Cgl0003I 0 fixed, 3 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 23 columns (23 integer (14 of which binary)) and 54 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -100
Cbc0038I Cleaned solution of -100
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 1 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -100 - took 0.00 seconds
Cbc0012I Integer solution of -100 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -100, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -100 to -100
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -100.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e707fb05ffcf4c8c855bb2366d525358-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/e707fb05ffcf4c8c855bb2366d525358-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 41 COLUMNS
At line 209 RHS
At line 246 BOUNDS
At line 278 ENDATA
Problem MODEL has 36 rows, 31 columns and 82 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -145 - 0.00 seconds
Cgl0003I 0 fixed, 10 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 25 rows, 30 columns (30 integer (15 of which binary)) and 71 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 4 integers unsatisfied sum - 2
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -130 iterations 2
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -99 iterations 5
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -99 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -99 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -99 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 581 iterations 3
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 581 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 581 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 582 iterations 1
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 582 iterations 0
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 582 iterations 0
Cbc0038I Pass  14: suminf.    0.50000 (1) obj. 532 iterations 4
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 552 iterations 1
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 552 iterations 0
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 552 iterations 0
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. -127 iterations 5
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. -127 iterations 0
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. -127 iterations 0
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. -67 iterations 2
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. -67 iterations 0
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -67 iterations 0
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. -66 iterations 1
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -66 iterations 0
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. -66 iterations 0
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -66 iterations 2
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. -66 iterations 0
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. -66 iterations 0
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. -136 iterations 5
Cbc0038I Rounding solution of -137 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Full problem 25 rows 30 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound improved solution from -137 to -140 (0.01 seconds)
Cbc0038I Round again with cutoff of -141.4
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass  30: suminf.    0.38000 (1) obj. -141.4 iterations 2
Cbc0038I Pass  31: suminf.    0.41997 (2) obj. -141.4 iterations 6
Cbc0038I Pass  32: suminf.    0.38000 (1) obj. -141.4 iterations 2
Cbc0038I Pass  33: suminf.    0.41333 (1) obj. -141.4 iterations 2
Cbc0038I Pass  34: suminf.    0.41333 (1) obj. -141.4 iterations 1
Cbc0038I Pass  35: suminf.    0.71997 (2) obj. -141.4 iterations 6
Cbc0038I Pass  36: suminf.    0.41333 (1) obj. -141.4 iterations 2
Cbc0038I Pass  37: suminf.    0.38000 (1) obj. -141.4 iterations 3
Cbc0038I Pass  38: suminf.    0.38000 (1) obj. -141.4 iterations 0
Cbc0038I Pass  39: suminf.    0.41997 (2) obj. -141.4 iterations 7
Cbc0038I Pass  40: suminf.    0.38000 (1) obj. -141.4 iterations 3
Cbc0038I Pass  41: suminf.    0.44666 (1) obj. -141.4 iterations 2
Cbc0038I Pass  42: suminf.    0.44666 (1) obj. -141.4 iterations 0
Cbc0038I Pass  43: suminf.    0.66001 (2) obj. -141.4 iterations 7
Cbc0038I Pass  44: suminf.    0.44666 (1) obj. -141.4 iterations 3
Cbc0038I Pass  45: suminf.    0.44666 (1) obj. -141.4 iterations 4
Cbc0038I Pass  46: suminf.    0.44666 (1) obj. -141.4 iterations 0
Cbc0038I Pass  47: suminf.    0.66001 (2) obj. -141.4 iterations 7
Cbc0038I Pass  48: suminf.    0.44666 (1) obj. -141.4 iterations 3
Cbc0038I Pass  49: suminf.    0.41333 (1) obj. -141.4 iterations 3
Cbc0038I Pass  50: suminf.    0.41333 (1) obj. -141.4 iterations 0
Cbc0038I Pass  51: suminf.    0.71997 (2) obj. -141.4 iterations 7
Cbc0038I Pass  52: suminf.    0.41333 (1) obj. -141.4 iterations 3
Cbc0038I Pass  53: suminf.    0.41333 (1) obj. -141.4 iterations 2
Cbc0038I Pass  54: suminf.    0.41333 (1) obj. -141.4 iterations 0
Cbc0038I Pass  55: suminf.    0.71997 (2) obj. -141.4 iterations 7
Cbc0038I Pass  56: suminf.    0.41333 (1) obj. -141.4 iterations 3
Cbc0038I Pass  57: suminf.    0.44666 (1) obj. -141.4 iterations 1
Cbc0038I Pass  58: suminf.    0.66001 (2) obj. -141.4 iterations 7
Cbc0038I Pass  59: suminf.    0.44666 (1) obj. -141.4 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -140 - took 0.00 seconds
Cbc0012I Integer solution of -138 found by DiveCoefficient after 6 iterations and 0 nodes (0.01 seconds)
Cbc0031I 5 added rows had average density of 6.2
Cbc0013I At root node, 5 cuts changed objective from -145 to -138 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 7 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 4 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -138, took 6 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -145 to -138
Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 3 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -138.00000000
Enumerated nodes:               0
Total iterations:               6
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1af3387ec02f4008bd3b796a0608e001-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/1af3387ec02f4008bd3b796a0608e001-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 97 COLUMNS
At line 538 RHS
At line 631 BOUNDS
At line 712 ENDATA
Problem MODEL has 92 rows, 80 columns and 220 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -660 - 0.00 seconds
Cgl0003I 0 fixed, 26 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 68 rows, 80 columns (80 integer (40 of which binary)) and 200 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -660
Cbc0038I Cleaned solution of -660
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 4 continuous of which 18 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -660 - took 0.00 seconds
Cbc0012I Integer solution of -660 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -660, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -660 to -660
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -660.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/1c537ac303584cffb100f18361ab139c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/1c537ac303584cffb100f18361ab139c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 164 RHS
At line 192 BOUNDS
At line 217 ENDATA
Problem MODEL has 27 rows, 24 columns and 65 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -100 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 24 columns (24 integer (13 of which binary)) and 60 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -100
Cbc0038I Cleaned solution of -100
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -100 - took 0.00 seconds
Cbc0012I Integer solution of -100 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -100, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -100 to -100
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -100.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/4f355a38376d4001a5edb2dce0e73a67-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/4f355a38376d4001a5edb2dce0e73a67-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/9993616bf50044059b2e2e26e7fe7430-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/9993616bf50044059b2e2e26e7fe7430-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 32 COLUMNS
At line 164 RHS
At line 192 BOUNDS
At line 217 ENDATA
Problem MODEL has 27 rows, 24 columns and 65 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -100 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 20 rows, 24 columns (24 integer (13 of which binary)) and 60 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -100
Cbc0038I Cleaned solution of -100
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -100 - took 0.00 seconds
Cbc0012I Integer solution of -100 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -100, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -100 to -100
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -100.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/610632c64c59493ea6d7a149e7388696-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/610632c64c59493ea6d7a149e7388696-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -80 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -80 - took 0.00 seconds
Cbc0012I Integer solution of -80 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -80, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -80 to -80
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -80.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/f976ddf822ca4d94b3eac036be7e0ba7-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/f976ddf822ca4d94b3eac036be7e0ba7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/806be23468b14c85baf35e67963c9bb2-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/806be23468b14c85baf35e67963c9bb2-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 48 COLUMNS
At line 252 RHS
At line 296 BOUNDS
At line 335 ENDATA
Problem MODEL has 43 rows, 38 columns and 99 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -175 - 0.00 seconds
Cgl0003I 0 fixed, 13 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 30 rows, 37 columns (37 integer (19 of which binary)) and 86 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -160 iterations 2
Cbc0038I Solution found of -160
Cbc0038I Cleaned solution of -160
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 4 continuous of which 9 were internal integer and 0 internal continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -162.4
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.08000 (1) obj. -162.4 iterations 3
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -170 iterations 9
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -170 iterations 0
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -170 iterations 0
Cbc0038I Pass   6: suminf.    0.33000 (1) obj. -162.4 iterations 4
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -169 iterations 8
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -169 iterations 0
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -169 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -167 iterations 2
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -167 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -167 iterations 0
Cbc0038I Pass  13: suminf.    0.18000 (1) obj. -162.4 iterations 6
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. -166 iterations 8
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. -166 iterations 0
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. -166 iterations 0
Cbc0038I Pass  17: suminf.    1.33995 (7) obj. -162.4 iterations 9
Cbc0038I Pass  18: suminf.    1.33995 (7) obj. -162.4 iterations 0
Cbc0038I Pass  19: suminf.    0.18000 (1) obj. -162.4 iterations 7
Cbc0038I Pass  20: suminf.    0.18000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  21: suminf.    0.18000 (1) obj. -162.4 iterations 0
Cbc0038I Pass  22: suminf.    0.00542 (1) obj. -162.4 iterations 5
Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -165 iterations 4
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. -165 iterations 2
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. -165 iterations 0
Cbc0038I Pass  29: suminf.    0.93000 (2) obj. -162.4 iterations 10
Cbc0038I Pass  30: suminf.    0.21333 (1) obj. -162.4 iterations 3
Cbc0038I Pass  31: suminf.    0.00000 (0) obj. -166 iterations 7
Cbc0038I Rounding solution of -170 is better than previous of -160

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 1 continuous of which 4 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -171.8
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.39333 (1) obj. -171.8 iterations 0
Cbc0038I Pass  32: suminf.    0.53998 (2) obj. -171.8 iterations 4
Cbc0038I Pass  33: suminf.    0.39333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  34: suminf.    0.42666 (1) obj. -171.8 iterations 1
Cbc0038I Pass  35: suminf.    0.42666 (1) obj. -171.8 iterations 0
Cbc0038I Pass  36: suminf.    0.72001 (2) obj. -171.8 iterations 4
Cbc0038I Pass  37: suminf.    0.42666 (1) obj. -171.8 iterations 1
Cbc0038I Pass  38: suminf.    0.61000 (2) obj. -171.8 iterations 4
Cbc0038I Pass  39: suminf.    0.52001 (2) obj. -171.8 iterations 7
Cbc0038I Pass  40: suminf.    0.52001 (2) obj. -171.8 iterations 1
Cbc0038I Pass  41: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  42: suminf.    0.52001 (2) obj. -171.8 iterations 2
Cbc0038I Pass  43: suminf.    0.52001 (2) obj. -171.8 iterations 2
Cbc0038I Pass  44: suminf.    0.52001 (2) obj. -171.8 iterations 0
Cbc0038I Pass  45: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  46: suminf.    0.52001 (2) obj. -171.8 iterations 2
Cbc0038I Pass  47: suminf.    0.70008 (2) obj. -171.8 iterations 6
Cbc0038I Pass  48: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  49: suminf.    0.52001 (2) obj. -171.8 iterations 2
Cbc0038I Pass  50: suminf.    0.49333 (1) obj. -171.8 iterations 1
Cbc0038I Pass  51: suminf.    0.70008 (2) obj. -171.8 iterations 2
Cbc0038I Pass  52: suminf.    0.49333 (1) obj. -171.8 iterations 2
Cbc0038I Pass  53: suminf.    0.52001 (2) obj. -171.8 iterations 5
Cbc0038I Pass  54: suminf.    0.49333 (1) obj. -171.8 iterations 2
Cbc0038I Pass  55: suminf.    0.46000 (1) obj. -171.8 iterations 1
Cbc0038I Pass  56: suminf.    0.62001 (2) obj. -171.8 iterations 5
Cbc0038I Pass  57: suminf.    0.46000 (1) obj. -171.8 iterations 2
Cbc0038I Pass  58: suminf.    0.70008 (2) obj. -171.8 iterations 4
Cbc0038I Pass  59: suminf.    0.49333 (1) obj. -171.8 iterations 2
Cbc0038I Pass  60: suminf.    0.52001 (2) obj. -171.8 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous of which 8 were internal integer and 0 internal continuous
Cbc0038I Full problem 30 rows 37 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -170 - took 0.01 seconds
Cbc0012I Integer solution of -168 found by DiveCoefficient after 6 iterations and 0 nodes (0.01 seconds)
Cbc0031I 3 added rows had average density of 6
Cbc0013I At root node, 3 cuts changed objective from -175 to -168 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0001I Search completed - best objective -168, took 6 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -175 to -168
Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -168.00000000
Enumerated nodes:               0
Total iterations:               6
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/836dcabd8fab47f3b56c4887a14b59c0-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/836dcabd8fab47f3b56c4887a14b59c0-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/57ee26faf51d4763a1731b3d5c1a1460-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/57ee26faf51d4763a1731b3d5c1a1460-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/66ba7d3a1f3845f2b37f64b4af03b4e8-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/66ba7d3a1f3845f2b37f64b4af03b4e8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/c586fb0b68dc40698d0c998bdd00191a-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/c586fb0b68dc40698d0c998bdd00191a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/b6496f195a5443e68dca03726fd60ba5-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/b6496f195a5443e68dca03726fd60ba5-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/9c2a6679284a498281d53c2317a1bc7b-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/9c2a6679284a498281d53c2317a1bc7b-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e2296b21be824a6b8160725d4f6439c1-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/e2296b21be824a6b8160725d4f6439c1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -80 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -80 - took 0.00 seconds
Cbc0012I Integer solution of -80 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -80, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -80 to -80
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -80.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/7f0ef76d6e054b149e838ffc4eebc844-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/7f0ef76d6e054b149e838ffc4eebc844-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/ff5f35f5b14d47549f4e7051b7e03f2f-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/ff5f35f5b14d47549f4e7051b7e03f2f-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/591087d4743642de9361122b00108aa9-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/591087d4743642de9361122b00108aa9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0004I processed model has 0 rows, 0 columns (0 integer (0 of which binary)) and 0 elements
Cbc3007W No integer variables - nothing to do
Cuts at root node changed objective from 0 to -1.79769e+308
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

dashag 2.000884636807444
7	111	1	1	25394308.1	25406904.2	25604756.0	25609302.0	1.0	inversion	3	7	8	3576	3577	3681	3682	heterozygous	1	3	-1.0	4895.2	300.88	-1.0	1335797.0	0.20600000000000002	NA	0.93 25604756.0 26945099.0 right
8	111	1	-1	26742156.7	-1.0	26945099.0	-1.0	1.0	inversion_partial	7	-1	7	3797	-1	3906	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1335797.0	0.20600000000000002	NA	0.93
16	112	1	1	25395364.7	25407960.8	25604756.0	25609302.0	1.0	inversion	4	8	17	3579	3580	3681	3682	heterozygous	1	3	-1.0	4904.17	301.22	-1.0	1335797.0	0.21	NA	0.93 25604756.0 26945099.0 right
17	112	1	-1	26743051.8	-1.0	26945099.0	-1.0	1.0	inversion_partial	8	-1	16	3800	-1	3906	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1335797.0	0.21	NA	0.93
18	111	1	1	26742156.7	26760950.6	26945099.0	26971954.0	1.0	inversion	7	11	19	3797	3798	3906	3907	heterozygous	1	4	-1.0	300.88	14074.9	-1.0	1335797.0	0.2	NA	0.93 25609302.0 26971954.0 left
19	111	1	-1	25406904.2	-1.0	25609302.0	-1.0	1.0	inversion_partial	7	-1	18	3577	-1	3682	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1335797.0	0.2	NA	0.93
20	112	1	1	26743051.8	26761845.7	26945099.0	26971954.0	1.0	inversion	8	12	21	3800	3801	3906	3907	heterozygous	1	4	-1.0	301.22	14055.07	-1.0	1335797.0	0.205	NA	0.93 25609302.0 26971954.0 left
21	112	1	-1	25407960.8	-1.0	25609302.0	-1.0	1.0	inversion_partial	8	-1	20	3580	-1	3682	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1335797.0	0.205	NA	0.93
160	1160	1	1	-1024839.0	1665861.4	147062578.0	148404176.0	-1.0	duplication_split	32	33	-1	0	116	24309	24570	unknown	-1	-1	-1.0	79.81	70.05	-1.0	1341598.0	0.255	NA	0.27
260	161	1	7	4445130.5	4453837.8	244462048.0	136595150.0	0.9	translocation_interchr	40	170	-1	833	834	44138	26795	heterozygous	1	48	-1.0	1074.18	15678.95	-1.0	-1.0	0.163	-/-	0.58
234	261	1	7	38274629.6	38281366.9	244449278.5	136597879.0	0.19	translocation_interchr	37	174	-1	7537	7538	44137	26796	heterozygous	1	48	-1.0	9582.53	2232.5	-1.0	-1.0	0.20600000000000002	+/+	0.66
260	161	1	7	4445130.5	4453837.8	244462048.0	136595150.0	0.9	translocation_interchr	40	170	-1	833	834	44138	26795	heterozygous	1	48	-1.0	1074.18	15678.95	-1.0	-1.0	0.163	-/-	0.58
259	262	1	7	38275913.5	38282650.9	244449278.5	136597879.0	0.22	translocation_interchr	38	175	-1	7533	7534	44137	26796	heterozygous	1	48	-1.0	9572.55	2232.41	-1.0	-1.0	0.233	+/+	0.66
234	261	1	7	38274629.6	38281366.9	244449278.5	136597879.0	0.19	translocation_interchr	37	174	-1	7537	7538	44137	26796	heterozygous	1	48	-1.0	9582.53	2232.5	-1.0	-1.0	0.20600000000000002	+/+	0.66
260	161	1	7	4445130.5	4453837.8	244462048.0	136595150.0	0.9	translocation_interchr	40	170	-1	833	834	44138	26795	heterozygous	1	48	-1.0	1074.18	15678.95	-1.0	-1.0	0.163	-/-	0.58
234	261	1	7	38274629.6	38281366.9	244449278.5	136597879.0	0.19	translocation_interchr	37	174	-1	7537	7538	44137	26796	heterozygous	1	48	-1.0	9582.53	2232.5	-1.0	-1.0	0.20600000000000002	+/+	0.66
263	162	1	7	4444591.7	4453299.0	244462048.0	136595150.0	0.33	translocation_interchr	41	171	-1	834	835	44138	26795	heterozygous	1	48	-1.0	1073.79	15677.82	-1.0	-1.0	0.128	-/-	0.58
266	1222	1	7	243246.4	228636.4	245930011.5	138457419.0	0.68	translocation_interchr	43	177	-1	35	34	44397	27191	heterozygous	1	49	-1.0	68.92	49.17	-1.0	-1.0	0.165	+/+	0.52
264	1171	1	7	287769.1	290090.5	245922142.5	138466454.0	0.79	translocation_interchr	42	179	-1	48	49	44396	27192	heterozygous	1	49	-1.0	63.07	77.43	-1.0	-1.0	0.222	+/+	0.35
264	1171	1	7	287769.1	290090.5	245922142.5	138466454.0	0.79	translocation_interchr	42	179	-1	48	49	44396	27192	heterozygous	1	49	-1.0	63.07	77.43	-1.0	-1.0	0.222	+/+	0.35
266	1222	1	7	243246.4	228636.4	245930011.5	138457419.0	0.68	translocation_interchr	43	177	-1	35	34	44397	27191	heterozygous	1	49	-1.0	68.92	49.17	-1.0	-1.0	0.165	+/+	0.52
264	1171	1	7	287769.1	290090.5	245922142.5	138466454.0	0.79	translocation_interchr	42	179	-1	48	49	44396	27192	heterozygous	1	49	-1.0	63.07	77.43	-1.0	-1.0	0.222	+/+	0.35
269	1221	1	7	310577.3	295967.2	245930011.5	138457419.0	0.89	translocation_interchr	44	176	-1	46	45	44397	27191	heterozygous	1	49	-1.0	82.06	63.31	-1.0	-1.0	0.228	+/+	0.52
348	371	2	13	31632691.8	31632691.8	56053297.0	21066539.0	0.82	translocation_interchr	49	283	-1	6405	6405	11137	526	heterozygous	1	59	-1.0	7981.96	658.05	-1.0	-1.0	0.147	-/-	0.54
301	11	2	13	93233092.2	93233092.2	56053297.0	21066539.0	0.22	translocation_interchr	45	286	-1	19338	19338	11137	526	heterozygous	1	59	-1.0	13835.52	24223.18	-1.0	-1.0	0.20600000000000002	-/-	0.61
348	371	2	13	31632691.8	31632691.8	56053297.0	21066539.0	0.82	translocation_interchr	49	283	-1	6405	6405	11137	526	heterozygous	1	59	-1.0	7981.96	658.05	-1.0	-1.0	0.147	-/-	0.54
326	12	2	13	93264326.3	93264326.3	56053297.0	21066539.0	0.42	translocation_interchr	46	287	-1	19340	19340	11137	526	heterozygous	1	59	-1.0	13824.38	24209.38	-1.0	-1.0	0.235	-/-	0.61
301	11	2	13	93233092.2	93233092.2	56053297.0	21066539.0	0.22	translocation_interchr	45	286	-1	19338	19338	11137	526	heterozygous	1	59	-1.0	13835.52	24223.18	-1.0	-1.0	0.20600000000000002	-/-	0.61
348	371	2	13	31632691.8	31632691.8	56053297.0	21066539.0	0.82	translocation_interchr	49	283	-1	6405	6405	11137	526	heterozygous	1	59	-1.0	7981.96	658.05	-1.0	-1.0	0.147	-/-	0.54
301	11	2	13	93233092.2	93233092.2	56053297.0	21066539.0	0.22	translocation_interchr	45	286	-1	19338	19338	11137	526	heterozygous	1	59	-1.0	13835.52	24223.18	-1.0	-1.0	0.20600000000000002	-/-	0.61
368	372	2	13	31641996.5	31641996.5	56053297.0	21066539.0	0.29	translocation_interchr	50	284	-1	6407	6407	11137	526	heterozygous	1	59	-1.0	7999.42	660.03	-1.0	-1.0	0.172	-/-	0.54
371	1421	2	13	294693.8	294693.8	57868538.0	22278213.0	0.93	translocation_interchr	53	288	-1	62	62	11535	764	heterozygous	1	68	-1.0	80.45	76.26	-1.0	-1.0	0.142	-/-	0.45
369	1191	2	13	307629.7	308826.7	57867177.0	22278213.0	0.79	translocation_interchr	51	291	-1	75	76	11534	764	heterozygous	1	68	-1.0	92.14	77.61	-1.0	-1.0	0.149	+/+	0.4
371	1421	2	13	294693.8	294693.8	57868538.0	22278213.0	0.93	translocation_interchr	53	288	-1	62	62	11535	764	heterozygous	1	68	-1.0	80.45	76.26	-1.0	-1.0	0.142	-/-	0.45
370	1192	2	13	292277.1	293474.2	57867177.0	22278213.0	0.81	translocation_interchr	52	290	-1	72	73	11534	764	heterozygous	1	68	-1.0	87.85	70.01	-1.0	-1.0	0.115	+/+	0.4
369	1191	2	13	307629.7	308826.7	57867177.0	22278213.0	0.79	translocation_interchr	51	291	-1	75	76	11534	764	heterozygous	1	68	-1.0	92.14	77.61	-1.0	-1.0	0.149	+/+	0.4
371	1421	2	13	294693.8	294693.8	57868538.0	22278213.0	0.93	translocation_interchr	53	288	-1	62	62	11535	764	heterozygous	1	68	-1.0	80.45	76.26	-1.0	-1.0	0.142	-/-	0.45
369	1191	2	13	307629.7	308826.7	57867177.0	22278213.0	0.79	translocation_interchr	51	291	-1	75	76	11534	764	heterozygous	1	68	-1.0	92.14	77.61	-1.0	-1.0	0.149	+/+	0.4
374	1422	2	13	301826.5	301826.5	57868538.0	22278213.0	0.61	translocation_interchr	54	289	-1	65	65	11535	764	heterozygous	1	68	-1.0	84.07	68.89	-1.0	-1.0	0.188	-/-	0.45
385	521	2	2	1100235.2	3017103.1	103329368.0	104208568.0	0.99	insertion	74	84	-1	196	564	19949	20128	heterozygous	1	73	258.2	2096.78	258.2	6164.98	1037667.9	0.307	NA	0.55
396	261	2	7	47335076.8	47323361.8	103333385.0	145643118.0	0.38	translocation_interchr	78	174	-1	9261	9260	19950	28545	heterozygous	1	74	-1.0	205.15	2232.5	-1.0	-1.0	0.145	+/+	0.45
386	521	2	7	3017103.1	3002581.9	103329368.0	145665324.0	0.88	translocation_interchr	74	183	-1	564	563	19949	28546	heterozygous	1	74	-1.0	2096.78	466.46	-1.0	-1.0	0.134	-/-	0.5
393	522	2	2	1127595.3	3044525.4	103329368.0	104209086.0	0.99	insertion	75	85	-1	201	569	19949	20129	heterozygous	1	73	264.65	2099.16	264.65	6160.44	1037212.1	0.327	NA	0.55
396	261	2	7	47335076.8	47323361.8	103333385.0	145643118.0	0.38	translocation_interchr	78	174	-1	9261	9260	19950	28545	heterozygous	1	74	-1.0	205.15	2232.5	-1.0	-1.0	0.145	+/+	0.45
394	522	2	7	3044525.4	3030004.2	103329368.0	145665324.0	0.87	translocation_interchr	75	184	-1	569	568	19949	28546	heterozygous	1	74	-1.0	2099.16	465.62	-1.0	-1.0	0.14	-/-	0.5
386	521	2	7	3017103.1	3002581.9	103329368.0	145665324.0	0.88	translocation_interchr	74	183	-1	564	563	19949	28546	heterozygous	1	74	-1.0	2096.78	466.46	-1.0	-1.0	0.134	-/-	0.5
396	261	2	7	47335076.8	47323361.8	103333385.0	145643118.0	0.38	translocation_interchr	78	174	-1	9261	9260	19950	28545	heterozygous	1	74	-1.0	205.15	2232.5	-1.0	-1.0	0.145	+/+	0.45
386	521	2	7	3017103.1	3002581.9	103329368.0	145665324.0	0.88	translocation_interchr	74	183	-1	564	563	19949	28546	heterozygous	1	74	-1.0	2096.78	466.46	-1.0	-1.0	0.134	-/-	0.5
397	262	2	7	47335840.5	47324125.6	103333385.0	145643118.0	0.13	translocation_interchr	79	175	-1	9257	9256	19950	28545	heterozygous	1	74	-1.0	214.81	2232.41	-1.0	-1.0	0.095	+/+	0.45
386	521	2	7	3017103.1	3002581.9	103329368.0	145665324.0	0.88	translocation_interchr	74	183	-1	564	563	19949	28546	heterozygous	1	74	-1.0	2096.78	466.46	-1.0	-1.0	0.134	-/-	0.5
399	511	2	7	88633.5	76973.5	103333385.0	145643118.0	0.16	translocation_interchr	80	182	-1	14	13	19950	28545	heterozygous	1	74	-1.0	220.01	13.71	-1.0	-1.0	0.047	+/+	0.45
411	521	2	7	1100235.2	1126573.7	104208568.0	147543268.5	0.02	translocation_interchr	84	183	-1	196	197	20128	28926	heterozygous	1	75	-1.0	258.2	466.46	-1.0	-1.0	0.20199999999999999	-/-	0.62
400	511	2	7	962371.3	965007.2	104207280.0	147570727.0	0.12	translocation_interchr	80	188	-1	184	185	20127	28927	heterozygous	1	75	-1.0	220.01	2602.71	-1.0	-1.0	0.23800000000000002	+/+	0.64
411	521	2	7	1100235.2	1126573.7	104208568.0	147543268.5	0.02	translocation_interchr	84	183	-1	196	197	20128	28926	heterozygous	1	75	-1.0	258.2	466.46	-1.0	-1.0	0.20199999999999999	-/-	0.62
403	512	2	7	908008.6	910644.4	104207280.0	147570727.0	0.69	translocation_interchr	81	187	-1	174	175	20127	28927	heterozygous	1	75	-1.0	221.67	2591.74	-1.0	-1.0	0.18600000000000005	+/+	0.64
400	511	2	7	962371.3	965007.2	104207280.0	147570727.0	0.12	translocation_interchr	80	188	-1	184	185	20127	28927	heterozygous	1	75	-1.0	220.01	2602.71	-1.0	-1.0	0.23800000000000002	+/+	0.64
412	522	2	7	1127595.3	1153933.9	104209086.0	147543268.5	0.43	translocation_interchr	85	184	-1	201	202	20129	28926	heterozygous	1	75	-1.0	264.65	465.62	-1.0	-1.0	0.205	-/-	0.62
582	152	3	3	11976.2	438585.4	12919.5	223278.0	-1.0	duplication_inverted	95	98	-1	1	79	1	40	unknown	-1	-1	-1.0	51.27	16597.92	-1.0	210358.5	0.46799999999999997	NA	0.46
583	151	3	3	6262.3	544982.4	12919.5	279363.5	-1.0	duplication_inverted	96	97	-1	1	107	1	54	unknown	-1	-1	-1.0	69.26	16600.99	-1.0	266444.0	0.446	NA	0.37
655	442	3	3	304368.9	326529.3	65985583.0	67190426.0	0.99	deletion	99	103	-1	69	70	13361	13593	heterozygous	1	151	84.76	84.76	6194.7	4270.52	1182682.6	0.18600000000000005	NA	0.55
655	442	3	3	304368.9	326529.3	65985583.0	67190426.0	0.99	deletion	99	103	-1	69	70	13361	13593	heterozygous	1	151	84.76	84.76	6194.7	4270.52	1182682.6	0.18600000000000005	NA	0.55
656	441	3	3	284887.0	307047.4	65985583.0	67190426.0	0.99	deletion	100	102	-1	64	65	13361	13593	heterozygous	1	151	77.77	77.77	6197.4	4270.52	1182682.6	0.292	NA	0.55
656	441	3	3	284887.0	307047.4	65985583.0	67190426.0	0.99	deletion	100	102	-1	64	65	13361	13593	heterozygous	1	151	77.77	77.77	6197.4	4270.52	1182682.6	0.292	NA	0.55
864	601	4	4	598442.0	652017.8	1707532.0	1818080.0	1.0	inversion	107	111	865	80	81	220	221	heterozygous	1	205	-1.0	301.11	115.14	-1.0	1694547.0	0.172	NA	0.98 12985.0 1818080.0 left
865	601	4	-1	2347142.8	-1.0	12985.0	-1.0	1.0	inversion_partial	107	-1	864	295	-1	1	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1694547.0	0.172	NA	0.98
866	602	4	4	595106.3	648682.0	1707532.0	1818080.0	1.0	inversion	108	112	867	80	81	220	221	heterozygous	1	205	-1.0	299.85	117.59	-1.0	1694547.0	0.17300000000000001	NA	0.98 12985.0 1818080.0 left
867	602	4	-1	2343538.3	-1.0	12985.0	-1.0	1.0	inversion_partial	108	-1	866	295	-1	1	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1694547.0	0.17300000000000001	NA	0.98
1022	1431	4	4	44118.1	577185.4	109246109.0	109506541.0	-1.0	duplication_inverted	120	122	-1	9	149	22476	22548	unknown	-1	-1	-1.0	88.76	79.13	-1.0	260432.0	0.14	NA	0.2
1023	1432	4	4	44326.0	577714.2	109246109.0	109506541.0	-1.0	duplication_inverted	121	123	-1	9	148	22476	22548	unknown	-1	-1	-1.0	89.24	79.13	-1.0	260432.0	0.151	NA	0.22
1325	252	5	16	14444524.7	14438948.4	147068974.0	60750307.0	0.54	translocation_interchr	143	329	-1	2672	2671	30589	8662	heterozygous	1	296	-1.0	8485.31	3450.11	-1.0	-1.0	0.214	+/+	0.66
1254	91	5	16	10405660.8	10393004.4	147057748.0	60757303.0	0.06	translocation_interchr	138	334	-1	1894	1893	30588	8663	heterozygous	1	296	-1.0	20108.75	2456.12	-1.0	-1.0	0.168	-/-	0.62
1325	252	5	16	14444524.7	14438948.4	147068974.0	60750307.0	0.54	translocation_interchr	143	329	-1	2672	2671	30589	8662	heterozygous	1	296	-1.0	8485.31	3450.11	-1.0	-1.0	0.214	+/+	0.66
1297	92	5	16	10405113.5	10392457.1	147057748.0	60757303.0	0.27	translocation_interchr	139	335	-1	1895	1894	30588	8663	heterozygous	1	296	-1.0	20132.45	2456.86	-1.0	-1.0	0.153	-/-	0.62
1299	1200	5	16	262195.2	269866.9	146344445.0	60137745.0	0.85	translocation_interchr	141	331	-1	56	57	30425	8544	heterozygous	1	297	-1.0	64.56	79.99	-1.0	-1.0	0.262	-/-	0.34
1298	1410	5	16	311837.4	322665.3	146335941.0	60147810.0	0.86	translocation_interchr	140	332	-1	71	72	30424	8545	heterozygous	1	297	-1.0	91.26	71.18	-1.0	-1.0	0.184	+/+	0.27
1298	1410	5	16	311837.4	322665.3	146335941.0	60147810.0	0.86	translocation_interchr	140	332	-1	71	72	30424	8545	heterozygous	1	297	-1.0	91.26	71.18	-1.0	-1.0	0.184	+/+	0.27
1299	1200	5	16	262195.2	269866.9	146344445.0	60137745.0	0.85	translocation_interchr	141	331	-1	56	57	30425	8544	heterozygous	1	297	-1.0	64.56	79.99	-1.0	-1.0	0.262	-/-	0.34
1254	91	5	16	10405660.8	10393004.4	147057748.0	60757303.0	0.06	translocation_interchr	138	334	-1	1894	1893	30588	8663	heterozygous	1	296	-1.0	20108.75	2456.12	-1.0	-1.0	0.168	-/-	0.62
1325	252	5	16	14444524.7	14438948.4	147068974.0	60750307.0	0.54	translocation_interchr	143	329	-1	2672	2671	30589	8662	heterozygous	1	296	-1.0	8485.31	3450.11	-1.0	-1.0	0.214	+/+	0.66
1254	91	5	16	10405660.8	10393004.4	147057748.0	60757303.0	0.06	translocation_interchr	138	334	-1	1894	1893	30588	8663	heterozygous	1	296	-1.0	20108.75	2456.12	-1.0	-1.0	0.168	-/-	0.62
1344	2071	5	16	14444382.1	14438805.7	147068974.0	60750307.0	0.6	translocation_interchr	144	330	-1	2671	2670	30589	8662	heterozygous	1	296	-1.0	8486.72	3461.9	-1.0	-1.0	0.20600000000000002	+/+	0.66
1428	31	6	6	84127939.5	84131577.9	86635319.0	86641722.0	1.0	inversion	151	155	1429	17501	17502	17396	17397	heterozygous	1	325	-1.0	6851.02	329.98	-1.0	1232987.0	0.16	NA	0.86 86635319.0 87874709.0 right
1429	31	6	-1	82895160.6	-1.0	87874709.0	-1.0	1.0	inversion_partial	155	-1	1428	17229	-1	17677	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1232987.0	0.16	NA	0.86
1447	32	6	6	84130230.0	84133868.5	86635319.0	86641722.0	1.0	inversion	152	156	1448	17501	17502	17396	17397	heterozygous	1	325	-1.0	6826.3	330.26	-1.0	1232987.0	0.11199999999999999	NA	0.86 86635319.0 87874709.0 right
1448	32	6	-1	82897451.2	-1.0	87874709.0	-1.0	1.0	inversion_partial	156	-1	1447	17229	-1	17677	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1232987.0	0.11199999999999999	NA	0.86
1451	31	6	6	82887574.0	82895160.6	87874709.0	87879121.0	1.0	inversion	155	159	1452	17228	17229	17677	17678	heterozygous	1	326	-1.0	329.98	21486.07	-1.0	1232987.0	0.23399999999999999	NA	0.86 86641722.0 87879121.0 left
1452	31	6	-1	84127939.5	-1.0	86641722.0	-1.0	1.0	inversion_partial	155	-1	1451	17501	-1	17397	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1232987.0	0.23399999999999999	NA	0.86
1453	32	6	6	82890165.8	82897451.2	87874709.0	87879121.0	1.0	inversion	156	160	1454	17228	17229	17677	17678	heterozygous	1	326	-1.0	330.26	21512.5	-1.0	1232987.0	0.183	NA	0.86 86641722.0 87879121.0 left
1454	32	6	-1	84130230.0	-1.0	86641722.0	-1.0	1.0	inversion_partial	156	-1	1453	17501	-1	17397	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1232987.0	0.183	NA	0.86
1734	511	7	7	76973.5	965007.2	145643118.0	147570727.0	0.99	deletion	182	188	-1	13	185	28545	28927	heterozygous	1	394	13.71	13.71	2602.71	1289.74	1039575.3	0.22699999999999998	NA	0.27
1958	302	9	9	2336754.1	2343368.5	2374752.0	2379568.0	1.0	inversion	199	204	1959	491	492	507	508	heterozygous	1	448	-1.0	629.89	454.83	-1.0	1716192.0	0.22899999999999998	NA	0.87 2374752.0 4095760.0 right
1959	302	9	-1	4058629.4	-1.0	4095760.0	-1.0	1.0	inversion_partial	204	-1	1958	855	-1	881	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1716192.0	0.22899999999999998	NA	0.87
1964	301	9	9	2124563.2	2131177.7	2374752.0	2379568.0	1.0	inversion	200	203	1965	452	453	507	508	heterozygous	1	448	-1.0	572.35	453.41	-1.0	1716192.0	0.22	NA	0.87 2374752.0 4095760.0 right
1965	301	9	-1	3846733.8	-1.0	4095760.0	-1.0	1.0	inversion_partial	203	-1	1964	816	-1	881	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1716192.0	0.22	NA	0.87
1967	301	9	9	3846733.8	3852066.5	4095760.0	4102886.0	1.0	inversion	203	207	1968	816	817	881	882	heterozygous	1	449	-1.0	453.41	9402.62	-1.0	1716192.0	0.126	NA	0.87 2379568.0 4102886.0 left
1968	301	9	-1	2131177.7	-1.0	2379568.0	-1.0	1.0	inversion_partial	203	-1	1967	453	-1	508	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1716192.0	0.126	NA	0.87
1969	302	9	9	4058629.4	4063962.1	4095760.0	4102886.0	1.0	inversion	204	208	1970	855	856	881	882	heterozygous	1	449	-1.0	454.83	9415.72	-1.0	1716192.0	0.132	NA	0.87 2379568.0 4102886.0 left
1970	302	9	-1	2343368.5	-1.0	2379568.0	-1.0	1.0	inversion_partial	204	-1	1969	492	-1	508	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1716192.0	0.132	NA	0.87
2025	1541	9	9	204500.4	315016.4	61552686.0	65594150.0	0.01	deletion	228	242	-1	24	43	9387	10011	heterozygous	1	466	0.01	54.72	34.89	-1.0	3930948.0	0.092	NA	0.09
2170	952	10	10	412660.4	412660.4	46991592.0	47870426.5	0.92	inversion	261	266	2171	83	83	8849	8998	heterozygous	1	-1	-1.0	105.11	76.25	-1.0	189840.5	0.196	NA	0.19 46991592.0 48060267.0 right
2171	952	10	-1	602327.7	-1.0	48060267.0	-1.0	0.92	inversion_partial	266	-1	2170	115	-1	9033	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	189840.5	0.196	NA	0.19
2504	1130	12	12	309295.2	329746.8	57551214.0	58460197.0	0.98	inversion	279	282	2505	54	55	11119	11300	heterozygous	1	-1	-1.0	71.17	63.25	-1.0	271129.0	0.267	NA	0.24 57551214.0 58731326.0 right
2505	1130	12	-1	600746.8	-1.0	58731326.0	-1.0	0.98	inversion_partial	282	-1	2504	101	-1	11347	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	271129.0	0.267	NA	0.24
2506	1440	12	12	29847.4	546136.3	57579405.0	57825988.0	-1.0	duplication_inverted	280	281	-1	8	93	11120	11163	unknown	-1	-1	-1.0	59.73	68.54	-1.0	246583.0	0.179	NA	0.05
2623	1150	13	13	-1659741.8	2281042.5	96143271.0	98114110.0	-1.0	duplication_split	292	293	-1	0	125	16747	17158	unknown	-1	-1	-1.0	89.85	71.16	-1.0	1970839.0	0.262	NA	0.25
2829	352	16	16	5895576.9	5904479.7	23584705.0	23592472.0	1.0	inversion	310	315	2830	1046	1047	3915	3916	heterozygous	1	643	-1.0	4939.74	344.54	-1.0	1355726.0	0.12300000000000001	NA	0.93 23584705.0 24948198.0 right
2830	352	16	-1	4539295.3	-1.0	24948198.0	-1.0	1.0	inversion_partial	315	-1	2829	782	-1	4186	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1355726.0	0.12300000000000001	NA	0.93
2845	351	16	16	12715814.8	12724717.6	23584705.0	23592472.0	1.0	inversion	311	314	2846	1977	1978	3915	3916	heterozygous	1	643	-1.0	4940.39	348.38	-1.0	1355726.0	0.205	NA	0.93 23584705.0 24948198.0 right
2846	351	16	-1	11359401.6	-1.0	24948198.0	-1.0	1.0	inversion_partial	314	-1	2845	1714	-1	4186	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1355726.0	0.205	NA	0.93
2849	351	16	16	11345409.4	11359401.6	24948198.0	24962987.0	1.0	inversion	314	319	2850	1713	1714	4186	4187	heterozygous	1	644	-1.0	348.38	2309.67	-1.0	1355726.0	0.17800000000000002	NA	0.93 23592472.0 24962987.0 left
2850	351	16	-1	12715814.8	-1.0	23592472.0	-1.0	1.0	inversion_partial	314	-1	2849	1977	-1	3916	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1355726.0	0.17800000000000002	NA	0.93
2851	352	16	16	4525303.2	4539295.3	24948198.0	24962987.0	1.0	inversion	315	318	2852	781	782	4186	4187	heterozygous	1	644	-1.0	344.54	1036.04	-1.0	1355726.0	0.249	NA	0.93 23592472.0 24962987.0 left
2852	352	16	-1	5895576.9	-1.0	23592472.0	-1.0	1.0	inversion_partial	315	-1	2851	1046	-1	3916	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1355726.0	0.249	NA	0.93
2935	232	17	17	36515995.0	36717088.6	46284336.0	46702870.0	0.01	deletion	342	346	-1	6316	6350	6912	6986	heterozygous	1	662	0.01	4321.41	8294.98	-1.0	217440.4	0.253	NA	0.31
3197	1032	21	21	424706.4	424706.4	6551366.0	7381318.0	0.86	inversion	366	372	3198	51	51	163	250	heterozygous	1	-1	-1.0	63.68	73.01	-1.0	234715.0	0.184	NA	0.17 6316651.0 7381318.0 left
3198	1032	21	-1	659477.7	-1.0	6316651.0	-1.0	0.86	inversion_partial	366	-1	3197	78	-1	134	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	234715.0	0.184	NA	0.17
0 1 14454.0 2 H [1]
1 1 25607029.0 2 T [0, 2, 3]
2 1 25607030.0 2 H [1, 3, 4]
3 1 26958526.5 2 T [1, 2, 4]
4 1 26958527.5 2 H [2, 3, 5]
5 1 147057351.0 2 T [4, 6]
6 1 147057352.0 3 H [5, 7]
7 1 148342632.0 3 T [8, 6]
8 1 148342633.0 2 H [9, 7]
9 1 244455663.25 2 T [8, 10, 52]
10 1 244455664.25 2 H [9, 11, 51]
11 1 245926077.0 2 T [10, 12, 54]
12 1 245926078.0 2 H [53, 11, 13]
13 1 248943332.0 2 T [12]
14 2 0.0 2 H [15]
15 2 56053297.0 2 T [16, 88, 14]
16 2 56053298.0 2 H [17, 87, 15]
17 2 57867857.5 2 T [16, 18, 90]
18 2 57867858.5 2 H [89, 17, 19]
19 2 103331376.5 2 T [56, 18, 20, 22]
20 2 103331377.5 2 H [19, 21, 55]
21 2 104208311.33333333 2 T [58, 20, 22]
22 2 104208312.33333333 2 H [57, 19, 21, 23]
23 2 242181357.0 2 T [22]
24 3 12920 2 H [24, 25]
25 3 65902850.0 2 T [24, 26, 28]
26 3 65902851.0 1 H [25, 27]
27 3 67190426.0 1 T [26, 28]
28 3 67190427 2 H [25, 27, 29]
29 3 198230595 2 T [28]
30 4 12986.0 2 H [32, 31]
31 4 1818080.0 2 T [32, 30]
32 4 1818081.0 2 H [33, 30, 31]
33 4 108121113.0 2 T [32, 34]
34 4 108121114.0 3 H [33, 35]
35 4 109394609.0 3 T [34, 35, 36]
36 4 109394610 2 H [35, 37]
37 4 190202563 2 T [36]
38 5 0.0 2 H [39]
39 5 146340193.0 2 T [40, 110, 38]
40 5 146340194.0 2 H [41, 109, 39]
41 5 147063361.0 2 T [40, 42, 112]
42 5 147063362.0 2 H [41, 43, 111]
43 5 181472714.0 2 T [42]
44 6 0.0 2 H [45]
45 6 86638520.5 2 T [44, 46, 47]
46 6 86638521.5 2 H [48, 45, 47]
47 6 87876915.0 2 T [48, 45, 46]
48 6 87876916.0 2 H [49, 46, 47]
49 6 170739897.0 2 T [48]
50 7 0.0 2 H [51]
51 7 136596514.5 2 T [50, 10, 52]
52 7 136596515.5 2 H [9, 51, 53]
53 7 138461936.5 2 T [52, 12, 54]
54 7 138461937.5 2 H [11, 53, 55]
55 7 145654221.0 2 T [56, 20, 54]
56 7 145654222.0 2 H [57, 19, 55]
57 7 147556997.75 2 T [56, 58, 22]
58 7 147556998.75 2 H [57, 59, 21]
59 7 159334984.0 2 T [58]
60 8 0 2 H [61]
61 8 145076125 2 T [60]
62 9 0.0 2 H [63]
63 9 2377160.0 2 T [64, 65, 62]
64 9 2377161.0 2 H [65, 66, 63]
65 9 4099323.0 2 T [64, 66, 63]
66 9 4099324.0 2 H [64, 65, 67]
67 9 138334464.0 2 T [66]
68 10 0.0 2 H [69]
69 10 46991592.0 2 T [68, 70, 71]
70 10 46991593.0 2 H [69, 71]
71 10 48060267.0 2 T [72, 69, 70]
72 10 48060268.0 2 H [73, 71]
73 10 133785266.0 2 T [72]
74 11 0 2 H [75]
75 11 135069565 2 T [74]
76 12 14569.0 2 H [77]
77 12 57551214.0 2 T [83, 76, 78]
78 12 57551215.0 2 H [77, 79]
79 12 57624186.0 2 T [80, 78]
80 12 57624187.0 3 H [80, 81, 79]
81 12 58512892.0 3 T [80, 82]
82 12 58512893.0 2 H [81, 83]
83 12 58731326.0 2 T [82, 84, 77]
84 12 58731327.0 2 H [83, 85]
85 12 133263959.0 2 T [84]
86 13 16004726.0 2 H [87]
87 13 21066539.0 2 T [88, 16, 86]
88 13 21066540.0 2 H [89, 15, 87]
89 13 22278213.0 2 T [88, 90, 18]
90 13 22278214.0 2 H [89, 91, 17]
91 13 96229424.0 2 T [90, 92]
92 13 96229425.0 3 H [91, 93]
93 13 98043021.0 3 T [92, 94]
94 13 98043022 2 H [93, 95]
95 13 114352101 2 T [94]
96 14 0 2 H [97]
97 14 106873282 2 T [96]
98 15 0 2 H [99]
99 15 101976509 2 T [98]
100 16 14135 2 H [101]
101 16 22291419.0 2 T [100, 102]
102 16 22291420.0 2 H [101, 103]
103 16 22636889.0 2 T [104, 102]
104 16 22636890.0 2 H [105, 103]
105 16 23588588.5 2 T [104, 106, 107]
106 16 23588589.5 2 H [105, 107, 108]
107 16 24955592.5 2 T [105, 106, 108]
108 16 24955593.5 2 H [106, 107, 109]
109 16 60142777.5 2 T [40, 108, 110]
110 16 60142778.5 2 H [39, 109, 111]
111 16 60753805.0 2 T [112, 42, 110]
112 16 60753806.0 2 H [113, 41, 111]
113 16 90224750.0 2 T [112]
114 17 0 2 H [115]
115 17 83246392 2 T [114]
116 18 0 2 H [117]
117 18 80256374 2 T [116]
118 19 0 2 H [119]
119 19 58605715 2 T [118]
120 20 0 2 H [121]
121 20 64333718 2 T [120]
122 21 0.0 2 H [123]
123 21 6316651.0 2 T [122, 124]
124 21 6316652.0 2 H [123, 125, 126]
125 21 7381318.0 2 T [124, 126]
126 21 7381319.0 2 H [124, 125, 127]
127 21 46697230.0 2 T [126]
128 22 0 2 H [129]
129 22 50805587 2 T [128]
130 23 0 2 H [131]
131 23 156025612 2 T [130]
132 24 0 0 H [133]
133 24 57212132 0 T [132]
Siavash
[(1, 0, 2, 'S'), (1, 2, 0, 'R'), (3, 2, 2, 'S'), (3, 4, 0, 'R'), (4, 5, 2, 'S'), (5, 6, 0, 'R'), (6, 7, 3, 'S'), (7, 8, 0, 'R'), (9, 8, 2, 'S'), (9, 10, 0, 'R'), (11, 10, 2, 'S'), (11, 12, 0, 'R'), (12, 13, 2, 'S'), (15, 14, 2, 'S'), (15, 16, 0, 'R'), (17, 16, 2, 'S'), (17, 18, 0, 'R'), (19, 18, 2, 'S'), (19, 20, 0, 'R'), (21, 20, 2, 'S'), (21, 22, 0, 'R'), (22, 23, 2, 'S'), (24, 25, 2, 'S'), (25, 26, 0, 'R'), (26, 27, 1, 'S'), (27, 28, 0, 'R'), (28, 29, 2, 'S'), (31, 30, 2, 'S'), (31, 32, 0, 'R'), (32, 33, 2, 'S'), (33, 34, 0, 'R'), (34, 35, 3, 'S'), (35, 36, 0, 'R'), (36, 37, 2, 'S'), (39, 38, 2, 'S'), (39, 40, 0, 'R'), (41, 40, 2, 'S'), (41, 42, 0, 'R'), (42, 43, 2, 'S'), (45, 44, 2, 'S'), (45, 46, 0, 'R'), (47, 46, 2, 'S'), (47, 48, 0, 'R'), (48, 49, 2, 'S'), (51, 50, 2, 'S'), (51, 52, 0, 'R'), (53, 52, 2, 'S'), (53, 54, 0, 'R'), (55, 54, 2, 'S'), (55, 56, 0, 'R'), (57, 56, 2, 'S'), (57, 58, 0, 'R'), (58, 59, 2, 'S'), (60, 61, 2, 'S'), (63, 62, 2, 'S'), (63, 64, 0, 'R'), (65, 64, 2, 'S'), (65, 66, 0, 'R'), (66, 67, 2, 'S'), (69, 68, 2, 'S'), (69, 70, 0, 'R'), (71, 70, 2, 'S'), (71, 72, 0, 'R'), (72, 73, 2, 'S'), (74, 75, 2, 'S'), (77, 76, 2, 'S'), (77, 78, 0, 'R'), (78, 79, 2, 'S'), (79, 80, 0, 'R'), (80, 81, 3, 'S'), (81, 82, 0, 'R'), (83, 82, 2, 'S'), (83, 84, 0, 'R'), (84, 85, 2, 'S'), (87, 86, 2, 'S'), (87, 88, 0, 'R'), (89, 88, 2, 'S'), (89, 90, 0, 'R'), (90, 91, 2, 'S'), (91, 92, 0, 'R'), (92, 93, 3, 'S'), (93, 94, 0, 'R'), (94, 95, 2, 'S'), (96, 97, 2, 'S'), (98, 99, 2, 'S'), (100, 101, 2, 'S'), (101, 102, 0, 'R'), (102, 103, 2, 'S'), (103, 104, 0, 'R'), (105, 104, 2, 'S'), (105, 106, 0, 'R'), (107, 106, 2, 'S'), (107, 108, 0, 'R'), (109, 108, 2, 'S'), (109, 110, 0, 'R'), (111, 110, 2, 'S'), (111, 112, 0, 'R'), (112, 113, 2, 'S'), (114, 115, 2, 'S'), (116, 117, 2, 'S'), (118, 119, 2, 'S'), (120, 121, 2, 'S'), (123, 122, 2, 'S'), (123, 124, 0, 'R'), (125, 124, 2, 'S'), (125, 126, 0, 'R'), (126, 127, 2, 'S'), (128, 129, 2, 'S'), (130, 131, 2, 'S'), (132, 133, 0, 'S'), (1, 3, 0, 'SV'), (2, 4, 0, 'SV'), (6, 7, 0, 'SV'), (9, 52, 0, 'SV'), (10, 51, 0, 'SV'), (11, 54, 0, 'SV'), (12, 53, 0, 'SV'), (15, 88, 0, 'SV'), (16, 87, 0, 'SV'), (17, 90, 0, 'SV'), (18, 89, 0, 'SV'), (19, 22, 0, 'SV'), (19, 56, 0, 'SV'), (20, 55, 0, 'SV'), (21, 58, 0, 'SV'), (22, 57, 0, 'SV'), (24, 24, 0, 'SV'), (25, 28, 0, 'SV'), (30, 32, 0, 'SV'), (35, 35, 0, 'SV'), (41, 112, 0, 'SV'), (42, 111, 0, 'SV'), (39, 110, 0, 'SV'), (40, 109, 0, 'SV'), (45, 47, 0, 'SV'), (46, 48, 0, 'SV'), (63, 65, 0, 'SV'), (64, 66, 0, 'SV'), (69, 71, 0, 'SV'), (77, 83, 0, 'SV'), (80, 80, 0, 'SV'), (92, 93, 0, 'SV'), (105, 107, 0, 'SV'), (106, 108, 0, 'SV'), (124, 126, 0, 'SV')]
Siavash [(1, 0, 2, 'S'), (1, 2, 0, 'R'), (1, 3, 0, 'SV'), (3, 2, 2, 'S'), (2, 4, 0, 'SV'), (3, 4, 0, 'R'), (4, 5, 2, 'S'), (5, 6, 0, 'R'), (6, 7, 3, 'S'), (6, 7, 0, 'SV'), (7, 8, 0, 'R'), (9, 8, 2, 'S'), (9, 10, 0, 'R'), (9, 52, 0, 'SV'), (11, 10, 2, 'S'), (10, 51, 0, 'SV'), (11, 12, 0, 'R'), (11, 54, 0, 'SV'), (12, 53, 0, 'SV'), (12, 13, 2, 'S'), (53, 52, 2, 'S'), (53, 54, 0, 'R'), (51, 52, 0, 'R'), (51, 50, 2, 'S'), (55, 54, 2, 'S'), (55, 56, 0, 'R'), (20, 55, 0, 'SV'), (57, 56, 2, 'S'), (19, 56, 0, 'SV'), (57, 58, 0, 'R'), (22, 57, 0, 'SV'), (58, 59, 2, 'S'), (21, 58, 0, 'SV'), (21, 20, 2, 'S'), (21, 22, 0, 'R'), (19, 20, 0, 'R'), (19, 18, 2, 'S'), (19, 22, 0, 'SV'), (18, 89, 0, 'SV'), (17, 18, 0, 'R'), (89, 88, 2, 'S'), (89, 90, 0, 'R'), (15, 88, 0, 'SV'), (87, 88, 0, 'R'), (15, 16, 0, 'R'), (15, 14, 2, 'S'), (17, 16, 2, 'S'), (16, 87, 0, 'SV'), (17, 90, 0, 'SV'), (90, 91, 2, 'S'), (91, 92, 0, 'R'), (92, 93, 3, 'S'), (92, 93, 0, 'SV'), (93, 94, 0, 'R'), (94, 95, 2, 'S'), (87, 86, 2, 'S'), (22, 23, 2, 'S')]
Y0 (1, 0, 2, 'S')
X1 (1, 2, 0, 'R')
X2 (1, 3, 0, 'SV')
Y3 (3, 2, 2, 'S')
X4 (2, 4, 0, 'SV')
X5 (3, 4, 0, 'R')
Y6 (4, 5, 2, 'S')
X7 (5, 6, 0, 'R')
Y8 (6, 7, 3, 'S')
X9 (6, 7, 0, 'SV')
X10 (7, 8, 0, 'R')
Y11 (9, 8, 2, 'S')
X12 (9, 10, 0, 'R')
X13 (9, 52, 0, 'SV')
Y14 (11, 10, 2, 'S')
X15 (10, 51, 0, 'SV')
X16 (11, 12, 0, 'R')
X17 (11, 54, 0, 'SV')
X18 (12, 53, 0, 'SV')
Y19 (12, 13, 2, 'S')
Y20 (53, 52, 2, 'S')
X21 (53, 54, 0, 'R')
X22 (51, 52, 0, 'R')
Y23 (51, 50, 2, 'S')
Y24 (55, 54, 2, 'S')
X25 (55, 56, 0, 'R')
X26 (20, 55, 0, 'SV')
Y27 (57, 56, 2, 'S')
X28 (19, 56, 0, 'SV')
X29 (57, 58, 0, 'R')
X30 (22, 57, 0, 'SV')
Y31 (58, 59, 2, 'S')
X32 (21, 58, 0, 'SV')
Y33 (21, 20, 2, 'S')
X34 (21, 22, 0, 'R')
X35 (19, 20, 0, 'R')
Y36 (19, 18, 2, 'S')
X37 (19, 22, 0, 'SV')
X38 (18, 89, 0, 'SV')
X39 (17, 18, 0, 'R')
Y40 (89, 88, 2, 'S')
X41 (89, 90, 0, 'R')
X42 (15, 88, 0, 'SV')
X43 (87, 88, 0, 'R')
X44 (15, 16, 0, 'R')
Y45 (15, 14, 2, 'S')
Y46 (17, 16, 2, 'S')
X47 (16, 87, 0, 'SV')
X48 (17, 90, 0, 'SV')
Y49 (90, 91, 2, 'S')
X50 (91, 92, 0, 'R')
Y51 (92, 93, 3, 'S')
X52 (92, 93, 0, 'SV')
X53 (93, 94, 0, 'R')
Y54 (94, 95, 2, 'S')
Y55 (87, 86, 2, 'S')
Y56 (22, 23, 2, 'S')
A0 A0
B0 B0
A1 A1
B1 B1
A2 A2
B2 B2
A3 A3
B3 B3
A4 A4
B4 B4
A5 A5
B5 B5
A6 A6
B6 B6
A7 A7
B7 B7
A8 A8
B8 B8
A9 A9
B9 B9
A10 A10
B10 B10
A11 A11
B11 B11
A12 A12
B12 B12
A53 A53
B53 B53
A52 A52
B52 B52
A51 A51
B51 B51
A50 A50
B50 B50
A54 A54
B54 B54
A55 A55
B55 B55
A56 A56
B56 B56
A57 A57
B57 B57
A58 A58
B58 B58
A59 A59
B59 B59
A21 A21
B21 B21
A20 A20
B20 B20
A19 A19
B19 B19
A18 A18
B18 B18
A89 A89
B89 B89
A88 A88
B88 B88
A15 A15
B15 B15
A16 A16
B16 B16
A17 A17
B17 B17
A90 A90
B90 B90
A91 A91
B91 B91
A92 A92
B92 B92
A93 A93
B93 B93
A94 A94
B94 B94
A95 A95
B95 B95
A87 A87
B87 B87
A86 A86
B86 B86
A14 A14
B14 B14
A22 A22
B22 B22
A23 A23
B23 B23
A13 A13
B13 B13
obj -2*X1 - 2*X10 - 2*X12 - 2*X13 - 2*X15 - 2*X16 - 2*X17 - 2*X18 - 2*X2 - 2*X21 - 2*X22 - 2*X25 - 2*X26 - 2*X28 - 2*X29 - 2*X30 - 2*X32 - 2*X34 - 2*X35 - 2*X37 - 2*X38 - 2*X39 - 2*X4 - 2*X41 - 2*X42 - 2*X43 - 2*X44 - 2*X47 - 2*X48 - 2*X5 - 2*X50 - 2*X52 - 2*X53 - 2*X7 - 2*X9 - 2*Y0 - 2*Y11 - 2*Y14 - 2*Y19 - 2*Y20 - 2*Y23 - 2*Y24 - 2*Y27 - 2*Y3 - 2*Y31 - 2*Y33 - 2*Y36 - 2*Y40 - 2*Y45 - 2*Y46 - 2*Y49 - 2*Y51 - 2*Y54 - 2*Y55 - 2*Y56 - 2*Y6 - 2*Y8 + 92
Sv_sum 8*T13 + 8*T15 + 8*T17 + 8*T18 + T2 + 8*T26 + 8*T28 + 8*T30 + 8*T32 + T37 + 8*T38 + T4 + 8*T42 + 8*T47 + 8*T48 + T52 + T9
CN_tune 24*Z0 + 40*Z11 + 2*Z14 + 4*Z19 + 2*Z20 + 112*Z23 + 4*Z24 + 2*Z27 + 2*Z3 + 12*Z31 + 2*Z33 + 20*Z36 + 2*Z40 + 48*Z45 + 2*Z46 + 30*Z49 + 6*Z51 + 16*Z54 + 8*Z55 + 112*Z56 + 50*Z6 + 6*Z8
obj B0 + B1 + B10 + B11 + B12 + B13 + B14 + B15 + B16 + B17 + B18 + B19 + B2 + B20 + B21 + B22 + B23 + B3 + B4 + B5 + B50 + B51 + B52 + B53 + B54 + B55 + B56 + B57 + B58 + B59 + B6 + B7 + B8 + B86 + B87 + B88 + B89 + B9 + B90 + B91 + B92 + B93 + B94 + B95 - 80*T13 - 80*T15 - 80*T17 - 80*T18 - 10*T2 - 80*T26 - 80*T28 - 80*T30 - 80*T32 - 10*T37 - 80*T38 - 10*T4 - 80*T42 - 80*T47 - 80*T48 - 10*T52 - 10*T9 - 20*X1 - 20*X10 - 20*X12 - 20*X13 - 20*X15 - 20*X16 - 20*X17 - 20*X18 - 20*X2 - 20*X21 - 20*X22 - 20*X25 - 20*X26 - 20*X28 - 20*X29 - 20*X30 - 20*X32 - 20*X34 - 20*X35 - 20*X37 - 20*X38 - 20*X39 - 20*X4 - 20*X41 - 20*X42 - 20*X43 - 20*X44 - 20*X47 - 20*X48 - 20*X5 - 20*X50 - 20*X52 - 20*X53 - 20*X7 - 20*X9 - 20*Y0 - 20*Y11 - 20*Y14 - 20*Y19 - 20*Y20 - 20*Y23 - 20*Y24 - 20*Y27 - 20*Y3 - 20*Y31 - 20*Y33 - 20*Y36 - 20*Y40 - 20*Y45 - 20*Y46 - 20*Y49 - 20*Y51 - 20*Y54 - 20*Y55 - 20*Y56 - 20*Y6 - 20*Y8 + 240*Z0 + 400*Z11 + 20*Z14 + 40*Z19 + 20*Z20 + 1120*Z23 + 40*Z24 + 20*Z27 + 20*Z3 + 120*Z31 + 20*Z33 + 200*Z36 + 20*Z40 + 480*Z45 + 20*Z46 + 300*Z49 + 60*Z51 + 160*Z54 + 80*Z55 + 1120*Z56 + 500*Z6 + 60*Z8 + 920
Problem:
MINIMIZE
1*B0 + 1*B1 + 1*B10 + 1*B11 + 1*B12 + 1*B13 + 1*B14 + 1*B15 + 1*B16 + 1*B17 + 1*B18 + 1*B19 + 1*B2 + 1*B20 + 1*B21 + 1*B22 + 1*B23 + 1*B3 + 1*B4 + 1*B5 + 1*B50 + 1*B51 + 1*B52 + 1*B53 + 1*B54 + 1*B55 + 1*B56 + 1*B57 + 1*B58 + 1*B59 + 1*B6 + 1*B7 + 1*B8 + 1*B86 + 1*B87 + 1*B88 + 1*B89 + 1*B9 + 1*B90 + 1*B91 + 1*B92 + 1*B93 + 1*B94 + 1*B95 + -80*T13 + -80*T15 + -80*T17 + -80*T18 + -10*T2 + -80*T26 + -80*T28 + -80*T30 + -80*T32 + -10*T37 + -80*T38 + -10*T4 + -80*T42 + -80*T47 + -80*T48 + -10*T52 + -10*T9 + -20*X1 + -20*X10 + -20*X12 + -20*X13 + -20*X15 + -20*X16 + -20*X17 + -20*X18 + -20*X2 + -20*X21 + -20*X22 + -20*X25 + -20*X26 + -20*X28 + -20*X29 + -20*X30 + -20*X32 + -20*X34 + -20*X35 + -20*X37 + -20*X38 + -20*X39 + -20*X4 + -20*X41 + -20*X42 + -20*X43 + -20*X44 + -20*X47 + -20*X48 + -20*X5 + -20*X50 + -20*X52 + -20*X53 + -20*X7 + -20*X9 + -20*Y0 + -20*Y11 + -20*Y14 + -20*Y19 + -20*Y20 + -20*Y23 + -20*Y24 + -20*Y27 + -20*Y3 + -20*Y31 + -20*Y33 + -20*Y36 + -20*Y40 + -20*Y45 + -20*Y46 + -20*Y49 + -20*Y51 + -20*Y54 + -20*Y55 + -20*Y56 + -20*Y6 + -20*Y8 + 240*Z0 + 400*Z11 + 20*Z14 + 40*Z19 + 20*Z20 + 1120*Z23 + 40*Z24 + 20*Z27 + 20*Z3 + 120*Z31 + 20*Z33 + 200*Z36 + 20*Z40 + 480*Z45 + 20*Z46 + 300*Z49 + 60*Z51 + 160*Z54 + 80*Z55 + 1120*Z56 + 500*Z6 + 60*Z8 + 920
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: X7 >= 1

_C19: Y8 + Z8 >= 0

_C20: - Y8 + Z8 >= 0

_C21: Z8 <= 1

_C22: - 10 T9 + X9 <= 0

_C23: - T9 + X9 >= 0

_C24: X9 >= 0

_C25: X10 >= 1

_C26: Y11 + Z11 >= 0

_C27: - Y11 + Z11 >= 0

_C28: Z11 <= 1

_C29: X12 >= 1

_C30: - 10 T13 + X13 <= 0

_C31: - T13 + X13 >= 0

_C32: X13 >= 0

_C33: Y14 + Z14 >= 0

_C34: - Y14 + Z14 >= 0

_C35: Z14 <= 1

_C36: - 10 T15 + X15 <= 0

_C37: - T15 + X15 >= 0

_C38: X15 >= 0

_C39: X16 >= 1

_C40: - 10 T17 + X17 <= 0

_C41: - T17 + X17 >= 0

_C42: X17 >= 0

_C43: - 10 T18 + X18 <= 0

_C44: - T18 + X18 >= 0

_C45: X18 >= 0

_C46: Y19 + Z19 >= 0

_C47: - Y19 + Z19 >= 0

_C48: Z19 <= 1

_C49: Y20 + Z20 >= 0

_C50: - Y20 + Z20 >= 0

_C51: Z20 <= 1

_C52: X21 >= 1

_C53: X22 >= 1

_C54: Y23 + Z23 >= 0

_C55: - Y23 + Z23 >= 0

_C56: Z23 <= 1

_C57: Y24 + Z24 >= 0

_C58: - Y24 + Z24 >= 0

_C59: Z24 <= 1

_C60: X25 >= 1

_C61: - 10 T26 + X26 <= 0

_C62: - T26 + X26 >= 0

_C63: X26 >= 0

_C64: Y27 + Z27 >= 0

_C65: - Y27 + Z27 >= 0

_C66: Z27 <= 1

_C67: - 10 T28 + X28 <= 0

_C68: - T28 + X28 >= 0

_C69: X28 >= 0

_C70: X29 >= 1

_C71: - 10 T30 + X30 <= 0

_C72: - T30 + X30 >= 0

_C73: X30 >= 0

_C74: Y31 + Z31 >= 0

_C75: - Y31 + Z31 >= 0

_C76: Z31 <= 1

_C77: - 10 T32 + X32 <= 0

_C78: - T32 + X32 >= 0

_C79: X32 >= 0

_C80: Y33 + Z33 >= 0

_C81: - Y33 + Z33 >= 0

_C82: Z33 <= 1

_C83: X34 >= 1

_C84: X35 >= 1

_C85: Y36 + Z36 >= 0

_C86: - Y36 + Z36 >= 0

_C87: Z36 <= 1

_C88: - 10 T37 + X37 <= 0

_C89: - T37 + X37 >= 0

_C90: X37 >= 0

_C91: - 10 T38 + X38 <= 0

_C92: - T38 + X38 >= 0

_C93: X38 >= 0

_C94: X39 >= 1

_C95: Y40 + Z40 >= 0

_C96: - Y40 + Z40 >= 0

_C97: Z40 <= 1

_C98: X41 >= 1

_C99: - 10 T42 + X42 <= 0

_C100: - T42 + X42 >= 0

_C101: X42 >= 0

_C102: X43 >= 1

_C103: X44 >= 1

_C104: Y45 + Z45 >= 0

_C105: - Y45 + Z45 >= 0

_C106: Z45 <= 1

_C107: Y46 + Z46 >= 0

_C108: - Y46 + Z46 >= 0

_C109: Z46 <= 1

_C110: - 10 T47 + X47 <= 0

_C111: - T47 + X47 >= 0

_C112: X47 >= 0

_C113: - 10 T48 + X48 <= 0

_C114: - T48 + X48 >= 0

_C115: X48 >= 0

_C116: Y49 + Z49 >= 0

_C117: - Y49 + Z49 >= 0

_C118: Z49 <= 1

_C119: X50 >= 1

_C120: Y51 + Z51 >= 0

_C121: - Y51 + Z51 >= 0

_C122: Z51 <= 1

_C123: - 10 T52 + X52 <= 0

_C124: - T52 + X52 >= 0

_C125: X52 >= 0

_C126: X53 >= 1

_C127: Y54 + Z54 >= 0

_C128: - Y54 + Z54 >= 0

_C129: Z54 <= 1

_C130: Y55 + Z55 >= 0

_C131: - Y55 + Z55 >= 0

_C132: Z55 <= 1

_C133: Y56 + Z56 >= 0

_C134: - Y56 + Z56 >= 0

_C135: Z56 <= 1

_C136: - 2 A0 - B0 - Y0 = -2

_C137: X1 + X2 + Y0 <= 2

_C138: - 2 A1 - B1 + X1 + X2 + Y0 = -2

_C139: X1 + X4 + Y3 <= 2

_C140: - 2 A2 - B2 + X1 + X4 + Y3 = -2

_C141: X2 + X5 + Y3 <= 2

_C142: - 2 A3 - B3 + X2 + X5 + Y3 = -2

_C143: X4 + X5 + Y6 <= 2

_C144: - 2 A4 - B4 + X4 + X5 + Y6 = -2

_C145: X7 + Y6 <= 2

_C146: - 2 A5 - B5 + X7 + Y6 = -2

_C147: X7 + X9 + Y8 <= 3

_C148: - 2 A6 - B6 + X7 + X9 + Y8 = -3

_C149: X10 + X9 + Y8 <= 3

_C150: - 2 A7 - B7 + X10 + X9 + Y8 = -3

_C151: X10 + Y11 <= 2

_C152: - 2 A8 - B8 + X10 + Y11 = -2

_C153: X12 + X13 + Y11 <= 2

_C154: - 2 A9 - B9 + X12 + X13 + Y11 = -2

_C155: X12 + X15 + Y14 <= 2

_C156: - 2 A10 - B10 + X12 + X15 + Y14 = -2

_C157: X16 + X17 + Y14 <= 2

_C158: - 2 A11 - B11 + X16 + X17 + Y14 = -2

_C159: X16 + X18 + Y19 <= 2

_C160: - 2 A12 - B12 + X16 + X18 + Y19 = -2

_C161: X18 + X21 + Y20 <= 2

_C162: - 2 A53 - B53 + X18 + X21 + Y20 = -2

_C163: X13 + X22 + Y20 <= 2

_C164: - 2 A52 - B52 + X13 + X22 + Y20 = -2

_C165: X15 + X22 + Y23 <= 2

_C166: - 2 A51 - B51 + X15 + X22 + Y23 = -2

_C167: - 2 A50 - B50 - Y23 = -2

_C168: X17 + X21 + Y24 <= 2

_C169: - 2 A54 - B54 + X17 + X21 + Y24 = -2

_C170: X25 + X26 + Y24 <= 2

_C171: - 2 A55 - B55 + X25 + X26 + Y24 = -2

_C172: X25 + X28 + Y27 <= 2

_C173: - 2 A56 - B56 + X25 + X28 + Y27 = -2

_C174: X29 + X30 + Y27 <= 2

_C175: - 2 A57 - B57 + X29 + X30 + Y27 = -2

_C176: X29 + X32 + Y31 <= 2

_C177: - 2 A58 - B58 + X29 + X32 + Y31 = -2

_C178: - 2 A59 - B59 - Y31 = -2

_C179: X32 + X34 + Y33 <= 2

_C180: - 2 A21 - B21 + X32 + X34 + Y33 = -2

_C181: X26 + X35 + Y33 <= 2

_C182: - 2 A20 - B20 + X26 + X35 + Y33 = -2

_C183: X28 + X35 + X37 + Y36 <= 2

_C184: - 2 A19 - B19 + X28 + X35 + X37 + Y36 = -2

_C185: X38 + X39 + Y36 <= 2

_C186: - 2 A18 - B18 + X38 + X39 + Y36 = -2

_C187: X38 + X41 + Y40 <= 2

_C188: - 2 A89 - B89 + X38 + X41 + Y40 = -2

_C189: X42 + X43 + Y40 <= 2

_C190: - 2 A88 - B88 + X42 + X43 + Y40 = -2

_C191: X42 + X44 + Y45 <= 2

_C192: - 2 A15 - B15 + X42 + X44 + Y45 = -2

_C193: X44 + X47 + Y46 <= 2

_C194: - 2 A16 - B16 + X44 + X47 + Y46 = -2

_C195: X39 + X48 + Y46 <= 2

_C196: - 2 A17 - B17 + X39 + X48 + Y46 = -2

_C197: X41 + X48 + Y49 <= 2

_C198: - 2 A90 - B90 + X41 + X48 + Y49 = -2

_C199: X50 + Y49 <= 2

_C200: - 2 A91 - B91 + X50 + Y49 = -2

_C201: X50 + X52 + Y51 <= 3

_C202: - 2 A92 - B92 + X50 + X52 + Y51 = -3

_C203: X52 + X53 + Y51 <= 3

_C204: - 2 A93 - B93 + X52 + X53 + Y51 = -3

_C205: X53 + Y54 <= 2

_C206: - 2 A94 - B94 + X53 + Y54 = -2

_C207: - 2 A95 - B95 - Y54 = -2

_C208: X43 + X47 + Y55 <= 2

_C209: - 2 A87 - B87 + X43 + X47 + Y55 = -2

_C210: - 2 A86 - B86 - Y55 = -2

_C211: - 2 A14 - B14 - Y45 = -2

_C212: X30 + X34 + X37 + Y56 <= 2

_C213: - 2 A22 - B22 + X30 + X34 + X37 + Y56 = -2

_C214: - 2 A23 - B23 - Y56 = -2

_C215: - 2 A13 - B13 - Y19 = -2

VARIABLES
0 <= A0 Integer
0 <= A1 Integer
0 <= A10 Integer
0 <= A11 Integer
0 <= A12 Integer
0 <= A13 Integer
0 <= A14 Integer
0 <= A15 Integer
0 <= A16 Integer
0 <= A17 Integer
0 <= A18 Integer
0 <= A19 Integer
0 <= A2 Integer
0 <= A20 Integer
0 <= A21 Integer
0 <= A22 Integer
0 <= A23 Integer
0 <= A3 Integer
0 <= A4 Integer
0 <= A5 Integer
0 <= A50 Integer
0 <= A51 Integer
0 <= A52 Integer
0 <= A53 Integer
0 <= A54 Integer
0 <= A55 Integer
0 <= A56 Integer
0 <= A57 Integer
0 <= A58 Integer
0 <= A59 Integer
0 <= A6 Integer
0 <= A7 Integer
0 <= A8 Integer
0 <= A86 Integer
0 <= A87 Integer
0 <= A88 Integer
0 <= A89 Integer
0 <= A9 Integer
0 <= A90 Integer
0 <= A91 Integer
0 <= A92 Integer
0 <= A93 Integer
0 <= A94 Integer
0 <= A95 Integer
0 <= B0 <= 1 Integer
0 <= B1 <= 1 Integer
0 <= B10 <= 1 Integer
0 <= B11 <= 1 Integer
0 <= B12 <= 1 Integer
0 <= B13 <= 1 Integer
0 <= B14 <= 1 Integer
0 <= B15 <= 1 Integer
0 <= B16 <= 1 Integer
0 <= B17 <= 1 Integer
0 <= B18 <= 1 Integer
0 <= B19 <= 1 Integer
0 <= B2 <= 1 Integer
0 <= B20 <= 1 Integer
0 <= B21 <= 1 Integer
0 <= B22 <= 1 Integer
0 <= B23 <= 1 Integer
0 <= B3 <= 1 Integer
0 <= B4 <= 1 Integer
0 <= B5 <= 1 Integer
0 <= B50 <= 1 Integer
0 <= B51 <= 1 Integer
0 <= B52 <= 1 Integer
0 <= B53 <= 1 Integer
0 <= B54 <= 1 Integer
0 <= B55 <= 1 Integer
0 <= B56 <= 1 Integer
0 <= B57 <= 1 Integer
0 <= B58 <= 1 Integer
0 <= B59 <= 1 Integer
0 <= B6 <= 1 Integer
0 <= B7 <= 1 Integer
0 <= B8 <= 1 Integer
0 <= B86 <= 1 Integer
0 <= B87 <= 1 Integer
0 <= B88 <= 1 Integer
0 <= B89 <= 1 Integer
0 <= B9 <= 1 Integer
0 <= B90 <= 1 Integer
0 <= B91 <= 1 Integer
0 <= B92 <= 1 Integer
0 <= B93 <= 1 Integer
0 <= B94 <= 1 Integer
0 <= B95 <= 1 Integer
0 <= T13 <= 1 Integer
0 <= T15 <= 1 Integer
0 <= T17 <= 1 Integer
0 <= T18 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T26 <= 1 Integer
0 <= T28 <= 1 Integer
0 <= T30 <= 1 Integer
0 <= T32 <= 1 Integer
0 <= T37 <= 1 Integer
0 <= T38 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= T42 <= 1 Integer
0 <= T47 <= 1 Integer
0 <= T48 <= 1 Integer
0 <= T52 <= 1 Integer
0 <= T9 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X12 Integer
0 <= X13 Integer
0 <= X15 Integer
0 <= X16 Integer
0 <= X17 Integer
0 <= X18 Integer
0 <= X2 Integer
0 <= X21 Integer
0 <= X22 Integer
0 <= X25 Integer
0 <= X26 Integer
0 <= X28 Integer
0 <= X29 Integer
0 <= X30 Integer
0 <= X32 Integer
0 <= X34 Integer
0 <= X35 Integer
0 <= X37 Integer
0 <= X38 Integer
0 <= X39 Integer
0 <= X4 Integer
0 <= X41 Integer
0 <= X42 Integer
0 <= X43 Integer
0 <= X44 Integer
0 <= X47 Integer
0 <= X48 Integer
0 <= X5 Integer
0 <= X50 Integer
0 <= X52 Integer
0 <= X53 Integer
0 <= X7 Integer
0 <= X9 Integer
Y0 free Integer
Y11 free Integer
Y14 free Integer
Y19 free Integer
Y20 free Integer
Y23 free Integer
Y24 free Integer
Y27 free Integer
Y3 free Integer
Y31 free Integer
Y33 free Integer
Y36 free Integer
Y40 free Integer
Y45 free Integer
Y46 free Integer
Y49 free Integer
Y51 free Integer
Y54 free Integer
Y55 free Integer
Y56 free Integer
Y6 free Integer
Y8 free Integer
Z0 free Integer
Z11 free Integer
Z14 free Integer
Z19 free Integer
Z20 free Integer
Z23 free Integer
Z24 free Integer
Z27 free Integer
Z3 free Integer
Z31 free Integer
Z33 free Integer
Z36 free Integer
Z40 free Integer
Z45 free Integer
Z46 free Integer
Z49 free Integer
Z51 free Integer
Z54 free Integer
Z55 free Integer
Z56 free Integer
Z6 free Integer
Z8 free Integer

Optimal
[A0, A1, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A2, A20, A21, A22, A23, A3, A4, A5, A50, A51, A52, A53, A54, A55, A56, A57, A58, A59, A6, A7, A8, A86, A87, A88, A89, A9, A90, A91, A92, A93, A94, A95, B0, B1, B10, B11, B12, B13, B14, B15, B16, B17, B18, B19, B2, B20, B21, B22, B23, B3, B4, B5, B50, B51, B52, B53, B54, B55, B56, B57, B58, B59, B6, B7, B8, B86, B87, B88, B89, B9, B90, B91, B92, B93, B94, B95, T13, T15, T17, T18, T2, T26, T28, T30, T32, T37, T38, T4, T42, T47, T48, T52, T9, X1, X10, X12, X13, X15, X16, X17, X18, X2, X21, X22, X25, X26, X28, X29, X30, X32, X34, X35, X37, X38, X39, X4, X41, X42, X43, X44, X47, X48, X5, X50, X52, X53, X7, X9, Y0, Y11, Y14, Y19, Y20, Y23, Y24, Y27, Y3, Y31, Y33, Y36, Y40, Y45, Y46, Y49, Y51, Y54, Y55, Y56, Y6, Y8, Z0, Z11, Z14, Z19, Z20, Z23, Z24, Z27, Z3, Z31, Z33, Z36, Z40, Z45, Z46, Z49, Z51, Z54, Z55, Z56, Z6, Z8]
1 2 1.0 R
7 8 2.0 R
9 10 1.0 R
9 52 1.0 SV
10 51 1.0 SV
11 12 1.0 R
11 54 1.0 SV
12 53 1.0 SV
1 3 1.0 SV
53 54 1.0 R
51 52 1.0 R
55 56 1.0 R
20 55 1.0 SV
19 56 1.0 SV
57 58 1.0 R
22 57 1.0 SV
21 58 1.0 SV
21 22 1.0 R
19 20 1.0 R
19 22 0.0 SV
18 89 1.0 SV
17 18 1.0 R
2 4 1.0 SV
89 90 1.0 R
15 88 1.0 SV
87 88 1.0 R
15 16 1.0 R
16 87 1.0 SV
17 90 1.0 SV
3 4 1.0 R
91 92 2.0 R
92 93 1.0 SV
93 94 2.0 R
5 6 2.0 R
6 7 1.0 SV
A0 = 1.0
A1 = 2.0
A10 = 2.0
A11 = 2.0
A12 = 2.0
A13 = 1.0
A14 = 1.0
A15 = 2.0
A16 = 2.0
A17 = 2.0
A18 = 2.0
A19 = 2.0
A2 = 2.0
A20 = 2.0
A21 = 2.0
A22 = 2.0
A23 = 1.0
A3 = 2.0
A4 = 2.0
A5 = 2.0
A50 = 1.0
A51 = 2.0
A52 = 2.0
A53 = 2.0
A54 = 2.0
A55 = 2.0
A56 = 2.0
A57 = 2.0
A58 = 2.0
A59 = 1.0
A6 = 3.0
A7 = 3.0
A8 = 2.0
A86 = 1.0
A87 = 2.0
A88 = 2.0
A89 = 2.0
A9 = 2.0
A90 = 2.0
A91 = 2.0
A92 = 3.0
A93 = 3.0
A94 = 2.0
A95 = 1.0
B0 = 0.0
B1 = 0.0
B10 = 0.0
B11 = 0.0
B12 = 0.0
B13 = 0.0
B14 = 0.0
B15 = 0.0
B16 = 0.0
B17 = 0.0
B18 = 0.0
B19 = 0.0
B2 = 0.0
B20 = 0.0
B21 = 0.0
B22 = 0.0
B23 = 0.0
B3 = 0.0
B4 = 0.0
B5 = 0.0
B50 = 0.0
B51 = 0.0
B52 = 0.0
B53 = 0.0
B54 = 0.0
B55 = 0.0
B56 = 0.0
B57 = 0.0
B58 = 0.0
B59 = 0.0
B6 = 0.0
B7 = 0.0
B8 = 0.0
B86 = 0.0
B87 = 0.0
B88 = 0.0
B89 = 0.0
B9 = 0.0
B90 = 0.0
B91 = 0.0
B92 = 0.0
B93 = 0.0
B94 = 0.0
B95 = 0.0
T13 = 1.0
T15 = 1.0
T17 = 1.0
T18 = 1.0
T2 = 1.0
T26 = 1.0
T28 = 1.0
T30 = 1.0
T32 = 1.0
T37 = 0.0
T38 = 1.0
T4 = 1.0
T42 = 1.0
T47 = 1.0
T48 = 1.0
T52 = 1.0
T9 = 1.0
X1 = 1.0
X10 = 2.0
X12 = 1.0
X13 = 1.0
X15 = 1.0
X16 = 1.0
X17 = 1.0
X18 = 1.0
X2 = 1.0
X21 = 1.0
X22 = 1.0
X25 = 1.0
X26 = 1.0
X28 = 1.0
X29 = 1.0
X30 = 1.0
X32 = 1.0
X34 = 1.0
X35 = 1.0
X37 = 0.0
X38 = 1.0
X39 = 1.0
X4 = 1.0
X41 = 1.0
X42 = 1.0
X43 = 1.0
X44 = 1.0
X47 = 1.0
X48 = 1.0
X5 = 1.0
X50 = 2.0
X52 = 1.0
X53 = 2.0
X7 = 2.0
X9 = 1.0
Y0 = 0.0
Y11 = 0.0
Y14 = 0.0
Y19 = 0.0
Y20 = 0.0
Y23 = 0.0
Y24 = 0.0
Y27 = 0.0
Y3 = 0.0
Y31 = 0.0
Y33 = 0.0
Y36 = 0.0
Y40 = 0.0
Y45 = 0.0
Y46 = 0.0
Y49 = 0.0
Y51 = 0.0
Y54 = 0.0
Y55 = 0.0
Y56 = 0.0
Y6 = 0.0
Y8 = 0.0
Z0 = 0.0
Z11 = 0.0
Z14 = 0.0
Z19 = 0.0
Z20 = 0.0
Z23 = 0.0
Z24 = 0.0
Z27 = 0.0
Z3 = 0.0
Z31 = 0.0
Z33 = 0.0
Z36 = 0.0
Z40 = 0.0
Z45 = 0.0
Z46 = 0.0
Z49 = 0.0
Z51 = 0.0
Z54 = 0.0
Z55 = 0.0
Z56 = 0.0
Z6 = 0.0
Z8 = 0.0
-840.0 Objective Answer
Siavash [(24, 25, 2, 'S'), (25, 26, 0, 'R'), (25, 28, 0, 'SV'), (26, 27, 1, 'S'), (27, 28, 0, 'R'), (28, 29, 2, 'S'), (24, 24, 0, 'SV')]
Y0 (24, 25, 2, 'S')
X1 (25, 26, 0, 'R')
X2 (25, 28, 0, 'SV')
Y3 (26, 27, 1, 'S')
X4 (27, 28, 0, 'R')
Y5 (28, 29, 2, 'S')
X6 (24, 24, 0, 'SV')
A24 A24
B24 B24
A25 A25
B25 B25
A26 A26
B26 B26
A27 A27
B27 B27
A28 A28
B28 B28
A29 A29
B29 B29
obj -2*X1 - 2*X2 - 2*X4 - 2*X6 - 2*Y0 - 2*Y3 - 2*Y5 + 10
Sv_sum T2 + T6
CN_tune 28*Z0 + 6*Z3 + 108*Z5
obj B24 + B25 + B26 + B27 + B28 + B29 - 10*T2 - 10*T6 - 20*X1 - 20*X2 - 20*X4 - 20*X6 - 20*Y0 - 20*Y3 - 20*Y5 + 280*Z0 + 60*Z3 + 1080*Z5 + 100
Problem:
MINIMIZE
1*B24 + 1*B25 + 1*B26 + 1*B27 + 1*B28 + 1*B29 + -10*T2 + -10*T6 + -20*X1 + -20*X2 + -20*X4 + -20*X6 + -20*Y0 + -20*Y3 + -20*Y5 + 280*Z0 + 60*Z3 + 1080*Z5 + 100
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 10 T6 + X6 <= 0

_C16: - T6 + X6 >= 0

_C17: X6 >= 0

_C18: 2 X6 + Y0 <= 2

_C19: - 2 A24 - B24 + 2 X6 + Y0 = -2

_C20: X1 + X2 + Y0 <= 2

_C21: - 2 A25 - B25 + X1 + X2 + Y0 = -2

_C22: X1 + Y3 <= 1

_C23: - 2 A26 - B26 + X1 + Y3 = -1

_C24: X4 + Y3 <= 1

_C25: - 2 A27 - B27 + X4 + Y3 = -1

_C26: X2 + X4 + Y5 <= 2

_C27: - 2 A28 - B28 + X2 + X4 + Y5 = -2

_C28: - 2 A29 - B29 - Y5 = -2

VARIABLES
0 <= A24 Integer
0 <= A25 Integer
0 <= A26 Integer
0 <= A27 Integer
0 <= A28 Integer
0 <= A29 Integer
0 <= B24 <= 1 Integer
0 <= B25 <= 1 Integer
0 <= B26 <= 1 Integer
0 <= B27 <= 1 Integer
0 <= B28 <= 1 Integer
0 <= B29 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T6 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X6 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A24, A25, A26, A27, A28, A29, B24, B25, B26, B27, B28, B29, T2, T6, X1, X2, X4, X6, Y0, Y3, Y5, Z0, Z3, Z5]
25 26 1.0 R
25 28 1.0 SV
27 28 1.0 R
24 24 1.0 SV
A24 = 2.0
A25 = 2.0
A26 = 1.0
A27 = 1.0
A28 = 2.0
A29 = 1.0
B24 = 0.0
B25 = 0.0
B26 = 0.0
B27 = 0.0
B28 = 0.0
B29 = 0.0
T2 = 1.0
T6 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
X6 = 1.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
0.0 Objective Answer
Siavash [(30, 32, 0, 'SV'), (31, 30, 2, 'S'), (32, 33, 2, 'S'), (31, 32, 0, 'R'), (33, 34, 0, 'R'), (34, 35, 3, 'S'), (35, 36, 0, 'R'), (36, 37, 2, 'S'), (35, 35, 0, 'SV')]
X0 (30, 32, 0, 'SV')
Y1 (31, 30, 2, 'S')
Y2 (32, 33, 2, 'S')
X3 (31, 32, 0, 'R')
X4 (33, 34, 0, 'R')
Y5 (34, 35, 3, 'S')
X6 (35, 36, 0, 'R')
Y7 (36, 37, 2, 'S')
X8 (35, 35, 0, 'SV')
A30 A30
B30 B30
A32 A32
B32 B32
A33 A33
B33 B33
A34 A34
B34 B34
A35 A35
B35 B35
A36 A36
B36 B36
A37 A37
B37 B37
A31 A31
B31 B31
obj -2*X0 - 2*X3 - 2*X4 - 2*X6 - 2*X8 - 2*Y1 - 2*Y2 - 2*Y5 - 2*Y7 + 18
Sv_sum T0 + T8
CN_tune 2*Z1 + 44*Z2 + 6*Z5 + 68*Z7
obj B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 - 10*T0 - 10*T8 - 20*X0 - 20*X3 - 20*X4 - 20*X6 - 20*X8 - 20*Y1 - 20*Y2 - 20*Y5 - 20*Y7 + 20*Z1 + 440*Z2 + 60*Z5 + 680*Z7 + 180
Problem:
MINIMIZE
1*B30 + 1*B31 + 1*B32 + 1*B33 + 1*B34 + 1*B35 + 1*B36 + 1*B37 + -10*T0 + -10*T8 + -20*X0 + -20*X3 + -20*X4 + -20*X6 + -20*X8 + -20*Y1 + -20*Y2 + -20*Y5 + -20*Y7 + 20*Z1 + 440*Z2 + 60*Z5 + 680*Z7 + 180
SUBJECT TO
_C1: - 10 T0 + X0 <= 0

_C2: - T0 + X0 >= 0

_C3: X0 >= 0

_C4: Y1 + Z1 >= 0

_C5: - Y1 + Z1 >= 0

_C6: Z1 <= 1

_C7: Y2 + Z2 >= 0

_C8: - Y2 + Z2 >= 0

_C9: Z2 <= 1

_C10: X3 >= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: X0 + Y1 <= 2

_C23: - 2 A30 - B30 + X0 + Y1 = -2

_C24: X0 + X3 + Y2 <= 2

_C25: - 2 A32 - B32 + X0 + X3 + Y2 = -2

_C26: X4 + Y2 <= 2

_C27: - 2 A33 - B33 + X4 + Y2 = -2

_C28: X4 + Y5 <= 3

_C29: - 2 A34 - B34 + X4 + Y5 = -3

_C30: X6 + 2 X8 + Y5 <= 3

_C31: - 2 A35 - B35 + X6 + 2 X8 + Y5 = -3

_C32: X6 + Y7 <= 2

_C33: - 2 A36 - B36 + X6 + Y7 = -2

_C34: - 2 A37 - B37 - Y7 = -2

_C35: X3 + Y1 <= 2

_C36: - 2 A31 - B31 + X3 + Y1 = -2

VARIABLES
0 <= A30 Integer
0 <= A31 Integer
0 <= A32 Integer
0 <= A33 Integer
0 <= A34 Integer
0 <= A35 Integer
0 <= A36 Integer
0 <= A37 Integer
0 <= B30 <= 1 Integer
0 <= B31 <= 1 Integer
0 <= B32 <= 1 Integer
0 <= B33 <= 1 Integer
0 <= B34 <= 1 Integer
0 <= B35 <= 1 Integer
0 <= B36 <= 1 Integer
0 <= B37 <= 1 Integer
0 <= T0 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X0 Integer
0 <= X3 Integer
0 <= X4 Integer
0 <= X6 Integer
0 <= X8 Integer
Y1 free Integer
Y2 free Integer
Y5 free Integer
Y7 free Integer
Z1 free Integer
Z2 free Integer
Z5 free Integer
Z7 free Integer

Optimal
[A30, A31, A32, A33, A34, A35, A36, A37, B30, B31, B32, B33, B34, B35, B36, B37, T0, T8, X0, X3, X4, X6, X8, Y1, Y2, Y5, Y7, Z1, Z2, Z5, Z7]
30 32 1.0 SV
31 32 1.0 R
33 34 2.0 R
35 36 1.0 R
35 35 1.0 SV
A30 = 2.0
A31 = 2.0
A32 = 2.0
A33 = 2.0
A34 = 2.0
A35 = 3.0
A36 = 1.0
A37 = 1.0
B30 = 0.0
B31 = 0.0
B32 = 0.0
B33 = 0.0
B34 = 1.0
B35 = 0.0
B36 = 1.0
B37 = 0.0
T0 = 1.0
T8 = 1.0
X0 = 1.0
X3 = 1.0
X4 = 2.0
X6 = 1.0
X8 = 1.0
Y1 = 1.0
Y2 = 0.0
Y5 = 0.0
Y7 = 0.0
Z1 = 1.0
Z2 = 0.0
Z5 = 0.0
Z7 = 0.0
42.0 Objective Answer
Siavash [(39, 38, 2, 'S'), (39, 40, 0, 'R'), (39, 110, 0, 'SV'), (41, 40, 2, 'S'), (40, 109, 0, 'SV'), (41, 42, 0, 'R'), (41, 112, 0, 'SV'), (42, 43, 2, 'S'), (42, 111, 0, 'SV'), (111, 112, 0, 'R'), (111, 110, 2, 'S'), (112, 113, 2, 'S'), (109, 110, 0, 'R'), (109, 108, 2, 'S'), (106, 108, 0, 'SV'), (107, 108, 0, 'R'), (105, 106, 0, 'R'), (107, 106, 2, 'S'), (105, 104, 2, 'S'), (105, 107, 0, 'SV'), (103, 104, 0, 'R'), (102, 103, 2, 'S'), (101, 102, 0, 'R'), (100, 101, 2, 'S')]
Y0 (39, 38, 2, 'S')
X1 (39, 40, 0, 'R')
X2 (39, 110, 0, 'SV')
Y3 (41, 40, 2, 'S')
X4 (40, 109, 0, 'SV')
X5 (41, 42, 0, 'R')
X6 (41, 112, 0, 'SV')
Y7 (42, 43, 2, 'S')
X8 (42, 111, 0, 'SV')
X9 (111, 112, 0, 'R')
Y10 (111, 110, 2, 'S')
Y11 (112, 113, 2, 'S')
X12 (109, 110, 0, 'R')
Y13 (109, 108, 2, 'S')
X14 (106, 108, 0, 'SV')
X15 (107, 108, 0, 'R')
X16 (105, 106, 0, 'R')
Y17 (107, 106, 2, 'S')
Y18 (105, 104, 2, 'S')
X19 (105, 107, 0, 'SV')
X20 (103, 104, 0, 'R')
Y21 (102, 103, 2, 'S')
X22 (101, 102, 0, 'R')
Y23 (100, 101, 2, 'S')
A38 A38
B38 B38
A39 A39
B39 B39
A40 A40
B40 B40
A41 A41
B41 B41
A42 A42
B42 B42
A43 A43
B43 B43
A111 A111
B111 B111
A112 A112
B112 B112
A113 A113
B113 B113
A110 A110
B110 B110
A109 A109
B109 B109
A108 A108
B108 B108
A106 A106
B106 B106
A105 A105
B105 B105
A104 A104
B104 B104
A103 A103
B103 B103
A102 A102
B102 B102
A101 A101
B101 B101
A100 A100
B100 B100
A107 A107
B107 B107
obj -2*X1 - 2*X12 - 2*X14 - 2*X15 - 2*X16 - 2*X19 - 2*X2 - 2*X20 - 2*X22 - 2*X4 - 2*X5 - 2*X6 - 2*X8 - 2*X9 - 2*Y0 - 2*Y10 - 2*Y11 - 2*Y13 - 2*Y17 - 2*Y18 - 2*Y21 - 2*Y23 - 2*Y3 - 2*Y7 + 40
Sv_sum T14 + T19 + 8*T2 + 8*T4 + 8*T6 + 8*T8
CN_tune 120*Z0 + 2*Z10 + 24*Z11 + 16*Z13 + 2*Z17 + 2*Z18 + 2*Z21 + 20*Z23 + 2*Z3 + 28*Z7
obj B100 + B101 + B102 + B103 + B104 + B105 + B106 + B107 + B108 + B109 + B110 + B111 + B112 + B113 + B38 + B39 + B40 + B41 + B42 + B43 - 10*T14 - 10*T19 - 80*T2 - 80*T4 - 80*T6 - 80*T8 - 20*X1 - 20*X12 - 20*X14 - 20*X15 - 20*X16 - 20*X19 - 20*X2 - 20*X20 - 20*X22 - 20*X4 - 20*X5 - 20*X6 - 20*X8 - 20*X9 - 20*Y0 - 20*Y10 - 20*Y11 - 20*Y13 - 20*Y17 - 20*Y18 - 20*Y21 - 20*Y23 - 20*Y3 - 20*Y7 + 1200*Z0 + 20*Z10 + 240*Z11 + 160*Z13 + 20*Z17 + 20*Z18 + 20*Z21 + 200*Z23 + 20*Z3 + 280*Z7 + 400
Problem:
MINIMIZE
1*B100 + 1*B101 + 1*B102 + 1*B103 + 1*B104 + 1*B105 + 1*B106 + 1*B107 + 1*B108 + 1*B109 + 1*B110 + 1*B111 + 1*B112 + 1*B113 + 1*B38 + 1*B39 + 1*B40 + 1*B41 + 1*B42 + 1*B43 + -10*T14 + -10*T19 + -80*T2 + -80*T4 + -80*T6 + -80*T8 + -20*X1 + -20*X12 + -20*X14 + -20*X15 + -20*X16 + -20*X19 + -20*X2 + -20*X20 + -20*X22 + -20*X4 + -20*X5 + -20*X6 + -20*X8 + -20*X9 + -20*Y0 + -20*Y10 + -20*Y11 + -20*Y13 + -20*Y17 + -20*Y18 + -20*Y21 + -20*Y23 + -20*Y3 + -20*Y7 + 1200*Z0 + 20*Z10 + 240*Z11 + 160*Z13 + 20*Z17 + 20*Z18 + 20*Z21 + 200*Z23 + 20*Z3 + 280*Z7 + 400
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: - 10 T6 + X6 <= 0

_C16: - T6 + X6 >= 0

_C17: X6 >= 0

_C18: Y7 + Z7 >= 0

_C19: - Y7 + Z7 >= 0

_C20: Z7 <= 1

_C21: - 10 T8 + X8 <= 0

_C22: - T8 + X8 >= 0

_C23: X8 >= 0

_C24: X9 >= 1

_C25: Y10 + Z10 >= 0

_C26: - Y10 + Z10 >= 0

_C27: Z10 <= 1

_C28: Y11 + Z11 >= 0

_C29: - Y11 + Z11 >= 0

_C30: Z11 <= 1

_C31: X12 >= 1

_C32: Y13 + Z13 >= 0

_C33: - Y13 + Z13 >= 0

_C34: Z13 <= 1

_C35: - 10 T14 + X14 <= 0

_C36: - T14 + X14 >= 0

_C37: X14 >= 0

_C38: X15 >= 1

_C39: X16 >= 1

_C40: Y17 + Z17 >= 0

_C41: - Y17 + Z17 >= 0

_C42: Z17 <= 1

_C43: Y18 + Z18 >= 0

_C44: - Y18 + Z18 >= 0

_C45: Z18 <= 1

_C46: - 10 T19 + X19 <= 0

_C47: - T19 + X19 >= 0

_C48: X19 >= 0

_C49: X20 >= 1

_C50: Y21 + Z21 >= 0

_C51: - Y21 + Z21 >= 0

_C52: Z21 <= 1

_C53: X22 >= 1

_C54: Y23 + Z23 >= 0

_C55: - Y23 + Z23 >= 0

_C56: Z23 <= 1

_C57: - 2 A38 - B38 - Y0 = -2

_C58: X1 + X2 + Y0 <= 2

_C59: - 2 A39 - B39 + X1 + X2 + Y0 = -2

_C60: X1 + X4 + Y3 <= 2

_C61: - 2 A40 - B40 + X1 + X4 + Y3 = -2

_C62: X5 + X6 + Y3 <= 2

_C63: - 2 A41 - B41 + X5 + X6 + Y3 = -2

_C64: X5 + X8 + Y7 <= 2

_C65: - 2 A42 - B42 + X5 + X8 + Y7 = -2

_C66: - 2 A43 - B43 - Y7 = -2

_C67: X8 + X9 + Y10 <= 2

_C68: - 2 A111 - B111 + X8 + X9 + Y10 = -2

_C69: X6 + X9 + Y11 <= 2

_C70: - 2 A112 - B112 + X6 + X9 + Y11 = -2

_C71: - 2 A113 - B113 - Y11 = -2

_C72: X12 + X2 + Y10 <= 2

_C73: - 2 A110 - B110 + X12 + X2 + Y10 = -2

_C74: X12 + X4 + Y13 <= 2

_C75: - 2 A109 - B109 + X12 + X4 + Y13 = -2

_C76: X14 + X15 + Y13 <= 2

_C77: - 2 A108 - B108 + X14 + X15 + Y13 = -2

_C78: X14 + X16 + Y17 <= 2

_C79: - 2 A106 - B106 + X14 + X16 + Y17 = -2

_C80: X16 + X19 + Y18 <= 2

_C81: - 2 A105 - B105 + X16 + X19 + Y18 = -2

_C82: X20 + Y18 <= 2

_C83: - 2 A104 - B104 + X20 + Y18 = -2

_C84: X20 + Y21 <= 2

_C85: - 2 A103 - B103 + X20 + Y21 = -2

_C86: X22 + Y21 <= 2

_C87: - 2 A102 - B102 + X22 + Y21 = -2

_C88: X22 + Y23 <= 2

_C89: - 2 A101 - B101 + X22 + Y23 = -2

_C90: - 2 A100 - B100 - Y23 = -2

_C91: X15 + X19 + Y17 <= 2

_C92: - 2 A107 - B107 + X15 + X19 + Y17 = -2

VARIABLES
0 <= A100 Integer
0 <= A101 Integer
0 <= A102 Integer
0 <= A103 Integer
0 <= A104 Integer
0 <= A105 Integer
0 <= A106 Integer
0 <= A107 Integer
0 <= A108 Integer
0 <= A109 Integer
0 <= A110 Integer
0 <= A111 Integer
0 <= A112 Integer
0 <= A113 Integer
0 <= A38 Integer
0 <= A39 Integer
0 <= A40 Integer
0 <= A41 Integer
0 <= A42 Integer
0 <= A43 Integer
0 <= B100 <= 1 Integer
0 <= B101 <= 1 Integer
0 <= B102 <= 1 Integer
0 <= B103 <= 1 Integer
0 <= B104 <= 1 Integer
0 <= B105 <= 1 Integer
0 <= B106 <= 1 Integer
0 <= B107 <= 1 Integer
0 <= B108 <= 1 Integer
0 <= B109 <= 1 Integer
0 <= B110 <= 1 Integer
0 <= B111 <= 1 Integer
0 <= B112 <= 1 Integer
0 <= B113 <= 1 Integer
0 <= B38 <= 1 Integer
0 <= B39 <= 1 Integer
0 <= B40 <= 1 Integer
0 <= B41 <= 1 Integer
0 <= B42 <= 1 Integer
0 <= B43 <= 1 Integer
0 <= T14 <= 1 Integer
0 <= T19 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= T6 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X12 Integer
0 <= X14 Integer
0 <= X15 Integer
0 <= X16 Integer
0 <= X19 Integer
0 <= X2 Integer
0 <= X20 Integer
0 <= X22 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X6 Integer
0 <= X8 Integer
0 <= X9 Integer
Y0 free Integer
Y10 free Integer
Y11 free Integer
Y13 free Integer
Y17 free Integer
Y18 free Integer
Y21 free Integer
Y23 free Integer
Y3 free Integer
Y7 free Integer
Z0 free Integer
Z10 free Integer
Z11 free Integer
Z13 free Integer
Z17 free Integer
Z18 free Integer
Z21 free Integer
Z23 free Integer
Z3 free Integer
Z7 free Integer

Optimal
[A100, A101, A102, A103, A104, A105, A106, A107, A108, A109, A110, A111, A112, A113, A38, A39, A40, A41, A42, A43, B100, B101, B102, B103, B104, B105, B106, B107, B108, B109, B110, B111, B112, B113, B38, B39, B40, B41, B42, B43, T14, T19, T2, T4, T6, T8, X1, X12, X14, X15, X16, X19, X2, X20, X22, X4, X5, X6, X8, X9, Y0, Y10, Y11, Y13, Y17, Y18, Y21, Y23, Y3, Y7, Z0, Z10, Z11, Z13, Z17, Z18, Z21, Z23, Z3, Z7]
39 40 1.0 R
109 110 1.0 R
106 108 1.0 SV
107 108 1.0 R
105 106 1.0 R
105 107 1.0 SV
39 110 1.0 SV
103 104 2.0 R
101 102 2.0 R
40 109 1.0 SV
41 42 1.0 R
41 112 1.0 SV
42 111 1.0 SV
111 112 1.0 R
A100 = 1.0
A101 = 2.0
A102 = 2.0
A103 = 2.0
A104 = 2.0
A105 = 2.0
A106 = 2.0
A107 = 2.0
A108 = 2.0
A109 = 2.0
A110 = 2.0
A111 = 2.0
A112 = 2.0
A113 = 1.0
A38 = 1.0
A39 = 2.0
A40 = 2.0
A41 = 2.0
A42 = 2.0
A43 = 1.0
B100 = 0.0
B101 = 0.0
B102 = 0.0
B103 = 0.0
B104 = 0.0
B105 = 0.0
B106 = 0.0
B107 = 0.0
B108 = 0.0
B109 = 0.0
B110 = 0.0
B111 = 0.0
B112 = 0.0
B113 = 0.0
B38 = 0.0
B39 = 0.0
B40 = 0.0
B41 = 0.0
B42 = 0.0
B43 = 0.0
T14 = 1.0
T19 = 1.0
T2 = 1.0
T4 = 1.0
T6 = 1.0
T8 = 1.0
X1 = 1.0
X12 = 1.0
X14 = 1.0
X15 = 1.0
X16 = 1.0
X19 = 1.0
X2 = 1.0
X20 = 2.0
X22 = 2.0
X4 = 1.0
X5 = 1.0
X6 = 1.0
X8 = 1.0
X9 = 1.0
Y0 = 0.0
Y10 = 0.0
Y11 = 0.0
Y13 = 0.0
Y17 = 0.0
Y18 = 0.0
Y21 = 0.0
Y23 = 0.0
Y3 = 0.0
Y7 = 0.0
Z0 = 0.0
Z10 = 0.0
Z11 = 0.0
Z13 = 0.0
Z17 = 0.0
Z18 = 0.0
Z21 = 0.0
Z23 = 0.0
Z3 = 0.0
Z7 = 0.0
-260.0 Objective Answer
Siavash [(45, 44, 2, 'S'), (45, 46, 0, 'R'), (45, 47, 0, 'SV'), (46, 48, 0, 'SV'), (47, 46, 2, 'S'), (48, 49, 2, 'S'), (47, 48, 0, 'R')]
Y0 (45, 44, 2, 'S')
X1 (45, 46, 0, 'R')
X2 (45, 47, 0, 'SV')
X3 (46, 48, 0, 'SV')
Y4 (47, 46, 2, 'S')
Y5 (48, 49, 2, 'S')
X6 (47, 48, 0, 'R')
A44 A44
B44 B44
A45 A45
B45 B45
A46 A46
B46 B46
A48 A48
B48 B48
A49 A49
B49 B49
A47 A47
B47 B47
obj -2*X1 - 2*X2 - 2*X3 - 2*X6 - 2*Y0 - 2*Y4 - 2*Y5 + 12
Sv_sum T2 + T3
CN_tune 72*Z0 + 2*Z4 + 68*Z5
obj B44 + B45 + B46 + B47 + B48 + B49 - 10*T2 - 10*T3 - 20*X1 - 20*X2 - 20*X3 - 20*X6 - 20*Y0 - 20*Y4 - 20*Y5 + 720*Z0 + 20*Z4 + 680*Z5 + 120
Problem:
MINIMIZE
1*B44 + 1*B45 + 1*B46 + 1*B47 + 1*B48 + 1*B49 + -10*T2 + -10*T3 + -20*X1 + -20*X2 + -20*X3 + -20*X6 + -20*Y0 + -20*Y4 + -20*Y5 + 720*Z0 + 20*Z4 + 680*Z5 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: Y4 + Z4 >= 0

_C12: - Y4 + Z4 >= 0

_C13: Z4 <= 1

_C14: Y5 + Z5 >= 0

_C15: - Y5 + Z5 >= 0

_C16: Z5 <= 1

_C17: X6 >= 1

_C18: - 2 A44 - B44 - Y0 = -2

_C19: X1 + X2 + Y0 <= 2

_C20: - 2 A45 - B45 + X1 + X2 + Y0 = -2

_C21: X1 + X3 + Y4 <= 2

_C22: - 2 A46 - B46 + X1 + X3 + Y4 = -2

_C23: X3 + X6 + Y5 <= 2

_C24: - 2 A48 - B48 + X3 + X6 + Y5 = -2

_C25: - 2 A49 - B49 - Y5 = -2

_C26: X2 + X6 + Y4 <= 2

_C27: - 2 A47 - B47 + X2 + X6 + Y4 = -2

VARIABLES
0 <= A44 Integer
0 <= A45 Integer
0 <= A46 Integer
0 <= A47 Integer
0 <= A48 Integer
0 <= A49 Integer
0 <= B44 <= 1 Integer
0 <= B45 <= 1 Integer
0 <= B46 <= 1 Integer
0 <= B47 <= 1 Integer
0 <= B48 <= 1 Integer
0 <= B49 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X3 Integer
0 <= X6 Integer
Y0 free Integer
Y4 free Integer
Y5 free Integer
Z0 free Integer
Z4 free Integer
Z5 free Integer

Optimal
[A44, A45, A46, A47, A48, A49, B44, B45, B46, B47, B48, B49, T2, T3, X1, X2, X3, X6, Y0, Y4, Y5, Z0, Z4, Z5]
45 46 1.0 R
45 47 1.0 SV
46 48 1.0 SV
47 48 1.0 R
A44 = 1.0
A45 = 2.0
A46 = 2.0
A47 = 2.0
A48 = 2.0
A49 = 1.0
B44 = 0.0
B45 = 0.0
B46 = 0.0
B47 = 0.0
B48 = 0.0
B49 = 0.0
T2 = 1.0
T3 = 1.0
X1 = 1.0
X2 = 1.0
X3 = 1.0
X6 = 1.0
Y0 = 0.0
Y4 = 0.0
Y5 = 0.0
Z0 = 0.0
Z4 = 0.0
Z5 = 0.0
20.0 Objective Answer
Siavash [(60, 61, 2, 'S')]
Y0 (60, 61, 2, 'S')
A60 A60
B60 B60
A61 A61
B61 B61
obj -2*Y0 + 4
Sv_sum 0
CN_tune 180*Z0
obj B60 + B61 - 20*Y0 + 1800*Z0 + 40
Problem:
MINIMIZE
1*B60 + 1*B61 + -20*Y0 + 1800*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A60 - B60 - Y0 = -2

_C5: - 2 A61 - B61 - Y0 = -2

VARIABLES
0 <= A60 Integer
0 <= A61 Integer
0 <= B60 <= 1 Integer
0 <= B61 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A60, A61, B60, B61, Y0, Z0]
A60 = 1.0
A61 = 1.0
B60 = 0.0
B61 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(63, 62, 2, 'S'), (63, 64, 0, 'R'), (63, 65, 0, 'SV'), (65, 64, 2, 'S'), (64, 66, 0, 'SV'), (65, 66, 0, 'R'), (66, 67, 2, 'S')]
Y0 (63, 62, 2, 'S')
X1 (63, 64, 0, 'R')
X2 (63, 65, 0, 'SV')
Y3 (65, 64, 2, 'S')
X4 (64, 66, 0, 'SV')
X5 (65, 66, 0, 'R')
Y6 (66, 67, 2, 'S')
A62 A62
B62 B62
A63 A63
B63 B63
A64 A64
B64 B64
A65 A65
B65 B65
A66 A66
B66 B66
A67 A67
B67 B67
obj -2*X1 - 2*X2 - 2*X4 - 2*X5 - 2*Y0 - 2*Y3 - 2*Y6 + 12
Sv_sum T2 + T4
CN_tune 4*Z0 + 2*Z3 + 108*Z6
obj B62 + B63 + B64 + B65 + B66 + B67 - 10*T2 - 10*T4 - 20*X1 - 20*X2 - 20*X4 - 20*X5 - 20*Y0 - 20*Y3 - 20*Y6 + 40*Z0 + 20*Z3 + 1080*Z6 + 120
Problem:
MINIMIZE
1*B62 + 1*B63 + 1*B64 + 1*B65 + 1*B66 + 1*B67 + -10*T2 + -10*T4 + -20*X1 + -20*X2 + -20*X4 + -20*X5 + -20*Y0 + -20*Y3 + -20*Y6 + 40*Z0 + 20*Z3 + 1080*Z6 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: - 2 A62 - B62 - Y0 = -2

_C19: X1 + X2 + Y0 <= 2

_C20: - 2 A63 - B63 + X1 + X2 + Y0 = -2

_C21: X1 + X4 + Y3 <= 2

_C22: - 2 A64 - B64 + X1 + X4 + Y3 = -2

_C23: X2 + X5 + Y3 <= 2

_C24: - 2 A65 - B65 + X2 + X5 + Y3 = -2

_C25: X4 + X5 + Y6 <= 2

_C26: - 2 A66 - B66 + X4 + X5 + Y6 = -2

_C27: - 2 A67 - B67 - Y6 = -2

VARIABLES
0 <= A62 Integer
0 <= A63 Integer
0 <= A64 Integer
0 <= A65 Integer
0 <= A66 Integer
0 <= A67 Integer
0 <= B62 <= 1 Integer
0 <= B63 <= 1 Integer
0 <= B64 <= 1 Integer
0 <= B65 <= 1 Integer
0 <= B66 <= 1 Integer
0 <= B67 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
Y0 free Integer
Y3 free Integer
Y6 free Integer
Z0 free Integer
Z3 free Integer
Z6 free Integer

Optimal
[A62, A63, A64, A65, A66, A67, B62, B63, B64, B65, B66, B67, T2, T4, X1, X2, X4, X5, Y0, Y3, Y6, Z0, Z3, Z6]
63 64 1.0 R
63 65 1.0 SV
64 66 1.0 SV
65 66 1.0 R
A62 = 1.0
A63 = 2.0
A64 = 2.0
A65 = 2.0
A66 = 2.0
A67 = 1.0
B62 = 0.0
B63 = 0.0
B64 = 0.0
B65 = 0.0
B66 = 0.0
B67 = 0.0
T2 = 1.0
T4 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
X5 = 1.0
Y0 = 0.0
Y3 = 0.0
Y6 = 0.0
Z0 = 0.0
Z3 = 0.0
Z6 = 0.0
20.0 Objective Answer
Siavash [(69, 68, 2, 'S'), (69, 70, 0, 'R'), (69, 71, 0, 'SV'), (71, 70, 2, 'S'), (71, 72, 0, 'R'), (72, 73, 2, 'S')]
Y0 (69, 68, 2, 'S')
X1 (69, 70, 0, 'R')
X2 (69, 71, 0, 'SV')
Y3 (71, 70, 2, 'S')
X4 (71, 72, 0, 'R')
Y5 (72, 73, 2, 'S')
A68 A68
B68 B68
A69 A69
B69 B69
A70 A70
B70 B70
A71 A71
B71 B71
A72 A72
B72 B72
A73 A73
B73 B73
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 - 2*Y5 + 12
Sv_sum T2
CN_tune 40*Z0 + 2*Z3 + 72*Z5
obj B68 + B69 + B70 + B71 + B72 + B73 - 10*T2 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 - 20*Y5 + 400*Z0 + 20*Z3 + 720*Z5 + 120
Problem:
MINIMIZE
1*B68 + 1*B69 + 1*B70 + 1*B71 + 1*B72 + 1*B73 + -10*T2 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + -20*Y5 + 400*Z0 + 20*Z3 + 720*Z5 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A68 - B68 - Y0 = -2

_C16: X1 + X2 + Y0 <= 2

_C17: - 2 A69 - B69 + X1 + X2 + Y0 = -2

_C18: X1 + Y3 <= 2

_C19: - 2 A70 - B70 + X1 + Y3 = -2

_C20: X2 + X4 + Y3 <= 2

_C21: - 2 A71 - B71 + X2 + X4 + Y3 = -2

_C22: X4 + Y5 <= 2

_C23: - 2 A72 - B72 + X4 + Y5 = -2

_C24: - 2 A73 - B73 - Y5 = -2

VARIABLES
0 <= A68 Integer
0 <= A69 Integer
0 <= A70 Integer
0 <= A71 Integer
0 <= A72 Integer
0 <= A73 Integer
0 <= B68 <= 1 Integer
0 <= B69 <= 1 Integer
0 <= B70 <= 1 Integer
0 <= B71 <= 1 Integer
0 <= B72 <= 1 Integer
0 <= B73 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A68, A69, A70, A71, A72, A73, B68, B69, B70, B71, B72, B73, T2, X1, X2, X4, Y0, Y3, Y5, Z0, Z3, Z5]
69 70 2.0 R
69 71 0.0 SV
71 72 2.0 R
A68 = 1.0
A69 = 2.0
A70 = 2.0
A71 = 2.0
A72 = 2.0
A73 = 1.0
B68 = 0.0
B69 = 0.0
B70 = 0.0
B71 = 0.0
B72 = 0.0
B73 = 0.0
T2 = 0.0
X1 = 2.0
X2 = 0.0
X4 = 2.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
40.0 Objective Answer
Siavash [(74, 75, 2, 'S')]
Y0 (74, 75, 2, 'S')
A74 A74
B74 B74
A75 A75
B75 B75
obj -2*Y0 + 4
Sv_sum 0
CN_tune 168*Z0
obj B74 + B75 - 20*Y0 + 1680*Z0 + 40
Problem:
MINIMIZE
1*B74 + 1*B75 + -20*Y0 + 1680*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A74 - B74 - Y0 = -2

_C5: - 2 A75 - B75 - Y0 = -2

VARIABLES
0 <= A74 Integer
0 <= A75 Integer
0 <= B74 <= 1 Integer
0 <= B75 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A74, A75, B74, B75, Y0, Z0]
A74 = 1.0
A75 = 1.0
B74 = 0.0
B75 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(77, 76, 2, 'S'), (77, 83, 0, 'SV'), (77, 78, 0, 'R'), (83, 82, 2, 'S'), (83, 84, 0, 'R'), (81, 82, 0, 'R'), (80, 81, 3, 'S'), (79, 80, 0, 'R'), (78, 79, 2, 'S'), (84, 85, 2, 'S'), (80, 80, 0, 'SV')]
Y0 (77, 76, 2, 'S')
X1 (77, 83, 0, 'SV')
X2 (77, 78, 0, 'R')
Y3 (83, 82, 2, 'S')
X4 (83, 84, 0, 'R')
X5 (81, 82, 0, 'R')
Y6 (80, 81, 3, 'S')
X7 (79, 80, 0, 'R')
Y8 (78, 79, 2, 'S')
Y9 (84, 85, 2, 'S')
X10 (80, 80, 0, 'SV')
A76 A76
B76 B76
A77 A77
B77 B77
A83 A83
B83 B83
A82 A82
B82 B82
A81 A81
B81 B81
A80 A80
B80 B80
A79 A79
B79 B79
A78 A78
B78 B78
A84 A84
B84 B84
A85 A85
B85 B85
obj -2*X1 - 2*X10 - 2*X2 - 2*X4 - 2*X5 - 2*X7 - 2*Y0 - 2*Y3 - 2*Y6 - 2*Y8 - 2*Y9 + 22
Sv_sum T1 + T10
CN_tune 48*Z0 + 2*Z3 + 6*Z6 + 2*Z8 + 60*Z9
obj B76 + B77 + B78 + B79 + B80 + B81 + B82 + B83 + B84 + B85 - 10*T1 - 10*T10 - 20*X1 - 20*X10 - 20*X2 - 20*X4 - 20*X5 - 20*X7 - 20*Y0 - 20*Y3 - 20*Y6 - 20*Y8 - 20*Y9 + 480*Z0 + 20*Z3 + 60*Z6 + 20*Z8 + 600*Z9 + 220
Problem:
MINIMIZE
1*B76 + 1*B77 + 1*B78 + 1*B79 + 1*B80 + 1*B81 + 1*B82 + 1*B83 + 1*B84 + 1*B85 + -10*T1 + -10*T10 + -20*X1 + -20*X10 + -20*X2 + -20*X4 + -20*X5 + -20*X7 + -20*Y0 + -20*Y3 + -20*Y6 + -20*Y8 + -20*Y9 + 480*Z0 + 20*Z3 + 60*Z6 + 20*Z8 + 600*Z9 + 220
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 10 T1 + X1 <= 0

_C5: - T1 + X1 >= 0

_C6: X1 >= 0

_C7: X2 >= 1

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: X5 >= 1

_C13: Y6 + Z6 >= 0

_C14: - Y6 + Z6 >= 0

_C15: Z6 <= 1

_C16: X7 >= 1

_C17: Y8 + Z8 >= 0

_C18: - Y8 + Z8 >= 0

_C19: Z8 <= 1

_C20: Y9 + Z9 >= 0

_C21: - Y9 + Z9 >= 0

_C22: Z9 <= 1

_C23: - 10 T10 + X10 <= 0

_C24: - T10 + X10 >= 0

_C25: X10 >= 0

_C26: - 2 A76 - B76 - Y0 = -2

_C27: X1 + X2 + Y0 <= 2

_C28: - 2 A77 - B77 + X1 + X2 + Y0 = -2

_C29: X1 + X4 + Y3 <= 2

_C30: - 2 A83 - B83 + X1 + X4 + Y3 = -2

_C31: X5 + Y3 <= 2

_C32: - 2 A82 - B82 + X5 + Y3 = -2

_C33: X5 + Y6 <= 3

_C34: - 2 A81 - B81 + X5 + Y6 = -3

_C35: 2 X10 + X7 + Y6 <= 3

_C36: - 2 A80 - B80 + 2 X10 + X7 + Y6 = -3

_C37: X7 + Y8 <= 2

_C38: - 2 A79 - B79 + X7 + Y8 = -2

_C39: X2 + Y8 <= 2

_C40: - 2 A78 - B78 + X2 + Y8 = -2

_C41: X4 + Y9 <= 2

_C42: - 2 A84 - B84 + X4 + Y9 = -2

_C43: - 2 A85 - B85 - Y9 = -2

VARIABLES
0 <= A76 Integer
0 <= A77 Integer
0 <= A78 Integer
0 <= A79 Integer
0 <= A80 Integer
0 <= A81 Integer
0 <= A82 Integer
0 <= A83 Integer
0 <= A84 Integer
0 <= A85 Integer
0 <= B76 <= 1 Integer
0 <= B77 <= 1 Integer
0 <= B78 <= 1 Integer
0 <= B79 <= 1 Integer
0 <= B80 <= 1 Integer
0 <= B81 <= 1 Integer
0 <= B82 <= 1 Integer
0 <= B83 <= 1 Integer
0 <= B84 <= 1 Integer
0 <= B85 <= 1 Integer
0 <= T1 <= 1 Integer
0 <= T10 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X7 Integer
Y0 free Integer
Y3 free Integer
Y6 free Integer
Y8 free Integer
Y9 free Integer
Z0 free Integer
Z3 free Integer
Z6 free Integer
Z8 free Integer
Z9 free Integer

Optimal
[A76, A77, A78, A79, A80, A81, A82, A83, A84, A85, B76, B77, B78, B79, B80, B81, B82, B83, B84, B85, T1, T10, X1, X10, X2, X4, X5, X7, Y0, Y3, Y6, Y8, Y9, Z0, Z3, Z6, Z8, Z9]
77 83 0.0 SV
80 80 1.0 SV
77 78 2.0 R
83 84 2.0 R
81 82 2.0 R
79 80 1.0 R
A76 = 1.0
A77 = 2.0
A78 = 2.0
A79 = 1.0
A80 = 3.0
A81 = 2.0
A82 = 2.0
A83 = 2.0
A84 = 2.0
A85 = 1.0
B76 = 0.0
B77 = 0.0
B78 = 0.0
B79 = 1.0
B80 = 0.0
B81 = 1.0
B82 = 0.0
B83 = 0.0
B84 = 0.0
B85 = 0.0
T1 = 0.0
T10 = 1.0
X1 = 0.0
X10 = 1.0
X2 = 2.0
X4 = 2.0
X5 = 2.0
X7 = 1.0
Y0 = 0.0
Y3 = 0.0
Y6 = 0.0
Y8 = 0.0
Y9 = 0.0
Z0 = 0.0
Z3 = 0.0
Z6 = 0.0
Z8 = 0.0
Z9 = 0.0
52.0 Objective Answer
Siavash [(96, 97, 2, 'S')]
Y0 (96, 97, 2, 'S')
A96 A96
B96 B96
A97 A97
B97 B97
obj -2*Y0 + 4
Sv_sum 0
CN_tune 132*Z0
obj B96 + B97 - 20*Y0 + 1320*Z0 + 40
Problem:
MINIMIZE
1*B96 + 1*B97 + -20*Y0 + 1320*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A96 - B96 - Y0 = -2

_C5: - 2 A97 - B97 - Y0 = -2

VARIABLES
0 <= A96 Integer
0 <= A97 Integer
0 <= B96 <= 1 Integer
0 <= B97 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A96, A97, B96, B97, Y0, Z0]
A96 = 1.0
A97 = 1.0
B96 = 0.0
B97 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(98, 99, 2, 'S')]
Y0 (98, 99, 2, 'S')
A98 A98
B98 B98
A99 A99
B99 B99
obj -2*Y0 + 4
Sv_sum 0
CN_tune 126*Z0
obj B98 + B99 - 20*Y0 + 1260*Z0 + 40
Problem:
MINIMIZE
1*B98 + 1*B99 + -20*Y0 + 1260*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A98 - B98 - Y0 = -2

_C5: - 2 A99 - B99 - Y0 = -2

VARIABLES
0 <= A98 Integer
0 <= A99 Integer
0 <= B98 <= 1 Integer
0 <= B99 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A98, A99, B98, B99, Y0, Z0]
A98 = 1.0
A99 = 1.0
B98 = 0.0
B99 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(114, 115, 2, 'S')]
Y0 (114, 115, 2, 'S')
A114 A114
B114 B114
A115 A115
B115 B115
obj -2*Y0 + 4
Sv_sum 0
CN_tune 102*Z0
obj B114 + B115 - 20*Y0 + 1020*Z0 + 40
Problem:
MINIMIZE
1*B114 + 1*B115 + -20*Y0 + 1020*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A114 - B114 - Y0 = -2

_C5: - 2 A115 - B115 - Y0 = -2

VARIABLES
0 <= A114 Integer
0 <= A115 Integer
0 <= B114 <= 1 Integer
0 <= B115 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A114, A115, B114, B115, Y0, Z0]
A114 = 1.0
A115 = 1.0
B114 = 0.0
B115 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(116, 117, 2, 'S')]
Y0 (116, 117, 2, 'S')
A116 A116
B116 B116
A117 A117
B117 B117
obj -2*Y0 + 4
Sv_sum 0
CN_tune 102*Z0
obj B116 + B117 - 20*Y0 + 1020*Z0 + 40
Problem:
MINIMIZE
1*B116 + 1*B117 + -20*Y0 + 1020*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A116 - B116 - Y0 = -2

_C5: - 2 A117 - B117 - Y0 = -2

VARIABLES
0 <= A116 Integer
0 <= A117 Integer
0 <= B116 <= 1 Integer
0 <= B117 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A116, A117, B116, B117, Y0, Z0]
A116 = 1.0
A117 = 1.0
B116 = 0.0
B117 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(118, 119, 2, 'S')]
Y0 (118, 119, 2, 'S')
A118 A118
B118 B118
A119 A119
B119 B119
obj -2*Y0 + 4
Sv_sum 0
CN_tune 72*Z0
obj B118 + B119 - 20*Y0 + 720*Z0 + 40
Problem:
MINIMIZE
1*B118 + 1*B119 + -20*Y0 + 720*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A118 - B118 - Y0 = -2

_C5: - 2 A119 - B119 - Y0 = -2

VARIABLES
0 <= A118 Integer
0 <= A119 Integer
0 <= B118 <= 1 Integer
0 <= B119 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A118, A119, B118, B119, Y0, Z0]
A118 = 1.0
A119 = 1.0
B118 = 0.0
B119 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(120, 121, 2, 'S')]
Y0 (120, 121, 2, 'S')
A120 A120
B120 B120
A121 A121
B121 B121
obj -2*Y0 + 4
Sv_sum 0
CN_tune 78*Z0
obj B120 + B121 - 20*Y0 + 780*Z0 + 40
Problem:
MINIMIZE
1*B120 + 1*B121 + -20*Y0 + 780*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A120 - B120 - Y0 = -2

_C5: - 2 A121 - B121 - Y0 = -2

VARIABLES
0 <= A120 Integer
0 <= A121 Integer
0 <= B120 <= 1 Integer
0 <= B121 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A120, A121, B120, B121, Y0, Z0]
A120 = 1.0
A121 = 1.0
B120 = 0.0
B121 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(123, 122, 2, 'S'), (123, 124, 0, 'R'), (125, 124, 2, 'S'), (124, 126, 0, 'SV'), (125, 126, 0, 'R'), (126, 127, 2, 'S')]
Y0 (123, 122, 2, 'S')
X1 (123, 124, 0, 'R')
Y2 (125, 124, 2, 'S')
X3 (124, 126, 0, 'SV')
X4 (125, 126, 0, 'R')
Y5 (126, 127, 2, 'S')
A122 A122
B122 B122
A123 A123
B123 B123
A124 A124
B124 B124
A125 A125
B125 B125
A126 A126
B126 B126
A127 A127
B127 B127
obj -2*X1 - 2*X3 - 2*X4 - 2*Y0 - 2*Y2 - 2*Y5 + 12
Sv_sum T3
CN_tune 8*Z0 + 2*Z2 + 32*Z5
obj B122 + B123 + B124 + B125 + B126 + B127 - 10*T3 - 20*X1 - 20*X3 - 20*X4 - 20*Y0 - 20*Y2 - 20*Y5 + 80*Z0 + 20*Z2 + 320*Z5 + 120
Problem:
MINIMIZE
1*B122 + 1*B123 + 1*B124 + 1*B125 + 1*B126 + 1*B127 + -10*T3 + -20*X1 + -20*X3 + -20*X4 + -20*Y0 + -20*Y2 + -20*Y5 + 80*Z0 + 20*Z2 + 320*Z5 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A122 - B122 - Y0 = -2

_C16: X1 + Y0 <= 2

_C17: - 2 A123 - B123 + X1 + Y0 = -2

_C18: X1 + X3 + Y2 <= 2

_C19: - 2 A124 - B124 + X1 + X3 + Y2 = -2

_C20: X4 + Y2 <= 2

_C21: - 2 A125 - B125 + X4 + Y2 = -2

_C22: X3 + X4 + Y5 <= 2

_C23: - 2 A126 - B126 + X3 + X4 + Y5 = -2

_C24: - 2 A127 - B127 - Y5 = -2

VARIABLES
0 <= A122 Integer
0 <= A123 Integer
0 <= A124 Integer
0 <= A125 Integer
0 <= A126 Integer
0 <= A127 Integer
0 <= B122 <= 1 Integer
0 <= B123 <= 1 Integer
0 <= B124 <= 1 Integer
0 <= B125 <= 1 Integer
0 <= B126 <= 1 Integer
0 <= B127 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer

Optimal
[A122, A123, A124, A125, A126, A127, B122, B123, B124, B125, B126, B127, T3, X1, X3, X4, Y0, Y2, Y5, Z0, Z2, Z5]
123 124 2.0 R
124 126 0.0 SV
125 126 2.0 R
A122 = 1.0
A123 = 2.0
A124 = 2.0
A125 = 2.0
A126 = 2.0
A127 = 1.0
B122 = 0.0
B123 = 0.0
B124 = 0.0
B125 = 0.0
B126 = 0.0
B127 = 0.0
T3 = 0.0
X1 = 2.0
X3 = 0.0
X4 = 2.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
40.0 Objective Answer
Siavash [(128, 129, 2, 'S')]
Y0 (128, 129, 2, 'S')
A128 A128
B128 B128
A129 A129
B129 B129
obj -2*Y0 + 4
Sv_sum 0
CN_tune 66*Z0
obj B128 + B129 - 20*Y0 + 660*Z0 + 40
Problem:
MINIMIZE
1*B128 + 1*B129 + -20*Y0 + 660*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A128 - B128 - Y0 = -2

_C5: - 2 A129 - B129 - Y0 = -2

VARIABLES
0 <= A128 Integer
0 <= A129 Integer
0 <= B128 <= 1 Integer
0 <= B129 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A128, A129, B128, B129, Y0, Z0]
A128 = 1.0
A129 = 1.0
B128 = 0.0
B129 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(130, 131, 2, 'S')]
Y0 (130, 131, 2, 'S')
A130 A130
B130 B130
A131 A131
B131 B131
obj -2*Y0 + 4
Sv_sum 0
CN_tune 192*Z0
obj B130 + B131 - 20*Y0 + 1920*Z0 + 40
Problem:
MINIMIZE
1*B130 + 1*B131 + -20*Y0 + 1920*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A130 - B130 - Y0 = -2

_C5: - 2 A131 - B131 - Y0 = -2

VARIABLES
0 <= A130 Integer
0 <= A131 Integer
0 <= B130 <= 1 Integer
0 <= B131 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A130, A131, B130, B131, Y0, Z0]
A130 = 1.0
A131 = 1.0
B130 = 0.0
B131 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(132, 133, 0, 'S')]
Y0 (132, 133, 0, 'S')
A132 A132
B132 B132
A133 A133
B133 B133
obj -2*Y0
Sv_sum 0
CN_tune 72*Z0
obj B132 + B133 - 20*Y0 + 720*Z0
Problem:
MINIMIZE
1*B132 + 1*B133 + -20*Y0 + 720*Z0 + 0
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 0

_C4: - 2 A132 - B132 - Y0 = 0

_C5: - 2 A133 - B133 - Y0 = 0

VARIABLES
0 <= A132 Integer
0 <= A133 Integer
0 <= B132 <= 1 Integer
0 <= B133 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A132, A133, B132, B133, Y0, Z0]
A132 = 0.0
A133 = 0.0
B132 = 0.0
B133 = 0.0
Y0 = 0.0
Z0 = 0.0
0.0 Objective Answer
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 53, 52, 51, 50, 54, 55, 56, 57, 58, 59, 21, 20, 19, 18, 89, 88, 15, 16, 17, 90, 91, 92, 93, 94, 95, 87, 86, 14, 22, 23, 13]
[(1, 0, 2, 'S'), (1, 2, 1, 'R'), (1, 3, 1, 'SV'), (3, 2, 2, 'S'), (2, 4, 1, 'SV'), (3, 4, 1, 'R'), (4, 5, 2, 'S'), (5, 6, 2, 'R'), (6, 7, 1, 'SV'), (6, 7, 3, 'S'), (7, 8, 2, 'R'), (9, 8, 2, 'S'), (9, 10, 1, 'R'), (9, 52, 1, 'SV'), (11, 10, 2, 'S'), (10, 51, 1, 'SV'), (11, 12, 1, 'R'), (11, 54, 1, 'SV'), (12, 53, 1, 'SV'), (12, 13, 2, 'S'), (53, 52, 2, 'S'), (53, 54, 1, 'R'), (51, 52, 1, 'R'), (51, 50, 2, 'S'), (55, 54, 2, 'S'), (55, 56, 1, 'R'), (20, 55, 1, 'SV'), (57, 56, 2, 'S'), (19, 56, 1, 'SV'), (57, 58, 1, 'R'), (22, 57, 1, 'SV'), (58, 59, 2, 'S'), (21, 58, 1, 'SV'), (21, 20, 2, 'S'), (21, 22, 1, 'R'), (19, 20, 1, 'R'), (19, 18, 2, 'S'), (18, 89, 1, 'SV'), (17, 18, 1, 'R'), (89, 88, 2, 'S'), (89, 90, 1, 'R'), (15, 88, 1, 'SV'), (87, 88, 1, 'R'), (15, 16, 1, 'R'), (15, 14, 2, 'S'), (17, 16, 2, 'S'), (16, 87, 1, 'SV'), (17, 90, 1, 'SV'), (90, 91, 2, 'S'), (91, 92, 2, 'R'), (92, 93, 1, 'SV'), (92, 93, 3, 'S'), (93, 94, 2, 'R'), (94, 95, 2, 'S'), (87, 86, 2, 'S'), (22, 23, 2, 'S')]
Component [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 53, 52, 51, 50, 54, 55, 56, 57, 58, 59, 21, 20, 19, 18, 89, 88, 15, 16, 17, 90, 91, 92, 93, 94, 95, 87, 86, 14, 22, 23, 13]
Component edges [(1, 0, 2, 'S'), (1, 2, 1, 'R'), (1, 3, 1, 'SV'), (3, 2, 2, 'S'), (2, 4, 1, 'SV'), (3, 4, 1, 'R'), (4, 5, 2, 'S'), (5, 6, 2, 'R'), (6, 7, 1, 'SV'), (6, 7, 3, 'S'), (7, 8, 2, 'R'), (9, 8, 2, 'S'), (9, 10, 1, 'R'), (9, 52, 1, 'SV'), (11, 10, 2, 'S'), (10, 51, 1, 'SV'), (11, 12, 1, 'R'), (11, 54, 1, 'SV'), (12, 53, 1, 'SV'), (12, 13, 2, 'S'), (53, 52, 2, 'S'), (53, 54, 1, 'R'), (51, 52, 1, 'R'), (51, 50, 2, 'S'), (55, 54, 2, 'S'), (55, 56, 1, 'R'), (20, 55, 1, 'SV'), (57, 56, 2, 'S'), (19, 56, 1, 'SV'), (57, 58, 1, 'R'), (22, 57, 1, 'SV'), (58, 59, 2, 'S'), (21, 58, 1, 'SV'), (21, 20, 2, 'S'), (21, 22, 1, 'R'), (19, 20, 1, 'R'), (19, 18, 2, 'S'), (18, 89, 1, 'SV'), (17, 18, 1, 'R'), (89, 88, 2, 'S'), (89, 90, 1, 'R'), (15, 88, 1, 'SV'), (87, 88, 1, 'R'), (15, 16, 1, 'R'), (15, 14, 2, 'S'), (17, 16, 2, 'S'), (16, 87, 1, 'SV'), (17, 90, 1, 'SV'), (90, 91, 2, 'S'), (91, 92, 2, 'R'), (92, 93, 1, 'SV'), (92, 93, 3, 'S'), (93, 94, 2, 'R'), (94, 95, 2, 'S'), (87, 86, 2, 'S'), (22, 23, 2, 'S')]
ODD vertices []
TOUR
[0, 13, 14, 23, 50, 59, 86, 95]
paths_score 20 [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [13, 12, 53, 52, 51, 50], [50, 51, 10, 11, 54, 55, 56, 57, 58, 59], [59, 58, 21, 20, 19, 18, 17, 16, 15, 14], [14, 15, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90, 17, 16, 87, 86], [86, 87, 88, 89, 18, 19, 56, 57, 22, 23], [23, 22, 21, 20, 55, 54, 53, 52, 9, 8, 7, 6, 7, 6, 5, 4, 2, 3, 1, 0]]
paths_score 20 [[13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 3, 2, 4, 5, 6, 7, 6, 7, 8, 9, 52, 53, 54, 55, 56, 57, 58, 59], [59, 58, 21, 20, 19, 18, 17, 16, 15, 14], [14, 15, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90, 17, 16, 87, 86], [86, 87, 88, 89, 18, 19, 56, 57, 22, 23], [23, 22, 21, 20, 55, 54, 11, 10, 51, 50], [50, 51, 52, 53, 12, 13]]
paths_score 20 [[14, 15, 16, 17, 18, 19, 20, 21, 22, 23], [23, 22, 57, 56, 55, 54, 53, 52, 51, 50], [50, 51, 10, 11, 12, 13], [13, 12, 53, 52, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 3, 2, 4, 5, 6, 7, 6, 7, 8, 9, 10, 11, 54, 55, 20, 21, 58, 59], [59, 58, 57, 56, 19, 18, 89, 88, 87, 86], [86, 87, 16, 17, 90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90, 89, 88, 15, 14]]
paths_score 20 [[23, 22, 21, 20, 19, 18, 17, 16, 15, 14], [14, 15, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90, 17, 16, 87, 86], [86, 87, 88, 89, 18, 19, 56, 57, 58, 59], [59, 58, 21, 20, 55, 54, 53, 52, 51, 50], [50, 51, 10, 11, 12, 13], [13, 12, 53, 52, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 3, 2, 4, 5, 6, 7, 6, 7, 8, 9, 10, 11, 54, 55, 56, 57, 22, 23]]
paths_score 20 [[50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [59, 58, 21, 20, 19, 18, 17, 16, 15, 14], [14, 15, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90, 17, 16, 87, 86], [86, 87, 88, 89, 18, 19, 56, 57, 22, 23], [23, 22, 21, 20, 55, 54, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 3, 2, 4, 5, 6, 7, 6, 7, 8, 9, 52, 53, 12, 13], [13, 12, 11, 10, 51, 50]]
paths_score 20 [[59, 58, 57, 56, 55, 54, 53, 52, 51, 50], [50, 51, 10, 11, 12, 13], [13, 12, 53, 52, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 3, 2, 4, 5, 6, 7, 6, 7, 8, 9, 10, 11, 54, 55, 20, 21, 22, 23], [23, 22, 57, 56, 19, 18, 17, 16, 15, 14], [14, 15, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90, 17, 16, 87, 86], [86, 87, 88, 89, 18, 19, 20, 21, 58, 59]]
paths_score 20 [[86, 87, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90, 17, 16, 15, 14], [14, 15, 88, 89, 18, 19, 20, 21, 22, 23], [23, 22, 57, 56, 55, 54, 53, 52, 51, 50], [50, 51, 10, 11, 12, 13], [13, 12, 53, 52, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 3, 2, 4, 5, 6, 7, 6, 7, 8, 9, 10, 11, 54, 55, 20, 21, 58, 59], [59, 58, 57, 56, 19, 18, 17, 16, 87, 86]]
paths_score 20 [[95, 94, 93, 92, 91, 90, 89, 88, 87, 86], [86, 87, 16, 17, 18, 19, 20, 21, 22, 23], [23, 22, 57, 56, 55, 54, 53, 52, 51, 50], [50, 51, 10, 11, 12, 13], [13, 12, 53, 52, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], [0, 1, 3, 2, 4, 5, 6, 7, 6, 7, 8, 9, 10, 11, 54, 55, 20, 21, 58, 59], [59, 58, 57, 56, 19, 18, 89, 88, 15, 14], [14, 15, 16, 17, 90, 91, 92, 93, 92, 93, 94, 95]]
all edges with dummy:  [(1, 0, 2, 'S'), (1, 2, 1, 'R'), (1, 3, 1, 'SV'), (3, 2, 2, 'S'), (2, 4, 1, 'SV'), (3, 4, 1, 'R'), (4, 5, 2, 'S'), (5, 6, 2, 'R'), (6, 7, 1, 'SV'), (6, 7, 3, 'S'), (7, 8, 2, 'R'), (9, 8, 2, 'S'), (9, 10, 1, 'R'), (9, 52, 1, 'SV'), (11, 10, 2, 'S'), (10, 51, 1, 'SV'), (11, 12, 1, 'R'), (11, 54, 1, 'SV'), (12, 53, 1, 'SV'), (12, 13, 2, 'S'), (53, 52, 2, 'S'), (53, 54, 1, 'R'), (51, 52, 1, 'R'), (51, 50, 2, 'S'), (55, 54, 2, 'S'), (55, 56, 1, 'R'), (20, 55, 1, 'SV'), (57, 56, 2, 'S'), (19, 56, 1, 'SV'), (57, 58, 1, 'R'), (22, 57, 1, 'SV'), (58, 59, 2, 'S'), (21, 58, 1, 'SV'), (21, 20, 2, 'S'), (21, 22, 1, 'R'), (19, 20, 1, 'R'), (19, 18, 2, 'S'), (18, 89, 1, 'SV'), (17, 18, 1, 'R'), (89, 88, 2, 'S'), (89, 90, 1, 'R'), (15, 88, 1, 'SV'), (87, 88, 1, 'R'), (15, 16, 1, 'R'), (15, 14, 2, 'S'), (17, 16, 2, 'S'), (16, 87, 1, 'SV'), (17, 90, 1, 'SV'), (90, 91, 2, 'S'), (91, 92, 2, 'R'), (92, 93, 1, 'SV'), (92, 93, 3, 'S'), (93, 94, 2, 'R'), (94, 95, 2, 'S'), (87, 86, 2, 'S'), (22, 23, 2, 'S')]
0 1 14454.0 2 H [1]
1 1 25607029.0 2 T [0, 2, 3]
2 1 25607030.0 2 H [1, 3, 4]
3 1 26958526.5 2 T [1, 2, 4]
4 1 26958527.5 2 H [2, 3, 5]
5 1 147057351.0 2 T [4, 6]
6 1 147057352.0 3 H [5, 7]
7 1 148342632.0 3 T [8, 6]
8 1 148342633.0 2 H [9, 7]
9 1 244455663.25 2 T [8, 10, 52]
10 1 244455664.25 2 H [9, 11, 51]
11 1 245926077.0 2 T [10, 12, 54]
12 1 245926078.0 2 H [53, 11, 13]
53 7 138461936.5 2 T [52, 12, 54]
52 7 136596515.5 2 H [9, 51, 53]
51 7 136596514.5 2 T [50, 10, 52]
50 7 0.0 2 H [51]
54 7 138461937.5 2 H [11, 53, 55]
55 7 145654221.0 2 T [56, 20, 54]
56 7 145654222.0 2 H [57, 19, 55]
57 7 147556997.75 2 T [56, 58, 22]
58 7 147556998.75 2 H [57, 59, 21]
59 7 159334984.0 2 T [58]
21 2 104208311.33333333 2 T [58, 20, 22]
20 2 103331377.5 2 H [19, 21, 55]
19 2 103331376.5 2 T [56, 18, 20]
18 2 57867858.5 2 H [89, 17, 19]
89 13 22278213.0 2 T [88, 90, 18]
88 13 21066540.0 2 H [89, 15, 87]
15 2 56053297.0 2 T [16, 88, 14]
16 2 56053298.0 2 H [17, 87, 15]
17 2 57867857.5 2 T [16, 18, 90]
90 13 22278214.0 2 H [89, 91, 17]
91 13 96229424.0 2 T [90, 92]
92 13 96229425.0 3 H [91, 93]
93 13 98043021.0 3 T [92, 94]
94 13 98043022 2 H [93, 95]
95 13 114352101 2 T [94]
87 13 21066539.0 2 T [88, 16, 86]
86 13 16004726.0 2 H [87]
14 2 0.0 2 H [15]
22 2 104208312.33333333 2 H [57, 21, 23]
23 2 242181357.0 2 T [22]
13 1 248943332.0 2 T [12]
Answer [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 12, 53, 52, 51, 50, 51, 10, 11, 54, 55, 56, 57, 58, 59, 58, 21, 20, 19, 18, 17, 16, 15, 14, 15, 88, 89, 90, 91, 92, 93, 94, 95, 94, 93, 92, 93, 92, 91, 90, 17, 16, 87, 86, 87, 88, 89, 18, 19, 56, 57, 22, 23, 22, 21, 20, 55, 54, 53, 52, 9, 8, 7, 6, 7, 6, 5, 4, 2, 3, 1, 0]
[24, 25, 26, 27, 28, 29]
[(24, 25, 2, 'S'), (25, 26, 1, 'R'), (25, 28, 1, 'SV'), (26, 27, 1, 'S'), (27, 28, 1, 'R'), (28, 29, 2, 'S'), (24, 24, 1, 'SV')]
Component [24, 25, 26, 27, 28, 29]
Component edges [(24, 25, 2, 'S'), (25, 26, 1, 'R'), (25, 28, 1, 'SV'), (26, 27, 1, 'S'), (27, 28, 1, 'R'), (28, 29, 2, 'S'), (24, 24, 1, 'SV')]
ODD vertices []
TOUR
[24, 29]
paths_score 0 [[24, 25, 26, 27, 28, 29], [29, 28, 25, 24, 24]]
paths_score 10 [[29, 28, 27, 26, 25, 24, 24, 25, 28, 29]]
all edges with dummy:  [(24, 25, 2, 'S'), (25, 26, 1, 'R'), (25, 28, 1, 'SV'), (26, 27, 1, 'S'), (27, 28, 1, 'R'), (28, 29, 2, 'S'), (24, 24, 1, 'SV')]
24 3 12920 2 H [24, 25]
25 3 65902850.0 2 T [24, 26, 28]
26 3 65902851.0 1 H [25, 27]
27 3 67190426.0 1 T [26, 28]
28 3 67190427 2 H [25, 27, 29]
29 3 198230595 2 T [28]
Answer [24, 25, 26, 27, 28, 29, 28, 25, 24, 24]
[30, 32, 33, 34, 35, 36, 37, 31]
[(30, 32, 1, 'SV'), (31, 30, 1, 'S'), (32, 33, 2, 'S'), (31, 32, 1, 'R'), (33, 34, 2, 'R'), (34, 35, 3, 'S'), (35, 36, 1, 'R'), (36, 37, 2, 'S'), (35, 35, 1, 'SV')]
Component [30, 32, 33, 34, 35, 36, 37, 31]
Component edges [(30, 32, 1, 'SV'), (31, 30, 1, 'S'), (32, 33, 2, 'S'), (31, 32, 1, 'R'), (33, 34, 2, 'R'), (34, 35, 3, 'S'), (35, 36, 1, 'R'), (36, 37, 2, 'S'), (35, 35, 1, 'SV')]
ODD vertices [34, 36]
TOUR
[30, 37]
paths_score 0 [[30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 34, 35, 35, 34, 33, 32, 30]]
paths_score 10 [[37, 36, 35, 34, 33, 32, 31, 30, 32, 33, 34, 35, 35, 34, 36, 37]]
all edges with dummy:  [(30, 32, 1, 'SV'), (31, 30, 1, 'S'), (32, 33, 2, 'S'), (31, 32, 1, 'R'), (33, 34, 2, 'R'), (34, 35, 3, 'S'), (35, 36, 1, 'R'), (36, 37, 2, 'S'), (35, 35, 1, 'SV'), (34, 36, 1, 'D')]
30 4 12986.0 2 H [32, 31]
32 4 1818081.0 2 H [33, 30, 31]
33 4 108121113.0 2 T [32, 34]
34 4 108121114.0 3 H [33, 35, 36]
35 4 109394609.0 3 T [34, 35, 36]
36 4 109394610 2 H [34, 35, 37]
37 4 190202563 2 T [36]
31 4 1818080.0 2 T [32, 30]
Answer [30, 31, 32, 33, 34, 35, 36, 37, 36, 34, 35, 35, 34, 33, 32, 30]
[38, 39, 40, 41, 42, 43, 111, 112, 113, 110, 109, 108, 106, 105, 104, 103, 102, 101, 100, 107]
[(39, 38, 2, 'S'), (39, 40, 1, 'R'), (39, 110, 1, 'SV'), (41, 40, 2, 'S'), (40, 109, 1, 'SV'), (41, 42, 1, 'R'), (41, 112, 1, 'SV'), (42, 43, 2, 'S'), (42, 111, 1, 'SV'), (111, 112, 1, 'R'), (111, 110, 2, 'S'), (112, 113, 2, 'S'), (109, 110, 1, 'R'), (109, 108, 2, 'S'), (106, 108, 1, 'SV'), (107, 108, 1, 'R'), (105, 106, 1, 'R'), (107, 106, 2, 'S'), (105, 104, 2, 'S'), (105, 107, 1, 'SV'), (103, 104, 2, 'R'), (102, 103, 2, 'S'), (101, 102, 2, 'R'), (100, 101, 2, 'S')]
Component [38, 39, 40, 41, 42, 43, 111, 112, 113, 110, 109, 108, 106, 105, 104, 103, 102, 101, 100, 107]
Component edges [(39, 38, 2, 'S'), (39, 40, 1, 'R'), (39, 110, 1, 'SV'), (41, 40, 2, 'S'), (40, 109, 1, 'SV'), (41, 42, 1, 'R'), (41, 112, 1, 'SV'), (42, 43, 2, 'S'), (42, 111, 1, 'SV'), (111, 112, 1, 'R'), (111, 110, 2, 'S'), (112, 113, 2, 'S'), (109, 110, 1, 'R'), (109, 108, 2, 'S'), (106, 108, 1, 'SV'), (107, 108, 1, 'R'), (105, 106, 1, 'R'), (107, 106, 2, 'S'), (105, 104, 2, 'S'), (105, 107, 1, 'SV'), (103, 104, 2, 'R'), (102, 103, 2, 'S'), (101, 102, 2, 'R'), (100, 101, 2, 'S')]
ODD vertices []
TOUR
[38, 43, 100, 113]
paths_score 0 [[38, 39, 40, 41, 42, 43], [43, 42, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100], [100, 101, 102, 103, 104, 105, 107, 106, 108, 109, 40, 41, 112, 113], [113, 112, 111, 110, 39, 38]]
paths_score 0 [[43, 42, 41, 40, 39, 38], [38, 39, 110, 111, 112, 113], [113, 112, 41, 40, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100], [100, 101, 102, 103, 104, 105, 107, 106, 108, 109, 110, 111, 42, 43]]
paths_score 0 [[100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], [113, 112, 41, 40, 39, 38], [38, 39, 110, 111, 42, 43], [43, 42, 41, 40, 109, 108, 106, 107, 105, 104, 103, 102, 101, 100]]
paths_score 0 [[113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100], [100, 101, 102, 103, 104, 105, 107, 106, 108, 109, 40, 41, 42, 43], [43, 42, 111, 110, 39, 38], [38, 39, 40, 41, 112, 113]]
all edges with dummy:  [(39, 38, 2, 'S'), (39, 40, 1, 'R'), (39, 110, 1, 'SV'), (41, 40, 2, 'S'), (40, 109, 1, 'SV'), (41, 42, 1, 'R'), (41, 112, 1, 'SV'), (42, 43, 2, 'S'), (42, 111, 1, 'SV'), (111, 112, 1, 'R'), (111, 110, 2, 'S'), (112, 113, 2, 'S'), (109, 110, 1, 'R'), (109, 108, 2, 'S'), (106, 108, 1, 'SV'), (107, 108, 1, 'R'), (105, 106, 1, 'R'), (107, 106, 2, 'S'), (105, 104, 2, 'S'), (105, 107, 1, 'SV'), (103, 104, 2, 'R'), (102, 103, 2, 'S'), (101, 102, 2, 'R'), (100, 101, 2, 'S')]
38 5 0.0 2 H [39]
39 5 146340193.0 2 T [40, 110, 38]
40 5 146340194.0 2 H [41, 109, 39]
41 5 147063361.0 2 T [40, 42, 112]
42 5 147063362.0 2 H [41, 43, 111]
43 5 181472714.0 2 T [42]
111 16 60753805.0 2 T [112, 42, 110]
112 16 60753806.0 2 H [113, 41, 111]
113 16 90224750.0 2 T [112]
110 16 60142778.5 2 H [39, 109, 111]
109 16 60142777.5 2 T [40, 108, 110]
108 16 24955593.5 2 H [106, 107, 109]
106 16 23588589.5 2 H [105, 107, 108]
105 16 23588588.5 2 T [104, 106, 107]
104 16 22636890.0 2 H [105, 103]
103 16 22636889.0 2 T [104, 102]
102 16 22291420.0 2 H [101, 103]
101 16 22291419.0 2 T [100, 102]
100 16 14135 2 H [101]
107 16 24955592.5 2 T [105, 106, 108]
Answer [38, 39, 40, 41, 42, 43, 42, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 101, 102, 103, 104, 105, 107, 106, 108, 109, 40, 41, 112, 113, 112, 111, 110, 39, 38]
[44, 45, 46, 48, 49, 47]
[(45, 44, 2, 'S'), (45, 46, 1, 'R'), (45, 47, 1, 'SV'), (46, 48, 1, 'SV'), (47, 46, 2, 'S'), (48, 49, 2, 'S'), (47, 48, 1, 'R')]
Component [44, 45, 46, 48, 49, 47]
Component edges [(45, 44, 2, 'S'), (45, 46, 1, 'R'), (45, 47, 1, 'SV'), (46, 48, 1, 'SV'), (47, 46, 2, 'S'), (48, 49, 2, 'S'), (47, 48, 1, 'R')]
ODD vertices []
TOUR
[44, 49]
paths_score 0 [[44, 45, 46, 47, 48, 49], [49, 48, 46, 47, 45, 44]]
paths_score 0 [[49, 48, 47, 46, 45, 44], [44, 45, 47, 46, 48, 49]]
all edges with dummy:  [(45, 44, 2, 'S'), (45, 46, 1, 'R'), (45, 47, 1, 'SV'), (46, 48, 1, 'SV'), (47, 46, 2, 'S'), (48, 49, 2, 'S'), (47, 48, 1, 'R')]
44 6 0.0 2 H [45]
45 6 86638520.5 2 T [44, 46, 47]
46 6 86638521.5 2 H [48, 45, 47]
48 6 87876916.0 2 H [49, 46, 47]
49 6 170739897.0 2 T [48]
47 6 87876915.0 2 T [48, 45, 46]
Answer [44, 45, 46, 47, 48, 49, 48, 46, 47, 45, 44]
[60, 61]
[(60, 61, 2, 'S')]
Component [60, 61]
Component edges [(60, 61, 2, 'S')]
ODD vertices []
TOUR
[60, 61]
paths_score 0 [[60, 61], [61, 60]]
paths_score 0 [[61, 60], [60, 61]]
all edges with dummy:  [(60, 61, 2, 'S')]
60 8 0 2 H [61]
61 8 145076125 2 T [60]
Answer [60, 61, 60]
[62, 63, 64, 65, 66, 67]
[(63, 62, 2, 'S'), (63, 64, 1, 'R'), (63, 65, 1, 'SV'), (65, 64, 2, 'S'), (64, 66, 1, 'SV'), (65, 66, 1, 'R'), (66, 67, 2, 'S')]
Component [62, 63, 64, 65, 66, 67]
Component edges [(63, 62, 2, 'S'), (63, 64, 1, 'R'), (63, 65, 1, 'SV'), (65, 64, 2, 'S'), (64, 66, 1, 'SV'), (65, 66, 1, 'R'), (66, 67, 2, 'S')]
ODD vertices []
TOUR
[62, 67]
paths_score 0 [[62, 63, 64, 65, 66, 67], [67, 66, 64, 65, 63, 62]]
paths_score 0 [[67, 66, 65, 64, 63, 62], [62, 63, 65, 64, 66, 67]]
all edges with dummy:  [(63, 62, 2, 'S'), (63, 64, 1, 'R'), (63, 65, 1, 'SV'), (65, 64, 2, 'S'), (64, 66, 1, 'SV'), (65, 66, 1, 'R'), (66, 67, 2, 'S')]
62 9 0.0 2 H [63]
63 9 2377160.0 2 T [64, 65, 62]
64 9 2377161.0 2 H [65, 66, 63]
65 9 4099323.0 2 T [64, 66, 63]
66 9 4099324.0 2 H [64, 65, 67]
67 9 138334464.0 2 T [66]
Answer [62, 63, 64, 65, 66, 67, 66, 64, 65, 63, 62]
[68, 69, 70, 71, 72, 73]
[(69, 68, 2, 'S'), (69, 70, 2, 'R'), (71, 70, 2, 'S'), (71, 72, 2, 'R'), (72, 73, 2, 'S')]
Component [68, 69, 70, 71, 72, 73]
Component edges [(69, 68, 2, 'S'), (69, 70, 2, 'R'), (71, 70, 2, 'S'), (71, 72, 2, 'R'), (72, 73, 2, 'S')]
ODD vertices []
TOUR
[68, 73]
paths_score 0 [[68, 69, 70, 71, 72, 73], [73, 72, 71, 70, 69, 68]]
paths_score 0 [[73, 72, 71, 70, 69, 68], [68, 69, 70, 71, 72, 73]]
all edges with dummy:  [(69, 68, 2, 'S'), (69, 70, 2, 'R'), (71, 70, 2, 'S'), (71, 72, 2, 'R'), (72, 73, 2, 'S')]
68 10 0.0 2 H [69]
69 10 46991592.0 2 T [68, 70]
70 10 46991593.0 2 H [69, 71]
71 10 48060267.0 2 T [72, 70]
72 10 48060268.0 2 H [73, 71]
73 10 133785266.0 2 T [72]
Answer [68, 69, 70, 71, 72, 73, 72, 71, 70, 69, 68]
[74, 75]
[(74, 75, 2, 'S')]
Component [74, 75]
Component edges [(74, 75, 2, 'S')]
ODD vertices []
TOUR
[74, 75]
paths_score 0 [[74, 75], [75, 74]]
paths_score 0 [[75, 74], [74, 75]]
all edges with dummy:  [(74, 75, 2, 'S')]
74 11 0 2 H [75]
75 11 135069565 2 T [74]
Answer [74, 75, 74]
[76, 77, 78, 79, 80, 81, 82, 83, 84, 85]
[(77, 76, 2, 'S'), (77, 78, 2, 'R'), (78, 79, 2, 'S'), (79, 80, 1, 'R'), (80, 81, 3, 'S'), (81, 82, 2, 'R'), (83, 82, 2, 'S'), (83, 84, 2, 'R'), (84, 85, 2, 'S'), (80, 80, 1, 'SV')]
Component [76, 77, 78, 79, 80, 81, 82, 83, 84, 85]
Component edges [(77, 76, 2, 'S'), (77, 78, 2, 'R'), (78, 79, 2, 'S'), (79, 80, 1, 'R'), (80, 81, 3, 'S'), (81, 82, 2, 'R'), (83, 82, 2, 'S'), (83, 84, 2, 'R'), (84, 85, 2, 'S'), (80, 80, 1, 'SV')]
ODD vertices [79, 81]
TOUR
[76, 85]
paths_score 0 [[76, 77, 78, 79, 80, 81, 82, 83, 84, 85], [85, 84, 83, 82, 81, 80, 80, 81, 79, 78, 77, 76]]
paths_score 0 [[85, 84, 83, 82, 81, 80, 79, 78, 77, 76], [76, 77, 78, 79, 81, 80, 80, 81, 82, 83, 84, 85]]
all edges with dummy:  [(77, 76, 2, 'S'), (77, 78, 2, 'R'), (78, 79, 2, 'S'), (79, 80, 1, 'R'), (80, 81, 3, 'S'), (81, 82, 2, 'R'), (83, 82, 2, 'S'), (83, 84, 2, 'R'), (84, 85, 2, 'S'), (80, 80, 1, 'SV'), (79, 81, 1, 'D')]
76 12 14569.0 2 H [77]
77 12 57551214.0 2 T [76, 78]
78 12 57551215.0 2 H [77, 79]
79 12 57624186.0 2 T [80, 81, 78]
80 12 57624187.0 3 H [80, 81, 79]
81 12 58512892.0 3 T [80, 82, 79]
82 12 58512893.0 2 H [81, 83]
83 12 58731326.0 2 T [82, 84]
84 12 58731327.0 2 H [83, 85]
85 12 133263959.0 2 T [84]
Answer [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 84, 83, 82, 81, 80, 80, 81, 79, 78, 77, 76]
[96, 97]
[(96, 97, 2, 'S')]
Component [96, 97]
Component edges [(96, 97, 2, 'S')]
ODD vertices []
TOUR
[96, 97]
paths_score 0 [[96, 97], [97, 96]]
paths_score 0 [[97, 96], [96, 97]]
all edges with dummy:  [(96, 97, 2, 'S')]
96 14 0 2 H [97]
97 14 106873282 2 T [96]
Answer [96, 97, 96]
[98, 99]
[(98, 99, 2, 'S')]
Component [98, 99]
Component edges [(98, 99, 2, 'S')]
ODD vertices []
TOUR
[98, 99]
paths_score 0 [[98, 99], [99, 98]]
paths_score 0 [[99, 98], [98, 99]]
all edges with dummy:  [(98, 99, 2, 'S')]
98 15 0 2 H [99]
99 15 101976509 2 T [98]
Answer [98, 99, 98]
[114, 115]
[(114, 115, 2, 'S')]
Component [114, 115]
Component edges [(114, 115, 2, 'S')]
ODD vertices []
TOUR
[114, 115]
paths_score 0 [[114, 115], [115, 114]]
paths_score 0 [[115, 114], [114, 115]]
all edges with dummy:  [(114, 115, 2, 'S')]
114 17 0 2 H [115]
115 17 83246392 2 T [114]
Answer [114, 115, 114]
[116, 117]
[(116, 117, 2, 'S')]
Component [116, 117]
Component edges [(116, 117, 2, 'S')]
ODD vertices []
TOUR
[116, 117]
paths_score 0 [[116, 117], [117, 116]]
paths_score 0 [[117, 116], [116, 117]]
all edges with dummy:  [(116, 117, 2, 'S')]
116 18 0 2 H [117]
117 18 80256374 2 T [116]
Answer [116, 117, 116]
[118, 119]
[(118, 119, 2, 'S')]
Component [118, 119]
Component edges [(118, 119, 2, 'S')]
ODD vertices []
TOUR
[118, 119]
paths_score 0 [[118, 119], [119, 118]]
paths_score 0 [[119, 118], [118, 119]]
all edges with dummy:  [(118, 119, 2, 'S')]
118 19 0 2 H [119]
119 19 58605715 2 T [118]
Answer [118, 119, 118]
[120, 121]
[(120, 121, 2, 'S')]
Component [120, 121]
Component edges [(120, 121, 2, 'S')]
ODD vertices []
TOUR
[120, 121]
paths_score 0 [[120, 121], [121, 120]]
paths_score 0 [[121, 120], [120, 121]]
all edges with dummy:  [(120, 121, 2, 'S')]
120 20 0 2 H [121]
121 20 64333718 2 T [120]
Answer [120, 121, 120]
[122, 123, 124, 125, 126, 127]
[(123, 122, 2, 'S'), (123, 124, 2, 'R'), (125, 124, 2, 'S'), (125, 126, 2, 'R'), (126, 127, 2, 'S')]
Component [122, 123, 124, 125, 126, 127]
Component edges [(123, 122, 2, 'S'), (123, 124, 2, 'R'), (125, 124, 2, 'S'), (125, 126, 2, 'R'), (126, 127, 2, 'S')]
ODD vertices []
TOUR
[122, 127]
paths_score 0 [[122, 123, 124, 125, 126, 127], [127, 126, 125, 124, 123, 122]]
paths_score 0 [[127, 126, 125, 124, 123, 122], [122, 123, 124, 125, 126, 127]]
all edges with dummy:  [(123, 122, 2, 'S'), (123, 124, 2, 'R'), (125, 124, 2, 'S'), (125, 126, 2, 'R'), (126, 127, 2, 'S')]
122 21 0.0 2 H [123]
123 21 6316651.0 2 T [122, 124]
124 21 6316652.0 2 H [123, 125]
125 21 7381318.0 2 T [124, 126]
126 21 7381319.0 2 H [125, 127]
127 21 46697230.0 2 T [126]
Answer [122, 123, 124, 125, 126, 127, 126, 125, 124, 123, 122]
[128, 129]
[(128, 129, 2, 'S')]
Component [128, 129]
Component edges [(128, 129, 2, 'S')]
ODD vertices []
TOUR
[128, 129]
paths_score 0 [[128, 129], [129, 128]]
paths_score 0 [[129, 128], [128, 129]]
all edges with dummy:  [(128, 129, 2, 'S')]
128 22 0 2 H [129]
129 22 50805587 2 T [128]
Answer [128, 129, 128]
[130, 131]
[(130, 131, 2, 'S')]
Component [130, 131]
Component edges [(130, 131, 2, 'S')]
ODD vertices []
TOUR
[130, 131]
paths_score 0 [[130, 131], [131, 130]]
paths_score 0 [[131, 130], [130, 131]]
all edges with dummy:  [(130, 131, 2, 'S')]
130 23 0 2 H [131]
131 23 156025612 2 T [130]
Answer [130, 131, 130]
{(1, 0, 'S'): 2, (1, 2, 'R'): 1, (1, 3, 'SV'): 1, (3, 2, 'S'): 2, (2, 4, 'SV'): 1, (3, 4, 'R'): 1, (4, 5, 'S'): 2, (5, 6, 'R'): 2, (6, 7, 'SV'): 1, (6, 7, 'S'): 3, (7, 8, 'R'): 2, (9, 8, 'S'): 2, (9, 10, 'R'): 1, (9, 52, 'SV'): 1, (11, 10, 'S'): 2, (10, 51, 'SV'): 1, (11, 12, 'R'): 1, (11, 54, 'SV'): 1, (12, 53, 'SV'): 1, (12, 13, 'S'): 2, (53, 52, 'S'): 2, (53, 54, 'R'): 1, (51, 52, 'R'): 1, (51, 50, 'S'): 2, (55, 54, 'S'): 2, (55, 56, 'R'): 1, (20, 55, 'SV'): 1, (57, 56, 'S'): 2, (19, 56, 'SV'): 1, (57, 58, 'R'): 1, (22, 57, 'SV'): 1, (58, 59, 'S'): 2, (21, 58, 'SV'): 1, (21, 20, 'S'): 2, (21, 22, 'R'): 1, (19, 20, 'R'): 1, (19, 18, 'S'): 2, (18, 89, 'SV'): 1, (17, 18, 'R'): 1, (89, 88, 'S'): 2, (89, 90, 'R'): 1, (15, 88, 'SV'): 1, (87, 88, 'R'): 1, (15, 16, 'R'): 1, (15, 14, 'S'): 2, (17, 16, 'S'): 2, (16, 87, 'SV'): 1, (17, 90, 'SV'): 1, (90, 91, 'S'): 2, (91, 92, 'R'): 2, (92, 93, 'SV'): 1, (92, 93, 'S'): 3, (93, 94, 'R'): 2, (94, 95, 'S'): 2, (87, 86, 'S'): 2, (22, 23, 'S'): 2}
split node indices:  [13, 18, 27, 36, 45, 56, 65]
debug paths separation:  [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [13, 12, 53, 52, 51, 50], [50, 51, 10, 11, 54, 55, 56, 57, 58, 59], [59, 58, 21, 20, 19, 18, 17, 16, 15, 14], [14, 15, 88, 89, 90, 91, 92, 93, 94, 95], [95, 94, 93, 92, 93, 92, 91, 90, 17, 16, 87, 86], [86, 87, 88, 89, 18, 19, 56, 57, 22, 23], [23, 22, 21, 20, 55, 54, 53, 52, 9, 8, 7, 6, 7, 6, 5, 4, 2, 3, 1, 0]]
{(24, 25, 'S'): 2, (25, 26, 'R'): 1, (25, 28, 'SV'): 1, (26, 27, 'S'): 1, (27, 28, 'R'): 1, (28, 29, 'S'): 2, (24, 24, 'SV'): 1}
split node indices:  [5]
debug paths separation:  [[24, 25, 26, 27, 28, 29], [29, 28, 25, 24, 24]]
{(30, 32, 'SV'): 1, (31, 30, 'S'): 1, (32, 33, 'S'): 2, (31, 32, 'R'): 1, (33, 34, 'R'): 2, (34, 35, 'S'): 3, (35, 36, 'R'): 1, (36, 37, 'S'): 2, (35, 35, 'SV'): 1, (34, 36, 'D'): 1}
split node indices:  [7]
debug paths separation:  [[30, 31, 32, 33, 34, 35, 36, 37], [37, 36, 34, 35, 35, 34, 33, 32, 30]]
{(39, 38, 'S'): 2, (39, 40, 'R'): 1, (39, 110, 'SV'): 1, (41, 40, 'S'): 2, (40, 109, 'SV'): 1, (41, 42, 'R'): 1, (41, 112, 'SV'): 1, (42, 43, 'S'): 2, (42, 111, 'SV'): 1, (111, 112, 'R'): 1, (111, 110, 'S'): 2, (112, 113, 'S'): 2, (109, 110, 'R'): 1, (109, 108, 'S'): 2, (106, 108, 'SV'): 1, (107, 108, 'R'): 1, (105, 106, 'R'): 1, (107, 106, 'S'): 2, (105, 104, 'S'): 2, (105, 107, 'SV'): 1, (103, 104, 'R'): 2, (102, 103, 'S'): 2, (101, 102, 'R'): 2, (100, 101, 'S'): 2}
split node indices:  [5, 18, 31]
debug paths separation:  [[38, 39, 40, 41, 42, 43], [43, 42, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100], [100, 101, 102, 103, 104, 105, 107, 106, 108, 109, 40, 41, 112, 113], [113, 112, 111, 110, 39, 38]]
{(45, 44, 'S'): 2, (45, 46, 'R'): 1, (45, 47, 'SV'): 1, (46, 48, 'SV'): 1, (47, 46, 'S'): 2, (48, 49, 'S'): 2, (47, 48, 'R'): 1}
split node indices:  [5]
debug paths separation:  [[44, 45, 46, 47, 48, 49], [49, 48, 46, 47, 45, 44]]
{(60, 61, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[60, 61], [61, 60]]
{(63, 62, 'S'): 2, (63, 64, 'R'): 1, (63, 65, 'SV'): 1, (65, 64, 'S'): 2, (64, 66, 'SV'): 1, (65, 66, 'R'): 1, (66, 67, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[62, 63, 64, 65, 66, 67], [67, 66, 64, 65, 63, 62]]
{(69, 68, 'S'): 2, (69, 70, 'R'): 2, (71, 70, 'S'): 2, (71, 72, 'R'): 2, (72, 73, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[68, 69, 70, 71, 72, 73], [73, 72, 71, 70, 69, 68]]
{(74, 75, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[74, 75], [75, 74]]
{(77, 76, 'S'): 2, (77, 78, 'R'): 2, (78, 79, 'S'): 2, (79, 80, 'R'): 1, (80, 81, 'S'): 3, (81, 82, 'R'): 2, (83, 82, 'S'): 2, (83, 84, 'R'): 2, (84, 85, 'S'): 2, (80, 80, 'SV'): 1, (79, 81, 'D'): 1}
split node indices:  [9]
debug paths separation:  [[76, 77, 78, 79, 80, 81, 82, 83, 84, 85], [85, 84, 83, 82, 81, 80, 80, 81, 79, 78, 77, 76]]
{(96, 97, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[96, 97], [97, 96]]
{(98, 99, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[98, 99], [99, 98]]
{(114, 115, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[114, 115], [115, 114]]
{(116, 117, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[116, 117], [117, 116]]
{(118, 119, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[118, 119], [119, 118]]
{(120, 121, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[120, 121], [121, 120]]
{(123, 122, 'S'): 2, (123, 124, 'R'): 2, (125, 124, 'S'): 2, (125, 126, 'R'): 2, (126, 127, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[122, 123, 124, 125, 126, 127], [127, 126, 125, 124, 123, 122]]
{(128, 129, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[128, 129], [129, 128]]
{(130, 131, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[130, 131], [131, 130]]
