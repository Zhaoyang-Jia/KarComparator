Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/100fb79dbd6042fca75b4bb049c34ac7-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/100fb79dbd6042fca75b4bb049c34ac7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e68553acba0c49778d0e82de5aa6f9e8-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/e68553acba0c49778d0e82de5aa6f9e8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 296 COLUMNS
At line 1678 RHS
At line 1970 BOUNDS
At line 2219 ENDATA
Problem MODEL has 291 rows, 248 columns and 697 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -1970 - 0.00 seconds
Cgl0003I 0 fixed, 80 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 210 rows, 246 columns (246 integer (119 of which binary)) and 620 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 6 integers unsatisfied sum - 3
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1940 iterations 17
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -1940 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -1940 iterations 0
Cbc0038I Pass   4: suminf.    1.00000 (3) obj. -1291 iterations 44
Cbc0038I Pass   5: suminf.    1.00000 (3) obj. -1291 iterations 1
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -1131 iterations 2
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -1131 iterations 0
Cbc0038I Pass   8: suminf.    1.00000 (3) obj. -1110 iterations 29
Cbc0038I Pass   9: suminf.    1.00000 (3) obj. -1110 iterations 3
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -950 iterations 2
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -950 iterations 0
Cbc0038I Pass  12: suminf.    1.66667 (5) obj. 66.3333 iterations 34
Cbc0038I Pass  13: suminf.    1.66667 (5) obj. 66.3333 iterations 1
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 933 iterations 6
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 933 iterations 0
Cbc0038I Pass  16: suminf.    1.33333 (4) obj. 872.667 iterations 34
Cbc0038I Pass  17: suminf.    1.33333 (4) obj. 872.667 iterations 0
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 1666 iterations 3
Cbc0038I Pass  19: suminf.    0.00000 (0) obj. 1666 iterations 0
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 1937 iterations 30
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. 1937 iterations 0
Cbc0038I Pass  22: suminf.    0.00000 (0) obj. 1937 iterations 0
Cbc0038I Pass  23: suminf.    1.00000 (2) obj. 1748 iterations 25
Cbc0038I Pass  24: suminf.    1.00000 (2) obj. 1748 iterations 2
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. 1788 iterations 3
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 1788 iterations 0
Cbc0038I Pass  27: suminf.    3.50000 (10) obj. 892 iterations 32
Cbc0038I Pass  28: suminf.    3.50000 (10) obj. 892 iterations 0
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. 1252 iterations 8
Cbc0038I Pass  30: suminf.    0.00000 (0) obj. 1252 iterations 0
Cbc0038I Rounding solution of -1940 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 1 continuous of which 25 were internal integer and 0 internal continuous
Cbc0038I Full problem 210 rows 246 columns, reduced to 39 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -1940 to -1960 (0.02 seconds)
Cbc0038I Round again with cutoff of -1961.9
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass  30: suminf.    0.73000 (2) obj. -1961.9 iterations 16
Cbc0038I Pass  31: suminf.    0.39666 (1) obj. -1961.9 iterations 1
Cbc0038I Pass  32: suminf.    0.56997 (2) obj. -1961.9 iterations 8
Cbc0038I Pass  33: suminf.    0.39666 (1) obj. -1961.9 iterations 1
Cbc0038I Pass  34: suminf.    0.56997 (2) obj. -1961.9 iterations 3
Cbc0038I Pass  35: suminf.    1.10009 (3) obj. -1961.9 iterations 10
Cbc0038I Pass  36: suminf.    1.01001 (3) obj. -1961.9 iterations 7
Cbc0038I Pass  37: suminf.    0.99666 (2) obj. -1961.9 iterations 1
Cbc0038I Pass  38: suminf.    1.01001 (3) obj. -1961.9 iterations 1
Cbc0038I Pass  39: suminf.    1.10009 (3) obj. -1961.9 iterations 7
Cbc0038I Pass  40: suminf.    1.01001 (3) obj. -1961.9 iterations 9
Cbc0038I Pass  41: suminf.    0.99666 (2) obj. -1961.9 iterations 2
Cbc0038I Pass  42: suminf.    1.01001 (3) obj. -1961.9 iterations 2
Cbc0038I Pass  43: suminf.    1.10009 (3) obj. -1961.9 iterations 1
Cbc0038I Pass  44: suminf.    1.10009 (3) obj. -1961.9 iterations 7
Cbc0038I Pass  45: suminf.    1.01001 (3) obj. -1961.9 iterations 11
Cbc0038I Pass  46: suminf.    0.99666 (2) obj. -1961.9 iterations 2
Cbc0038I Pass  47: suminf.    1.01001 (3) obj. -1961.9 iterations 2
Cbc0038I Pass  48: suminf.    1.10009 (3) obj. -1961.9 iterations 6
Cbc0038I Pass  49: suminf.    1.01001 (3) obj. -1961.9 iterations 9
Cbc0038I Pass  50: suminf.    0.99666 (2) obj. -1961.9 iterations 2
Cbc0038I Pass  51: suminf.    1.01001 (3) obj. -1961.9 iterations 2
Cbc0038I Pass  52: suminf.    1.10009 (3) obj. -1961.9 iterations 6
Cbc0038I Pass  53: suminf.    1.01001 (3) obj. -1961.9 iterations 11
Cbc0038I Pass  54: suminf.    0.99666 (2) obj. -1961.9 iterations 2
Cbc0038I Pass  55: suminf.    1.01001 (3) obj. -1961.9 iterations 2
Cbc0038I Pass  56: suminf.    1.10009 (3) obj. -1961.9 iterations 5
Cbc0038I Pass  57: suminf.    1.01001 (3) obj. -1961.9 iterations 9
Cbc0038I Pass  58: suminf.    0.99666 (2) obj. -1961.9 iterations 2
Cbc0038I Pass  59: suminf.    1.01001 (3) obj. -1961.9 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 5 continuous of which 53 were internal integer and 0 internal continuous
Cbc0038I Full problem 210 rows 246 columns, reduced to 4 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -1960 - took 0.04 seconds
Cbc0012I Integer solution of -1960 found by DiveCoefficient after 5 iterations and 0 nodes (0.05 seconds)
Cbc0031I 5 added rows had average density of 4.6
Cbc0013I At root node, 5 cuts changed objective from -1970 to -1960 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 6 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1960, took 5 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -1970 to -1960
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -1960.00000000
Enumerated nodes:               0
Total iterations:               5
Time (CPU seconds):             0.05
Time (Wallclock seconds):       0.05

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/2a01ddbbb38f46e18a8c6afb17d0147c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/2a01ddbbb38f46e18a8c6afb17d0147c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 26 COLUMNS
At line 128 RHS
At line 150 BOUNDS
At line 171 ENDATA
Problem MODEL has 21 rows, 20 columns and 47 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -80 - 0.00 seconds
Cgl0003I 0 fixed, 5 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 20 columns (20 integer (11 of which binary)) and 46 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -80 - took 0.00 seconds
Cbc0012I Integer solution of -78 found by DiveCoefficient after 2 iterations and 0 nodes (0.00 seconds)
Cbc0031I 2 added rows had average density of 7
Cbc0013I At root node, 2 cuts changed objective from -80 to -78 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -78, took 2 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -80 to -78
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -78.00000000
Enumerated nodes:               0
Total iterations:               2
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/461dc33fa25e4a52a81572805f728253-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/461dc33fa25e4a52a81572805f728253-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 73 COLUMNS
At line 396 RHS
At line 465 BOUNDS
At line 524 ENDATA
Problem MODEL has 68 rows, 58 columns and 162 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -335 - 0.00 seconds
Cgl0003I 0 fixed, 17 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 58 columns (58 integer (28 of which binary)) and 146 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 3 integers unsatisfied sum - 1.5
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -320 iterations 3
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -320 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -320 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. -327 iterations 7
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. -327 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -327 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -327 iterations 0
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 325 iterations 10
Cbc0038I Solution found of 325
Cbc0038I Cleaned solution of 325
Cbc0038I Rounding solution of -328 is better than previous of 325

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 1 continuous of which 12 were internal integer and 0 internal continuous
Cbc0038I Full problem 50 rows 58 columns, reduced to 1 rows 2 columns
Cbc0038I Mini branch and bound improved solution from -328 to -330 (0.01 seconds)
Cbc0038I Round again with cutoff of -331.4
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   9: suminf.    0.68399 (2) obj. -331.4 iterations 1
Cbc0038I Pass  10: suminf.    0.55996 (3) obj. -331.4 iterations 7
Cbc0038I Pass  11: suminf.    0.68399 (2) obj. -331.4 iterations 3
Cbc0038I Pass  12: suminf.    0.93999 (2) obj. -331.4 iterations 7
Cbc0038I Pass  13: suminf.    0.93999 (2) obj. -331.4 iterations 1
Cbc0038I Pass  14: suminf.    1.00000 (3) obj. -331.4 iterations 6
Cbc0038I Pass  15: suminf.    0.93999 (2) obj. -331.4 iterations 2
Cbc0038I Pass  16: suminf.    1.39991 (3) obj. -331.4 iterations 2
Cbc0038I Pass  17: suminf.    1.39991 (3) obj. -331.4 iterations 0
Cbc0038I Pass  18: suminf.    0.93999 (2) obj. -331.4 iterations 3
Cbc0038I Pass  19: suminf.    1.39991 (3) obj. -331.4 iterations 4
Cbc0038I Pass  20: suminf.    1.39991 (3) obj. -331.4 iterations 0
Cbc0038I Pass  21: suminf.    0.93999 (2) obj. -331.4 iterations 3
Cbc0038I Pass  22: suminf.    1.00000 (3) obj. -331.4 iterations 15
Cbc0038I Pass  23: suminf.    0.93999 (2) obj. -331.4 iterations 5
Cbc0038I Pass  24: suminf.    0.83999 (2) obj. -331.4 iterations 1
Cbc0038I Pass  25: suminf.    0.83999 (2) obj. -331.4 iterations 0
Cbc0038I Pass  26: suminf.    1.00000 (3) obj. -331.4 iterations 11
Cbc0038I Pass  27: suminf.    0.83999 (2) obj. -331.4 iterations 5
Cbc0038I Pass  28: suminf.    1.39991 (3) obj. -331.4 iterations 7
Cbc0038I Pass  29: suminf.    1.39991 (3) obj. -331.4 iterations 1
Cbc0038I Pass  30: suminf.    0.93999 (2) obj. -331.4 iterations 3
Cbc0038I Pass  31: suminf.    1.00000 (3) obj. -331.4 iterations 13
Cbc0038I Pass  32: suminf.    0.93999 (2) obj. -331.4 iterations 5
Cbc0038I Pass  33: suminf.    1.39991 (3) obj. -331.4 iterations 3
Cbc0038I Pass  34: suminf.    1.39991 (3) obj. -331.4 iterations 0
Cbc0038I Pass  35: suminf.    0.93999 (2) obj. -331.4 iterations 3
Cbc0038I Pass  36: suminf.    1.00000 (3) obj. -331.4 iterations 11
Cbc0038I Pass  37: suminf.    0.93999 (2) obj. -331.4 iterations 5
Cbc0038I Pass  38: suminf.    1.06001 (3) obj. -331.4 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous of which 13 were internal integer and 0 internal continuous
Cbc0038I Full problem 50 rows 58 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -330 - took 0.01 seconds
Cbc0012I Integer solution of -330 found by DiveCoefficient after 2 iterations and 0 nodes (0.01 seconds)
Cbc0031I 2 added rows had average density of 11
Cbc0013I At root node, 2 cuts changed objective from -335 to -330 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -330, took 2 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -335 to -330
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -330.00000000
Enumerated nodes:               0
Total iterations:               2
Time (CPU seconds):             0.02
Time (Wallclock seconds):       0.02

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/fe65bbaf353d4c3e8a416f9b2ea5d1d3-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/fe65bbaf353d4c3e8a416f9b2ea5d1d3-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/5ec70478d8944aa7a9b9671bb8c4b1c4-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/5ec70478d8944aa7a9b9671bb8c4b1c4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 40 COLUMNS
At line 207 RHS
At line 243 BOUNDS
At line 275 ENDATA
Problem MODEL has 35 rows, 31 columns and 81 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -145 - 0.00 seconds
Cgl0003I 0 fixed, 10 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 24 rows, 30 columns (30 integer (16 of which binary)) and 70 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -130 iterations 2
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -130 iterations 0
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 222 iterations 5
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 222 iterations 0
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 222 iterations 0
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -119 iterations 7
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. -119 iterations 1
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -119 iterations 0
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. -119 iterations 0
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -119 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -89 iterations 4
Cbc0038I Solution found of -89
Cbc0038I Cleaned solution of -89
Cbc0038I Rounding solution of -139 is better than previous of -89

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 1 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 24 rows 30 columns, reduced to 5 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -139 to -140 (0.00 seconds)
Cbc0038I Round again with cutoff of -141.4
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass  13: suminf.    0.38000 (1) obj. -141.4 iterations 2
Cbc0038I Pass  14: suminf.    0.41997 (2) obj. -141.4 iterations 2
Cbc0038I Pass  15: suminf.    0.38000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  16: suminf.    1.30005 (4) obj. -141.4 iterations 3
Cbc0038I Pass  17: suminf.    0.66001 (2) obj. -141.4 iterations 1
Cbc0038I Pass  18: suminf.    0.44666 (1) obj. -141.4 iterations 1
Cbc0038I Pass  19: suminf.    0.66001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  20: suminf.    0.56001 (2) obj. -141.4 iterations 1
Cbc0038I Pass  21: suminf.    0.56001 (2) obj. -141.4 iterations 0
Cbc0038I Pass  22: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  23: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  24: suminf.    0.56001 (2) obj. -141.4 iterations 0
Cbc0038I Pass  25: suminf.    0.56001 (2) obj. -141.4 iterations 0
Cbc0038I Pass  26: suminf.    1.67994 (4) obj. -141.4 iterations 5
Cbc0038I Pass  27: suminf.    1.67994 (4) obj. -141.4 iterations 1
Cbc0038I Pass  28: suminf.    0.41333 (1) obj. -141.4 iterations 1
Cbc0038I Pass  29: suminf.    0.71997 (2) obj. -141.4 iterations 2
Cbc0038I Pass  30: suminf.    0.41333 (1) obj. -141.4 iterations 1
Cbc0038I Pass  31: suminf.    0.41333 (1) obj. -141.4 iterations 0
Cbc0038I Pass  32: suminf.    0.44666 (1) obj. -141.4 iterations 3
Cbc0038I Pass  33: suminf.    0.66001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  34: suminf.    0.44666 (1) obj. -141.4 iterations 1
Cbc0038I Pass  35: suminf.    0.89991 (2) obj. -141.4 iterations 4
Cbc0038I Pass  36: suminf.    0.89991 (2) obj. -141.4 iterations 0
Cbc0038I Pass  37: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  38: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I Pass  39: suminf.    0.89991 (2) obj. -141.4 iterations 4
Cbc0038I Pass  40: suminf.    0.89991 (2) obj. -141.4 iterations 1
Cbc0038I Pass  41: suminf.    0.48000 (1) obj. -141.4 iterations 1
Cbc0038I Pass  42: suminf.    0.56001 (2) obj. -141.4 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Full problem 24 rows 30 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -140 - took 0.00 seconds
Cbc0012I Integer solution of -140 found by DiveCoefficient after 3 iterations and 0 nodes (0.01 seconds)
Cbc0031I 2 added rows had average density of 7
Cbc0013I At root node, 2 cuts changed objective from -145 to -140 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 3 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -140, took 3 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -145 to -140
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -140.00000000
Enumerated nodes:               0
Total iterations:               3
Time (CPU seconds):             0.01
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/4dc0b9a0318445519ee95b4674d0f842-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/4dc0b9a0318445519ee95b4674d0f842-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/3544f74042a54977acd71976eee42c09-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/3544f74042a54977acd71976eee42c09-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -80 - 0.00 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 18 rows, 22 columns (22 integer (12 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -80
Cbc0038I Cleaned solution of -80
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 2 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -80 - took 0.00 seconds
Cbc0012I Integer solution of -80 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -80, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -80 to -80
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -80.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/038388b4fa024a288ee25110db00bb21-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/038388b4fa024a288ee25110db00bb21-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/b1e75bbd8aed44e2a91201f31460da40-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/b1e75bbd8aed44e2a91201f31460da40-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 40 COLUMNS
At line 209 RHS
At line 245 BOUNDS
At line 277 ENDATA
Problem MODEL has 35 rows, 31 columns and 83 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -140 - 0.00 seconds
Cgl0003I 0 fixed, 9 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 26 rows, 31 columns (31 integer (15 of which binary)) and 75 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 1
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -140 iterations 0
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. -140 iterations 0
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. -140 iterations 0
Cbc0038I Pass   4: suminf.    0.50000 (1) obj. 431 iterations 5
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 451 iterations 1
Cbc0038I Solution found of 451
Cbc0038I Cleaned solution of 451
Cbc0038I Rounding solution of -140 is better than previous of 451

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 1 continuous of which 5 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -140 - took 0.00 seconds
Cbc0012I Integer solution of -138 found by DiveCoefficient after 2 iterations and 0 nodes (0.00 seconds)
Cbc0031I 2 added rows had average density of 3.5
Cbc0013I At root node, 2 cuts changed objective from -140 to -138 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -138, took 2 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -140 to -138
Probing was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 2 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -138.00000000
Enumerated nodes:               0
Total iterations:               2
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.01

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/179520ab56344a50aa2eead84a608b0c-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/179520ab56344a50aa2eead84a608b0c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/59a1022cc9f94b5c87c358390532f4da-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/59a1022cc9f94b5c87c358390532f4da-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/e7384d35fd30453e875a528f9301c214-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/e7384d35fd30453e875a528f9301c214-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/878ce5e66c22424ea2b30b60316bc8f4-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/878ce5e66c22424ea2b30b60316bc8f4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 29 COLUMNS
At line 146 RHS
At line 171 BOUNDS
At line 194 ENDATA
Problem MODEL has 24 rows, 22 columns and 56 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is -70 - 0.00 seconds
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 22 columns (22 integer (14 of which binary)) and 52 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of -70
Cbc0038I Cleaned solution of -70
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -70 - took 0.00 seconds
Cbc0012I Integer solution of -70 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective -70, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -70 to -70
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                -70.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/fa1473aa840c49d59891e4d9a2c0fdc9-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/fa1473aa840c49d59891e4d9a2c0fdc9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/d599566b356b4e128a7ab6387c83f820-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/d599566b356b4e128a7ab6387c83f820-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/60a67440a6274891b78026f022d311e7-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/60a67440a6274891b78026f022d311e7-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/7436f8aedda841f386c6d18198d22bc8-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/7436f8aedda841f386c6d18198d22bc8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/77c30703b7104ad397fd97d87ac94cf1-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/77c30703b7104ad397fd97d87ac94cf1-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 0 - took 0.00 seconds
Cbc0012I Integer solution of 0 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 0, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/c32c9c3bd7db441490ff9abaef083113-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/c32c9c3bd7db441490ff9abaef083113-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/sraeisid/.local/lib/python3.7/site-packages/pulp/apis/../solverdir/cbc/linux/64/cbc /tmp/6c1622921b9c49398dd6a73da7556758-pulp.mps timeMode elapsed branch printingOptions all solution /tmp/6c1622921b9c49398dd6a73da7556758-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 10 COLUMNS
At line 38 RHS
At line 44 BOUNDS
At line 51 ENDATA
Problem MODEL has 5 rows, 6 columns and 11 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0 - 0.00 seconds
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 5 substitutions
Cgl0004I processed model has 2 rows, 3 columns (3 integer (3 of which binary)) and 6 elements
Cutoff increment increased from 1e-05 to 1.9999
Cbc0038I Initial state - 0 integers unsatisfied sum - 0
Cbc0038I Solution found of 2
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 2 - took 0.00 seconds
Cbc0012I Integer solution of 2 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 2, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2 to 2
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                2.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.00
Time (Wallclock seconds):       0.00

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.00   (Wallclock seconds):       0.00

dashag 1.0035385472297762
296	51	2	2	86637600.3	86613179.6	24209008.0	187323536.0	0.48	translocation_intrachr	39	83	-1	18456	18455	4567	37698	heterozygous	1	73	-1.0	1925.83	4249.93	-1.0	-1.0	0.161	+/+	0.55
281	122	2	2	54811685.6	54792023.8	24181306.0	187339873.0	0.21	translocation_intrachr	36	94	-1	11133	11132	4566	37699	heterozygous	1	73	-1.0	5719.9	13647.61	-1.0	-1.0	0.203	-/-	0.61
296	51	2	2	86637600.3	86613179.6	24209008.0	187323536.0	0.48	translocation_intrachr	39	83	-1	18456	18455	4567	37698	heterozygous	1	73	-1.0	1925.83	4249.93	-1.0	-1.0	0.161	+/+	0.55
294	121	2	2	54855730.5	54836068.6	24181306.0	187339873.0	0.25	translocation_intrachr	37	95	-1	11143	11142	4566	37699	heterozygous	1	73	-1.0	5721.53	13646.77	-1.0	-1.0	0.191	-/-	0.61
281	122	2	2	54811685.6	54792023.8	24181306.0	187339873.0	0.21	translocation_intrachr	36	94	-1	11133	11132	4566	37699	heterozygous	1	73	-1.0	5719.9	13647.61	-1.0	-1.0	0.203	-/-	0.61
296	51	2	2	86637600.3	86613179.6	24209008.0	187323536.0	0.48	translocation_intrachr	39	83	-1	18456	18455	4567	37698	heterozygous	1	73	-1.0	1925.83	4249.93	-1.0	-1.0	0.161	+/+	0.55
281	122	2	2	54811685.6	54792023.8	24181306.0	187339873.0	0.21	translocation_intrachr	36	94	-1	11133	11132	4566	37699	heterozygous	1	73	-1.0	5719.9	13647.61	-1.0	-1.0	0.203	-/-	0.61
298	52	2	2	86637176.4	86612755.7	24209008.0	187323536.0	0.31	translocation_intrachr	40	84	-1	18455	18454	4567	37698	heterozygous	1	73	-1.0	1936.54	4239.68	-1.0	-1.0	0.112	+/+	0.55
301	1472	2	2	183291.0	186702.9	28114295.0	193128415.0	0.63	translocation_intrachr	43	97	-1	45	46	5293	39061	heterozygous	1	75	-1.0	46.14	64.51	-1.0	-1.0	0.064	-/-	0.31
299	1382	2	2	294013.0	285018.9	28109500.0	193136067.5	0.69	translocation_intrachr	41	99	-1	53	52	5292	39062	heterozygous	1	75	-1.0	91.71	60.04	-1.0	-1.0	0.192	-/-	0.45
301	1472	2	2	183291.0	186702.9	28114295.0	193128415.0	0.63	translocation_intrachr	43	97	-1	45	46	5293	39061	heterozygous	1	75	-1.0	46.14	64.51	-1.0	-1.0	0.064	-/-	0.31
300	1381	2	2	293982.6	284988.5	28109500.0	193136067.5	0.69	translocation_intrachr	42	98	-1	53	52	5292	39062	heterozygous	1	75	-1.0	66.03	56.66	-1.0	-1.0	0.174	-/-	0.45
299	1382	2	2	294013.0	285018.9	28109500.0	193136067.5	0.69	translocation_intrachr	41	99	-1	53	52	5292	39062	heterozygous	1	75	-1.0	91.71	60.04	-1.0	-1.0	0.192	-/-	0.45
301	1472	2	2	183291.0	186702.9	28114295.0	193128415.0	0.63	translocation_intrachr	43	97	-1	45	46	5293	39061	heterozygous	1	75	-1.0	46.14	64.51	-1.0	-1.0	0.064	-/-	0.31
299	1382	2	2	294013.0	285018.9	28109500.0	193136067.5	0.69	translocation_intrachr	41	99	-1	53	52	5292	39062	heterozygous	1	75	-1.0	91.71	60.04	-1.0	-1.0	0.192	-/-	0.45
302	1471	2	2	288075.1	291487.1	28114295.0	193128415.0	0.88	translocation_intrachr	44	96	-1	64	65	5293	39061	heterozygous	1	75	-1.0	72.73	64.51	-1.0	-1.0	0.14	-/-	0.31
303	211	2	2	299605.8	323218.9	32129219.5	36689316.5	0.99	deletion	45	53	-1	77	78	6099	7036	heterozygous	1	76	82.1	82.1	13031.87	4386.98	4536483.9	0.125	NA	0.41
303	211	2	2	299605.8	323218.9	32129219.5	36689316.5	0.99	deletion	45	53	-1	77	78	6099	7036	heterozygous	1	76	82.1	82.1	13031.87	4386.98	4536483.9	0.125	NA	0.41
309	372	2	4	4818908.4	4825551.7	36661712.0	101745747.0	0.34	translocation_interchr	46	135	-1	988	989	7035	20877	heterozygous	1	77	-1.0	1245.21	8132.58	-1.0	-1.0	0.132	+/+	0.5
315	371	2	4	4818876.1	4825519.4	36661712.0	101745747.0	0.48	translocation_interchr	47	134	-1	988	989	7035	20877	heterozygous	1	77	-1.0	1241.17	8160.21	-1.0	-1.0	0.118	+/+	0.5
316	212	2	2	154319.2	177932.3	32129219.5	36689316.5	0.99	deletion	48	54	-1	39	40	6099	7036	heterozygous	1	76	48.32	48.32	13034.42	4386.98	4536483.9	0.116	NA	0.41
316	212	2	2	154319.2	177932.3	32129219.5	36689316.5	0.99	deletion	48	54	-1	39	40	6099	7036	heterozygous	1	76	48.32	48.32	13034.42	4386.98	4536483.9	0.116	NA	0.41
317	232	2	4	49693517.6	49689334.5	32135026.0	101744761.0	0.89	translocation_interchr	49	131	-1	10768	10767	6100	20876	heterozygous	2	77	-1.0	60.62	9759.29	-1.0	-1.0	0.197	+/+	0.52
318	231	2	4	49693803.6	49689620.5	32135026.0	101744761.0	0.91	translocation_interchr	50	130	-1	10767	10766	6100	20876	heterozygous	2	77	-1.0	66.61	9772.66	-1.0	-1.0	0.188	+/+	0.52
521	51	2	5	70577230.6	70560957.8	171288481.0	141702091.0	0.09	translocation_interchr	83	149	-1	15039	15038	34193	29453	heterozygous	1	123	-1.0	4249.93	18709.76	-1.0	-1.0	0.147	+/+	0.51
470	281	2	5	39216520.0	39228804.5	171271843.0	141713983.0	0.91	translocation_interchr	75	154	-1	8543	8544	34192	29454	heterozygous	1	123	-1.0	10549.94	997.29	-1.0	-1.0	0.142	+/+	0.49
521	51	2	5	70577230.6	70560957.8	171288481.0	141702091.0	0.09	translocation_interchr	83	149	-1	15039	15038	34193	29453	heterozygous	1	123	-1.0	4249.93	18709.76	-1.0	-1.0	0.147	+/+	0.51
494	282	2	5	39216073.0	39228357.5	171271843.0	141713983.0	0.8	translocation_interchr	76	153	-1	8543	8544	34192	29454	heterozygous	1	123	-1.0	10544.61	991.82	-1.0	-1.0	0.13699999999999998	+/+	0.49
495	1340	2	2	311159.3	313964.8	160224559.0	164132403.0	1.0	inversion	77	80	496	55	56	31683	32596	heterozygous	1	-1	-1.0	66.7	74.63	-1.0	297257.0	0.28600000000000003	NA	0.24 160224559.0 164429660.0 right
496	1340	2	-1	611073.6	-1.0	164429660.0	-1.0	1.0	inversion_partial	80	-1	495	116	-1	32656	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	297257.0	0.28600000000000003	NA	0.24
497	1560	2	2	11083.0	558010.2	160230889.0	160500364.0	-1.0	duplication_inverted	79	78	-1	1	137	31684	31753	unknown	-1	-1	-1.0	82.99	85.68	-1.0	269475.0	0.335	NA	0.07
498	1360	2	2	302969.3	309281.0	168862133.0	175637755.0	0.51	translocation_intrachr	81	85	-1	66	67	33669	35119	heterozygous	1	-1	-1.0	81.47	81.46	-1.0	-1.0	0.275	-/-	0.28
470	281	2	5	39216520.0	39228804.5	171271843.0	141713983.0	0.91	translocation_interchr	75	154	-1	8543	8544	34192	29454	heterozygous	1	123	-1.0	10549.94	997.29	-1.0	-1.0	0.142	+/+	0.49
521	51	2	5	70577230.6	70560957.8	171288481.0	141702091.0	0.09	translocation_interchr	83	149	-1	15039	15038	34193	29453	heterozygous	1	123	-1.0	4249.93	18709.76	-1.0	-1.0	0.147	+/+	0.51
470	281	2	5	39216520.0	39228804.5	171271843.0	141713983.0	0.91	translocation_interchr	75	154	-1	8543	8544	34192	29454	heterozygous	1	123	-1.0	10549.94	997.29	-1.0	-1.0	0.142	+/+	0.49
530	52	2	5	70577852.9	70561580.0	171288481.0	141702091.0	0.89	translocation_interchr	84	150	-1	15041	15040	34193	29453	heterozygous	1	123	-1.0	4239.68	18715.85	-1.0	-1.0	0.166	+/+	0.51
532	1140	2	5	471502.8	485326.5	180869229.0	145588456.0	0.47	translocation_interchr	87	155	-1	111	112	36273	30265	heterozygous	1	132	-1.0	48.87	79.16	-1.0	-1.0	0.227	-/-	0.3
531	1480	2	5	288766.7	275197.2	180852829.0	145599449.0	0.7	translocation_interchr	86	158	-1	61	60	36272	30266	heterozygous	1	132	-1.0	78.48	70.87	-1.0	-1.0	0.233	-/-	0.32
531	1480	2	5	288766.7	275197.2	180852829.0	145599449.0	0.7	translocation_interchr	86	158	-1	61	60	36272	30266	heterozygous	1	132	-1.0	78.48	70.87	-1.0	-1.0	0.233	-/-	0.32
532	1140	2	5	471502.8	485326.5	180869229.0	145588456.0	0.47	translocation_interchr	87	155	-1	111	112	36273	30265	heterozygous	1	132	-1.0	48.87	79.16	-1.0	-1.0	0.227	-/-	0.3
534	1410	2	14	306883.4	319017.4	181052772.0	84098491.0	0.59	translocation_interchr	88	319	-1	64	65	36318	14002	heterozygous	1	133	-1.0	79.94	77.83	-1.0	-1.0	0.23	-/-	0.31
533	1140	2	14	290317.0	285801.8	181050460.0	84112790.0	0.78	translocation_interchr	87	320	-1	69	68	36317	14003	heterozygous	1	133	-1.0	48.87	83.41	-1.0	-1.0	0.275	-/-	0.37
533	1140	2	14	290317.0	285801.8	181050460.0	84112790.0	0.78	translocation_interchr	87	320	-1	69	68	36317	14003	heterozygous	1	133	-1.0	48.87	83.41	-1.0	-1.0	0.275	-/-	0.37
534	1410	2	14	306883.4	319017.4	181052772.0	84098491.0	0.59	translocation_interchr	88	319	-1	64	65	36318	14002	heterozygous	1	133	-1.0	79.94	77.83	-1.0	-1.0	0.23	-/-	0.31
537	1430	2	14	309674.2	306742.8	186804190.0	93391806.0	0.9	translocation_interchr	91	323	-1	49	48	37593	15805	heterozygous	1	134	-1.0	78.19	60.46	-1.0	-1.0	0.278	+/+	0.35
535	1451	2	14	281333.3	281333.3	186800587.0	93390957.0	0.89	translocation_interchr	89	325	-1	56	56	37592	15804	heterozygous	1	134	-1.0	70.37	81.35	-1.0	-1.0	0.18600000000000005	+/+	0.39
537	1430	2	14	309674.2	306742.8	186804190.0	93391806.0	0.9	translocation_interchr	91	323	-1	49	48	37593	15805	heterozygous	1	134	-1.0	78.19	60.46	-1.0	-1.0	0.278	+/+	0.35
536	1452	2	14	236080.2	236080.2	186800587.0	93390957.0	0.81	translocation_interchr	90	324	-1	43	43	37592	15804	heterozygous	1	134	-1.0	55.71	50.71	-1.0	-1.0	0.119	+/+	0.39
535	1451	2	14	281333.3	281333.3	186800587.0	93390957.0	0.89	translocation_interchr	89	325	-1	56	56	37592	15804	heterozygous	1	134	-1.0	70.37	81.35	-1.0	-1.0	0.18600000000000005	+/+	0.39
537	1430	2	14	309674.2	306742.8	186804190.0	93391806.0	0.9	translocation_interchr	91	323	-1	49	48	37593	15805	heterozygous	1	134	-1.0	78.19	60.46	-1.0	-1.0	0.278	+/+	0.35
602	1442	2	2	302029.4	306495.1	207352189.0	211991893.0	1.0	inversion	100	107	603	71	72	42189	43266	heterozygous	1	149	-1.0	86.23	92.16	-1.0	298846.0	0.193	NA	0.34 207352189.0 212290739.0 right
603	1442	2	-1	3362.0	-1.0	212290739.0	-1.0	1.0	inversion_partial	107	-1	602	1	-1	43337	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	298846.0	0.193	NA	0.34
604	1441	2	2	302029.4	306495.1	207352189.0	211991893.0	1.0	inversion	101	106	605	71	72	42189	43266	heterozygous	1	149	-1.0	90.28	92.16	-1.0	298846.0	0.231	NA	0.34 207352189.0 212290739.0 right
605	1441	2	-1	3362.0	-1.0	212290739.0	-1.0	1.0	inversion_partial	106	-1	604	1	-1	43337	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	298846.0	0.231	NA	0.34
606	1591	2	2	2504.9	468395.2	207357220.0	207589566.0	-1.0	duplication_inverted	102	104	-1	1	87	42190	42233	unknown	-1	-1	-1.0	52.81	77.59	-1.0	232346.0	0.147	NA	0.12
607	1592	2	2	1764.1	514425.0	207357220.0	207613000.0	-1.0	duplication_inverted	103	105	-1	1	106	42190	42244	unknown	-1	-1	-1.0	58.74	77.59	-1.0	255780.0	0.17	NA	0.09
921	231	4	4	13542390.1	13559435.8	60297381.0	65611037.0	0.1	translocation_intrachr	118	130	-1	2876	2877	11665	12821	heterozygous	1	-1	-1.0	2186.3	9772.66	-1.0	-1.0	0.222	+/+	0.6
926	232	4	4	13542979.3	13560025.0	60297381.0	65611037.0	0.08	translocation_intrachr	119	131	-1	2878	2879	11665	12821	heterozygous	1	-1	-1.0	2182.55	9759.29	-1.0	-1.0	0.177	+/+	0.6
1616	1520	6	6	295581.3	300459.5	67562006.0	71505818.0	1.0	inversion	168	170	1617	59	60	13236	14098	heterozygous	1	379	-1.0	78.5	81.68	-1.0	283347.0	0.29600000000000004	NA	0.23 67562006.0 71789165.0 right
1617	1520	6	-1	583753.2	-1.0	71789165.0	-1.0	1.0	inversion_partial	170	-1	1616	122	-1	14160	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	283347.0	0.29600000000000004	NA	0.23
1618	1510	6	6	293599.5	296755.1	67858872.0	71792710.0	1.0	inversion	169	171	1619	71	72	13309	14161	heterozygous	2	379	-1.0	89.19	90.59	-1.0	292416.0	0.313	NA	0.23 67566456.0 71792710.0 left
1619	1510	6	-1	1049.1	-1.0	67566456.0	-1.0	1.0	inversion_partial	169	-1	1618	1	-1	13237	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	292416.0	0.313	NA	0.23
1620	1401	6	6	305464.9	305464.9	125730128.0	135491218.0	0.44	translocation_intrachr	172	183	-1	67	67	26115	28211	heterozygous	1	380	-1.0	79.81	91.03	-1.0	-1.0	0.217	-/+	0.45
1621	1402	6	6	305464.9	305464.9	125730128.0	135491218.0	0.17	translocation_intrachr	173	182	-1	67	67	26115	28211	heterozygous	1	380	-1.0	79.81	63.28	-1.0	-1.0	0.188	-/+	0.45
1622	1321	6	6	-2250548.2	2864975.4	132597378.0	135150909.0	-1.0	duplication_split	174	176	-1	0	113	27624	28132	unknown	-1	-1	-1.0	77.53	63.02	-1.0	2553531.0	0.165	NA	0.2
1623	1322	6	6	-2252507.5	2863020.3	132597378.0	135150909.0	-1.0	duplication_split	175	177	-1	0	113	27624	28132	unknown	-1	-1	-1.0	73.92	63.02	-1.0	2553531.0	0.128	NA	0.16
1625	1571	6	6	40635.1	565049.9	135229973.0	135491218.0	-1.0	duplication_inverted	178	180	-1	13	129	28152	28211	unknown	-1	-1	-1.0	88.68	63.44	-1.0	261245.0	0.177	NA	0.19
1627	1572	6	6	19719.0	543768.3	135229973.0	135491218.0	-1.0	duplication_inverted	179	181	-1	5	121	28152	28211	unknown	-1	-1	-1.0	79.07	63.44	-1.0	261245.0	0.19	NA	0.21
2004	1302	8	8	304374.8	311713.7	100241350.0	103831826.0	1.0	inversion	207	212	2005	76	77	20014	20784	heterozygous	1	464	-1.0	60.68	86.04	-1.0	226455.0	0.222	NA	0.29 100014895.0 103831826.0 left
2005	1302	8	-1	538174.7	-1.0	100014895.0	-1.0	1.0	inversion_partial	207	-1	2004	123	-1	19966	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	226455.0	0.222	NA	0.29
2006	1301	8	8	275341.9	282680.8	100308591.0	103831826.0	1.0	inversion	208	211	2007	67	68	20032	20784	heterozygous	2	464	-1.0	83.89	77.73	-1.0	293696.0	0.219	NA	0.29 100014895.0 103831826.0 left
2007	1301	8	-1	576423.9	-1.0	100014895.0	-1.0	1.0	inversion_partial	208	-1	2006	132	-1	19966	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	293696.0	0.219	NA	0.29
2008	1600	8	8	14741.5	552519.8	103561170.0	103828724.0	-1.0	duplication_inverted	209	210	-1	2	125	20720	20783	unknown	-1	-1	-1.0	78.41	73.04	-1.0	267554.0	0.281	NA	0.36
2279	621	10	10	5592421.2	5592421.2	48034623.0	48060267.0	0.99	inversion	278	280	2280	991	991	9025	9033	heterozygous	1	-1	-1.0	247.82	72.05	-1.0	1043031.0	0.241	NA	0.26 46991592.0 48060267.0 left
2280	621	10	-1	4533927.2	-1.0	46991592.0	-1.0	0.99	inversion_partial	278	-1	2279	816	-1	8849	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	1043031.0	0.241	NA	0.26
2595	71	12	12	29354762.3	29365818.8	66611218.5	66622637.0	0.99	inversion	292	296	2596	5734	5735	13119	13120	heterozygous	1	597	-1.0	7263.78	728.09	-1.0	2619885.0	0.184	NA	0.9 66611218.5 69242522.0 right
2596	71	12	-1	31985191.8	-1.0	69242522.0	-1.0	0.99	inversion_partial	296	-1	2595	6317	-1	13715	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	2619885.0	0.184	NA	0.9
2615	72	12	12	29356458.1	29367514.6	66611218.5	66622637.0	0.99	inversion	293	297	2616	5736	5737	13119	13120	heterozygous	1	597	-1.0	7273.31	725.8	-1.0	2619885.0	0.166	NA	0.9 66611218.5 69242522.0 right
2616	72	12	-1	31987180.6	-1.0	69242522.0	-1.0	0.99	inversion_partial	297	-1	2615	6319	-1	13715	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	2619885.0	0.166	NA	0.9
2617	71	12	12	31985191.8	31991418.2	69242522.0	69248486.0	0.99	inversion	296	300	2618	6317	6318	13715	13716	heterozygous	1	598	-1.0	728.09	13896.01	-1.0	2619885.0	0.188	NA	0.9 66622637.0 69248486.0 left
2618	71	12	-1	29365818.8	-1.0	66622637.0	-1.0	0.99	inversion_partial	296	-1	2617	5735	-1	13120	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	2619885.0	0.188	NA	0.9
2619	72	12	12	31987180.6	31993407.1	69242522.0	69248486.0	0.99	inversion	297	301	2620	6319	6320	13715	13716	heterozygous	1	598	-1.0	725.8	13880.28	-1.0	2619885.0	0.152	NA	0.9 66622637.0 69248486.0 left
2620	72	12	-1	29367514.6	-1.0	66622637.0	-1.0	0.99	inversion_partial	297	-1	2619	5737	-1	13120	-1	heterozygous	-1	-1	-1.0	-1.0	-1.0	-1.0	2619885.0	0.152	NA	0.9
2952	101	15	15	79719219.9	80100788.7	21391082.5	22215094.0	0.01	deletion	326	328	-1	15597	15673	250	408	heterozygous	1	672	0.01	411.43	19841.56	-1.0	442442.7	0.187	NA	0.28
3168	631	17	17	4227328.0	4232968.6	30777178.0	31939058.0	0.99	deletion	354	358	-1	687	688	4264	4472	heterozygous	1	710	73.08	906.84	73.08	4389.09	1156239.3	0.241	NA	0.44
3168	631	17	17	4227328.0	4232968.6	30777178.0	31939058.0	0.99	deletion	354	358	-1	687	688	4264	4472	heterozygous	1	710	73.08	906.84	73.08	4389.09	1156239.3	0.241	NA	0.44
3171	632	17	17	4227542.3	4233182.9	30777178.0	31939058.0	0.99	deletion	355	359	-1	687	688	4264	4472	heterozygous	1	710	73.08	905.56	73.08	4389.09	1156239.3	0.226	NA	0.44
3171	632	17	17	4227542.3	4233182.9	30777178.0	31939058.0	0.99	deletion	355	359	-1	687	688	4264	4472	heterozygous	1	710	73.08	905.56	73.08	4389.09	1156239.3	0.226	NA	0.44
0 1 0 2 H [1]
1 1 248943333 2 T [0]
2 2 15925.0 2 H [3]
3 2 24195157.0 2 T [32, 2, 4]
4 2 24195158.0 2 H [3, 5, 31]
5 2 28111897.5 2 T [34, 4, 6]
6 2 28111898.5 2 H [33, 5, 7]
7 2 32132122.75 2 T [8, 10, 6]
8 2 32132123.75 2 H [9, 53, 7]
9 2 36675514.25 2 T [8, 10, 54]
10 2 36675515.25 2 H [9, 11, 7]
11 2 160224559.0 2 T [10, 12, 15]
12 2 160224560.0 2 H [11, 13]
13 2 160314259.0 2 T [12, 14]
14 2 160314260.0 3 H [13, 14, 15]
15 2 164424615.0 3 T [16, 11, 14]
16 2 164427138.0 2 H [17, 15]
17 2 168865806.5 2 T [16, 18]
18 2 168869481.0 3 H [17, 19, 23]
19 2 171280162.0 3 T [18, 20, 58]
20 2 171280163.0 3 H [57, 19, 21]
21 2 175561065.0 3 T [20, 22]
22 2 175561066.0 2 H [21, 23]
23 2 175637755.0 2 T [24, 18, 22]
24 2 175637756.0 2 H [25, 23]
25 2 180861029.0 2 T [24, 26, 60]
26 2 180861030.0 2 H [25, 27, 59]
27 2 181051616.0 2 T [108, 26, 28]
28 2 181051617.0 2 H [107, 27, 29]
29 2 186802388.5 2 T [110, 28, 30]
30 2 186802389.5 2 H [109, 29, 31]
31 2 187331704.5 2 T [32, 4, 30]
32 2 187331705.5 2 H [33, 3, 31]
33 2 193132241.25 2 T [32, 34, 6]
34 2 193132242.25 2 H [33, 35, 5]
35 2 207352189.0 2 T [34, 36, 39]
36 2 207352190.0 2 H [35, 37]
37 2 207425734.0 2 T [36, 38]
38 2 207425735.0 3 H [37, 38, 39]
39 2 212252125.0 3 T [40, 35, 38]
40 2 212271432.5 2 H [41, 39]
41 2 242181356.0 2 T [40]
42 3 12920 2 H [43]
43 3 63956939.0 2 T [42, 44]
44 3 63956940.0 3 H [43, 45]
45 3 65089720.0 3 T [44, 46]
46 3 65089721 2 H [45, 47]
47 3 198230595 2 T [46]
48 4 0.0 2 H [49]
49 4 60297381.0 2 T [48, 50, 52]
50 4 60297382.0 2 H [49, 51]
51 4 65611037.0 2 T [50, 52]
52 4 65611038.0 2 H [49, 51, 53]
53 4 101745254.0 2 T [8, 52, 54]
54 4 101745255.0 2 H [9, 53, 55]
55 4 190202564.0 2 T [54]
56 5 0.0 2 H [57]
57 5 141708037.0 2 T [56, 58, 20]
58 5 141708038.0 2 H [19, 57, 59]
59 5 145593952.5 2 T [58, 26, 60]
60 5 145593953.5 2 H [25, 59, 61]
61 5 181472714.0 2 T [60]
62 6 76217.0 2 H [63]
63 6 67564231.0 2 T [64, 65, 62]
64 6 67564232.0 2 H [65, 66, 63]
65 6 71790937.5 2 T [64, 66, 63]
66 6 71790938.5 2 H [64, 65, 67]
67 6 125742480.5 2 T [66, 68]
68 6 125754834.0 3 H [74, 67, 69]
69 6 132568487.0 3 T [68, 70]
70 6 132587517.0 4 H [69, 71]
71 6 135425964.0 4 T [72, 70, 71]
72 6 135425965.0 2 H [73, 71]
73 6 135491218.0 2 T [72, 74]
74 6 135491219.0 2 H [73, 75, 68]
75 6 170739896.0 2 T [74]
76 7 0 2 H [77]
77 7 159334984 2 T [76]
78 8 61806 2 H [79]
79 8 100009037.0 2 T [80, 78]
80 8 100011966.5 3 H [81, 84, 79]
81 8 103780961.0 3 T [80, 81, 82]
82 8 103780962.0 2 H [81, 83]
83 8 103831826.0 2 T [82, 84]
84 8 103831827.0 2 H [80, 83, 85]
85 8 145076124.0 2 T [84]
86 9 0 2 H [87]
87 9 138334464 2 T [86]
88 10 0.0 2 H [89]
89 10 46991592.0 2 T [88, 90]
90 10 46991593.0 2 H [89, 91, 92]
91 10 48060267.0 2 T [90, 92]
92 10 48060268.0 2 H [90, 91, 93]
93 10 133785266.0 2 T [92]
94 11 0 2 H [95]
95 11 135069565 2 T [94]
96 12 14569.0 2 H [97]
97 12 66616927.75 2 T [96, 98, 99]
98 12 66616928.75 2 H [97, 99, 100]
99 12 69245504.0 2 T [97, 98, 100]
100 12 69245505.0 2 H [98, 99, 101]
101 12 124294637.0 2 T [100, 102]
102 12 124294638.0 3 H [101, 103]
103 12 133263960.0 3 T [102]
104 13 0 2 H [105]
105 13 114352102 2 T [104]
106 14 0.0 2 H [107]
107 14 84105640.5 2 T [106, 108, 28]
108 14 84105641.5 2 H [27, 107, 109]
109 14 93391381.5 2 T [108, 110, 30]
110 14 93391382.5 2 H [29, 109, 111]
111 14 106873282.0 2 T [110]
112 15 0 2 H [113]
113 15 101976509 2 T [112]
114 16 0 2 H [115]
115 16 90224751 2 T [114]
116 17 66654 2 H [117]
117 17 30766001.0 2 T [120, 116, 118]
118 17 30766002.0 1 H [117, 119]
119 17 31922327.0 1 T [120, 118]
120 17 31922328 2 H [121, 117, 119]
121 17 83246391 2 T [120]
122 18 0 2 H [123]
123 18 80256374 2 T [122]
124 19 0 2 H [125]
125 19 58605715 2 T [124]
126 20 0 2 H [127]
127 20 64333718 2 T [126]
128 21 0 2 H [129]
129 21 46697230 2 T [128]
130 22 0 2 H [131]
131 22 50805587 2 T [130]
132 23 0 1 H [133]
133 23 156025612 1 T [132]
134 24 0 1 H [135]
135 24 57212132 1 T [134]
Siavash
[(0, 1, 2, 'S'), (3, 2, 2, 'S'), (3, 4, 0, 'R'), (5, 4, 2, 'S'), (5, 6, 0, 'R'), (7, 6, 2, 'S'), (7, 8, 0, 'R'), (9, 8, 2, 'S'), (9, 10, 0, 'R'), (11, 10, 2, 'S'), (11, 12, 0, 'R'), (12, 13, 2, 'S'), (13, 14, 0, 'R'), (14, 15, 3, 'S'), (15, 16, 0, 'R'), (16, 17, 2, 'S'), (17, 18, 0, 'R'), (19, 18, 3, 'S'), (19, 20, 0, 'R'), (20, 21, 3, 'S'), (21, 22, 0, 'R'), (23, 22, 2, 'S'), (23, 24, 0, 'R'), (25, 24, 2, 'S'), (25, 26, 0, 'R'), (27, 26, 2, 'S'), (27, 28, 0, 'R'), (29, 28, 2, 'S'), (29, 30, 0, 'R'), (31, 30, 2, 'S'), (31, 32, 0, 'R'), (33, 32, 2, 'S'), (33, 34, 0, 'R'), (35, 34, 2, 'S'), (35, 36, 0, 'R'), (36, 37, 2, 'S'), (37, 38, 0, 'R'), (38, 39, 3, 'S'), (39, 40, 0, 'R'), (40, 41, 2, 'S'), (42, 43, 2, 'S'), (43, 44, 0, 'R'), (44, 45, 3, 'S'), (45, 46, 0, 'R'), (46, 47, 2, 'S'), (49, 48, 2, 'S'), (49, 50, 0, 'R'), (51, 50, 2, 'S'), (51, 52, 0, 'R'), (53, 52, 2, 'S'), (53, 54, 0, 'R'), (54, 55, 2, 'S'), (57, 56, 2, 'S'), (57, 58, 0, 'R'), (59, 58, 2, 'S'), (59, 60, 0, 'R'), (60, 61, 2, 'S'), (63, 62, 2, 'S'), (63, 64, 0, 'R'), (65, 64, 2, 'S'), (65, 66, 0, 'R'), (66, 67, 2, 'S'), (67, 68, 0, 'R'), (68, 69, 3, 'S'), (69, 70, 0, 'R'), (70, 71, 4, 'S'), (71, 72, 0, 'R'), (73, 72, 2, 'S'), (73, 74, 0, 'R'), (74, 75, 2, 'S'), (76, 77, 2, 'S'), (78, 79, 2, 'S'), (79, 80, 0, 'R'), (80, 81, 3, 'S'), (81, 82, 0, 'R'), (83, 82, 2, 'S'), (83, 84, 0, 'R'), (84, 85, 2, 'S'), (86, 87, 2, 'S'), (89, 88, 2, 'S'), (89, 90, 0, 'R'), (91, 90, 2, 'S'), (91, 92, 0, 'R'), (92, 93, 2, 'S'), (94, 95, 2, 'S'), (97, 96, 2, 'S'), (97, 98, 0, 'R'), (99, 98, 2, 'S'), (99, 100, 0, 'R'), (100, 101, 2, 'S'), (101, 102, 0, 'R'), (102, 103, 3, 'S'), (104, 105, 2, 'S'), (107, 106, 2, 'S'), (107, 108, 0, 'R'), (109, 108, 2, 'S'), (109, 110, 0, 'R'), (110, 111, 2, 'S'), (112, 113, 2, 'S'), (114, 115, 2, 'S'), (116, 117, 2, 'S'), (117, 118, 0, 'R'), (118, 119, 1, 'S'), (119, 120, 0, 'R'), (120, 121, 2, 'S'), (122, 123, 2, 'S'), (124, 125, 2, 'S'), (126, 127, 2, 'S'), (128, 129, 2, 'S'), (130, 131, 2, 'S'), (132, 133, 1, 'S'), (134, 135, 1, 'S'), (3, 32, 0, 'SV'), (4, 31, 0, 'SV'), (5, 34, 0, 'SV'), (6, 33, 0, 'SV'), (7, 10, 0, 'SV'), (9, 54, 0, 'SV'), (8, 53, 0, 'SV'), (19, 58, 0, 'SV'), (20, 57, 0, 'SV'), (11, 15, 0, 'SV'), (14, 14, 0, 'SV'), (18, 23, 0, 'SV'), (25, 60, 0, 'SV'), (26, 59, 0, 'SV'), (27, 108, 0, 'SV'), (28, 107, 0, 'SV'), (29, 110, 0, 'SV'), (30, 109, 0, 'SV'), (35, 39, 0, 'SV'), (38, 38, 0, 'SV'), (49, 52, 0, 'SV'), (63, 65, 0, 'SV'), (64, 66, 0, 'SV'), (68, 74, 0, 'SV'), (70, 71, 0, 'SV'), (71, 71, 0, 'SV'), (80, 84, 0, 'SV'), (81, 81, 0, 'SV'), (90, 92, 0, 'SV'), (97, 99, 0, 'SV'), (98, 100, 0, 'SV'), (117, 120, 0, 'SV')]
Siavash [(0, 1, 2, 'S')]
Y0 (0, 1, 2, 'S')
A0 A0
B0 B0
A1 A1
B1 B1
obj -2*Y0 + 4
Sv_sum 0
CN_tune 300*Z0
obj B0 + B1 - 20*Y0 + 3000*Z0 + 40
Problem:
MINIMIZE
1*B0 + 1*B1 + -20*Y0 + 3000*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A0 - B0 - Y0 = -2

_C5: - 2 A1 - B1 - Y0 = -2

VARIABLES
0 <= A0 Integer
0 <= A1 Integer
0 <= B0 <= 1 Integer
0 <= B1 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A0, A1, B0, B1, Y0, Z0]
A0 = 1.0
A1 = 1.0
B0 = 0.0
B1 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(3, 2, 2, 'S'), (3, 32, 0, 'SV'), (3, 4, 0, 'R'), (33, 32, 2, 'S'), (31, 32, 0, 'R'), (33, 34, 0, 'R'), (6, 33, 0, 'SV'), (35, 34, 2, 'S'), (5, 34, 0, 'SV'), (35, 36, 0, 'R'), (35, 39, 0, 'SV'), (36, 37, 2, 'S'), (37, 38, 0, 'R'), (38, 39, 3, 'S'), (39, 40, 0, 'R'), (40, 41, 2, 'S'), (5, 4, 2, 'S'), (5, 6, 0, 'R'), (4, 31, 0, 'SV'), (31, 30, 2, 'S'), (30, 109, 0, 'SV'), (29, 30, 0, 'R'), (109, 108, 2, 'S'), (109, 110, 0, 'R'), (27, 108, 0, 'SV'), (107, 108, 0, 'R'), (27, 26, 2, 'S'), (27, 28, 0, 'R'), (25, 26, 0, 'R'), (26, 59, 0, 'SV'), (25, 24, 2, 'S'), (25, 60, 0, 'SV'), (23, 24, 0, 'R'), (18, 23, 0, 'SV'), (23, 22, 2, 'S'), (17, 18, 0, 'R'), (19, 18, 3, 'S'), (16, 17, 2, 'S'), (15, 16, 0, 'R'), (11, 15, 0, 'SV'), (14, 15, 3, 'S'), (11, 10, 2, 'S'), (11, 12, 0, 'R'), (9, 10, 0, 'R'), (7, 10, 0, 'SV'), (9, 8, 2, 'S'), (9, 54, 0, 'SV'), (8, 53, 0, 'SV'), (7, 8, 0, 'R'), (53, 52, 2, 'S'), (53, 54, 0, 'R'), (49, 52, 0, 'SV'), (51, 52, 0, 'R'), (49, 48, 2, 'S'), (49, 50, 0, 'R'), (51, 50, 2, 'S'), (54, 55, 2, 'S'), (7, 6, 2, 'S'), (12, 13, 2, 'S'), (13, 14, 0, 'R'), (19, 20, 0, 'R'), (19, 58, 0, 'SV'), (20, 57, 0, 'SV'), (20, 21, 3, 'S'), (57, 56, 2, 'S'), (57, 58, 0, 'R'), (59, 58, 2, 'S'), (59, 60, 0, 'R'), (60, 61, 2, 'S'), (21, 22, 0, 'R'), (28, 107, 0, 'SV'), (29, 28, 2, 'S'), (107, 106, 2, 'S'), (29, 110, 0, 'SV'), (110, 111, 2, 'S'), (38, 38, 0, 'SV'), (14, 14, 0, 'SV')]
Y0 (3, 2, 2, 'S')
X1 (3, 32, 0, 'SV')
X2 (3, 4, 0, 'R')
Y3 (33, 32, 2, 'S')
X4 (31, 32, 0, 'R')
X5 (33, 34, 0, 'R')
X6 (6, 33, 0, 'SV')
Y7 (35, 34, 2, 'S')
X8 (5, 34, 0, 'SV')
X9 (35, 36, 0, 'R')
X10 (35, 39, 0, 'SV')
Y11 (36, 37, 2, 'S')
X12 (37, 38, 0, 'R')
Y13 (38, 39, 3, 'S')
X14 (39, 40, 0, 'R')
Y15 (40, 41, 2, 'S')
Y16 (5, 4, 2, 'S')
X17 (5, 6, 0, 'R')
X18 (4, 31, 0, 'SV')
Y19 (31, 30, 2, 'S')
X20 (30, 109, 0, 'SV')
X21 (29, 30, 0, 'R')
Y22 (109, 108, 2, 'S')
X23 (109, 110, 0, 'R')
X24 (27, 108, 0, 'SV')
X25 (107, 108, 0, 'R')
Y26 (27, 26, 2, 'S')
X27 (27, 28, 0, 'R')
X28 (25, 26, 0, 'R')
X29 (26, 59, 0, 'SV')
Y30 (25, 24, 2, 'S')
X31 (25, 60, 0, 'SV')
X32 (23, 24, 0, 'R')
X33 (18, 23, 0, 'SV')
Y34 (23, 22, 2, 'S')
X35 (17, 18, 0, 'R')
Y36 (19, 18, 3, 'S')
Y37 (16, 17, 2, 'S')
X38 (15, 16, 0, 'R')
X39 (11, 15, 0, 'SV')
Y40 (14, 15, 3, 'S')
Y41 (11, 10, 2, 'S')
X42 (11, 12, 0, 'R')
X43 (9, 10, 0, 'R')
X44 (7, 10, 0, 'SV')
Y45 (9, 8, 2, 'S')
X46 (9, 54, 0, 'SV')
X47 (8, 53, 0, 'SV')
X48 (7, 8, 0, 'R')
Y49 (53, 52, 2, 'S')
X50 (53, 54, 0, 'R')
X51 (49, 52, 0, 'SV')
X52 (51, 52, 0, 'R')
Y53 (49, 48, 2, 'S')
X54 (49, 50, 0, 'R')
Y55 (51, 50, 2, 'S')
Y56 (54, 55, 2, 'S')
Y57 (7, 6, 2, 'S')
Y58 (12, 13, 2, 'S')
X59 (13, 14, 0, 'R')
X60 (19, 20, 0, 'R')
X61 (19, 58, 0, 'SV')
X62 (20, 57, 0, 'SV')
Y63 (20, 21, 3, 'S')
Y64 (57, 56, 2, 'S')
X65 (57, 58, 0, 'R')
Y66 (59, 58, 2, 'S')
X67 (59, 60, 0, 'R')
Y68 (60, 61, 2, 'S')
X69 (21, 22, 0, 'R')
X70 (28, 107, 0, 'SV')
Y71 (29, 28, 2, 'S')
Y72 (107, 106, 2, 'S')
X73 (29, 110, 0, 'SV')
Y74 (110, 111, 2, 'S')
X75 (38, 38, 0, 'SV')
X76 (14, 14, 0, 'SV')
A2 A2
B2 B2
A3 A3
B3 B3
A32 A32
B32 B32
A33 A33
B33 B33
A34 A34
B34 B34
A35 A35
B35 B35
A36 A36
B36 B36
A37 A37
B37 B37
A38 A38
B38 B38
A39 A39
B39 B39
A40 A40
B40 B40
A41 A41
B41 B41
A5 A5
B5 B5
A4 A4
B4 B4
A31 A31
B31 B31
A30 A30
B30 B30
A109 A109
B109 B109
A108 A108
B108 B108
A27 A27
B27 B27
A26 A26
B26 B26
A25 A25
B25 B25
A24 A24
B24 B24
A23 A23
B23 B23
A18 A18
B18 B18
A17 A17
B17 B17
A16 A16
B16 B16
A15 A15
B15 B15
A11 A11
B11 B11
A10 A10
B10 B10
A9 A9
B9 B9
A8 A8
B8 B8
A53 A53
B53 B53
A52 A52
B52 B52
A49 A49
B49 B49
A48 A48
B48 B48
A50 A50
B50 B50
A51 A51
B51 B51
A54 A54
B54 B54
A55 A55
B55 B55
A7 A7
B7 B7
A6 A6
B6 B6
A12 A12
B12 B12
A13 A13
B13 B13
A14 A14
B14 B14
A19 A19
B19 B19
A20 A20
B20 B20
A57 A57
B57 B57
A56 A56
B56 B56
A58 A58
B58 B58
A59 A59
B59 B59
A60 A60
B60 B60
A61 A61
B61 B61
A21 A21
B21 B21
A22 A22
B22 B22
A28 A28
B28 B28
A107 A107
B107 B107
A106 A106
B106 B106
A29 A29
B29 B29
A110 A110
B110 B110
A111 A111
B111 B111
obj -2*X1 - 2*X10 - 2*X12 - 2*X14 - 2*X17 - 2*X18 - 2*X2 - 2*X20 - 2*X21 - 2*X23 - 2*X24 - 2*X25 - 2*X27 - 2*X28 - 2*X29 - 2*X31 - 2*X32 - 2*X33 - 2*X35 - 2*X38 - 2*X39 - 2*X4 - 2*X42 - 2*X43 - 2*X44 - 2*X46 - 2*X47 - 2*X48 - 2*X5 - 2*X50 - 2*X51 - 2*X52 - 2*X54 - 2*X59 - 2*X6 - 2*X60 - 2*X61 - 2*X62 - 2*X65 - 2*X67 - 2*X69 - 2*X70 - 2*X73 - 2*X75 - 2*X76 - 2*X8 - 2*X9 - 2*Y0 - 2*Y11 - 2*Y13 - 2*Y15 - 2*Y16 - 2*Y19 - 2*Y22 - 2*Y26 - 2*Y3 - 2*Y30 - 2*Y34 - 2*Y36 - 2*Y37 - 2*Y40 - 2*Y41 - 2*Y45 - 2*Y49 - 2*Y53 - 2*Y55 - 2*Y56 - 2*Y57 - 2*Y58 - 2*Y63 - 2*Y64 - 2*Y66 - 2*Y68 - 2*Y7 - 2*Y71 - 2*Y72 - 2*Y74 + 128
Sv_sum T1 + T10 + T18 + 8*T20 + 8*T24 + 8*T29 + 8*T31 + T33 + T39 + T44 + 8*T46 + 8*T47 + T51 + T6 + 8*T61 + 8*T62 + 8*T70 + 8*T73 + T75 + T76 + T8
CN_tune 20*Z0 + 2*Z11 + 6*Z13 + 24*Z15 + 2*Z16 + 2*Z19 + 4*Z22 + 2*Z26 + 4*Z3 + 4*Z30 + 2*Z34 + 6*Z36 + 2*Z37 + 6*Z40 + 50*Z41 + 2*Z45 + 16*Z49 + 52*Z53 + 4*Z55 + 72*Z56 + 2*Z57 + 2*Z58 + 6*Z63 + 116*Z64 + 2*Z66 + 32*Z68 + 6*Z7 + 4*Z71 + 68*Z72 + 12*Z74
obj B10 + B106 + B107 + B108 + B109 + B11 + B110 + B111 + B12 + B13 + B14 + B15 + B16 + B17 + B18 + B19 + B2 + B20 + B21 + B22 + B23 + B24 + B25 + B26 + B27 + B28 + B29 + B3 + B30 + B31 + B32 + B33 + B34 + B35 + B36 + B37 + B38 + B39 + B4 + B40 + B41 + B48 + B49 + B5 + B50 + B51 + B52 + B53 + B54 + B55 + B56 + B57 + B58 + B59 + B6 + B60 + B61 + B7 + B8 + B9 - 10*T1 - 10*T10 - 10*T18 - 80*T20 - 80*T24 - 80*T29 - 80*T31 - 10*T33 - 10*T39 - 10*T44 - 80*T46 - 80*T47 - 10*T51 - 10*T6 - 80*T61 - 80*T62 - 80*T70 - 80*T73 - 10*T75 - 10*T76 - 10*T8 - 20*X1 - 20*X10 - 20*X12 - 20*X14 - 20*X17 - 20*X18 - 20*X2 - 20*X20 - 20*X21 - 20*X23 - 20*X24 - 20*X25 - 20*X27 - 20*X28 - 20*X29 - 20*X31 - 20*X32 - 20*X33 - 20*X35 - 20*X38 - 20*X39 - 20*X4 - 20*X42 - 20*X43 - 20*X44 - 20*X46 - 20*X47 - 20*X48 - 20*X5 - 20*X50 - 20*X51 - 20*X52 - 20*X54 - 20*X59 - 20*X6 - 20*X60 - 20*X61 - 20*X62 - 20*X65 - 20*X67 - 20*X69 - 20*X70 - 20*X73 - 20*X75 - 20*X76 - 20*X8 - 20*X9 - 20*Y0 - 20*Y11 - 20*Y13 - 20*Y15 - 20*Y16 - 20*Y19 - 20*Y22 - 20*Y26 - 20*Y3 - 20*Y30 - 20*Y34 - 20*Y36 - 20*Y37 - 20*Y40 - 20*Y41 - 20*Y45 - 20*Y49 - 20*Y53 - 20*Y55 - 20*Y56 - 20*Y57 - 20*Y58 - 20*Y63 - 20*Y64 - 20*Y66 - 20*Y68 - 20*Y7 - 20*Y71 - 20*Y72 - 20*Y74 + 200*Z0 + 20*Z11 + 60*Z13 + 240*Z15 + 20*Z16 + 20*Z19 + 40*Z22 + 20*Z26 + 40*Z3 + 40*Z30 + 20*Z34 + 60*Z36 + 20*Z37 + 60*Z40 + 500*Z41 + 20*Z45 + 160*Z49 + 520*Z53 + 40*Z55 + 720*Z56 + 20*Z57 + 20*Z58 + 60*Z63 + 1160*Z64 + 20*Z66 + 320*Z68 + 60*Z7 + 40*Z71 + 680*Z72 + 120*Z74 + 1280
Problem:
MINIMIZE
1*B10 + 1*B106 + 1*B107 + 1*B108 + 1*B109 + 1*B11 + 1*B110 + 1*B111 + 1*B12 + 1*B13 + 1*B14 + 1*B15 + 1*B16 + 1*B17 + 1*B18 + 1*B19 + 1*B2 + 1*B20 + 1*B21 + 1*B22 + 1*B23 + 1*B24 + 1*B25 + 1*B26 + 1*B27 + 1*B28 + 1*B29 + 1*B3 + 1*B30 + 1*B31 + 1*B32 + 1*B33 + 1*B34 + 1*B35 + 1*B36 + 1*B37 + 1*B38 + 1*B39 + 1*B4 + 1*B40 + 1*B41 + 1*B48 + 1*B49 + 1*B5 + 1*B50 + 1*B51 + 1*B52 + 1*B53 + 1*B54 + 1*B55 + 1*B56 + 1*B57 + 1*B58 + 1*B59 + 1*B6 + 1*B60 + 1*B61 + 1*B7 + 1*B8 + 1*B9 + -10*T1 + -10*T10 + -10*T18 + -80*T20 + -80*T24 + -80*T29 + -80*T31 + -10*T33 + -10*T39 + -10*T44 + -80*T46 + -80*T47 + -10*T51 + -10*T6 + -80*T61 + -80*T62 + -80*T70 + -80*T73 + -10*T75 + -10*T76 + -10*T8 + -20*X1 + -20*X10 + -20*X12 + -20*X14 + -20*X17 + -20*X18 + -20*X2 + -20*X20 + -20*X21 + -20*X23 + -20*X24 + -20*X25 + -20*X27 + -20*X28 + -20*X29 + -20*X31 + -20*X32 + -20*X33 + -20*X35 + -20*X38 + -20*X39 + -20*X4 + -20*X42 + -20*X43 + -20*X44 + -20*X46 + -20*X47 + -20*X48 + -20*X5 + -20*X50 + -20*X51 + -20*X52 + -20*X54 + -20*X59 + -20*X6 + -20*X60 + -20*X61 + -20*X62 + -20*X65 + -20*X67 + -20*X69 + -20*X70 + -20*X73 + -20*X75 + -20*X76 + -20*X8 + -20*X9 + -20*Y0 + -20*Y11 + -20*Y13 + -20*Y15 + -20*Y16 + -20*Y19 + -20*Y22 + -20*Y26 + -20*Y3 + -20*Y30 + -20*Y34 + -20*Y36 + -20*Y37 + -20*Y40 + -20*Y41 + -20*Y45 + -20*Y49 + -20*Y53 + -20*Y55 + -20*Y56 + -20*Y57 + -20*Y58 + -20*Y63 + -20*Y64 + -20*Y66 + -20*Y68 + -20*Y7 + -20*Y71 + -20*Y72 + -20*Y74 + 200*Z0 + 20*Z11 + 60*Z13 + 240*Z15 + 20*Z16 + 20*Z19 + 40*Z22 + 20*Z26 + 40*Z3 + 40*Z30 + 20*Z34 + 60*Z36 + 20*Z37 + 60*Z40 + 500*Z41 + 20*Z45 + 160*Z49 + 520*Z53 + 40*Z55 + 720*Z56 + 20*Z57 + 20*Z58 + 60*Z63 + 1160*Z64 + 20*Z66 + 320*Z68 + 60*Z7 + 40*Z71 + 680*Z72 + 120*Z74 + 1280
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 10 T1 + X1 <= 0

_C5: - T1 + X1 >= 0

_C6: X1 >= 0

_C7: X2 >= 1

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: X5 >= 1

_C13: - 10 T6 + X6 <= 0

_C14: - T6 + X6 >= 0

_C15: X6 >= 0

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: X9 >= 1

_C23: - 10 T10 + X10 <= 0

_C24: - T10 + X10 >= 0

_C25: X10 >= 0

_C26: Y11 + Z11 >= 0

_C27: - Y11 + Z11 >= 0

_C28: Z11 <= 1

_C29: X12 >= 1

_C30: Y13 + Z13 >= 0

_C31: - Y13 + Z13 >= 0

_C32: Z13 <= 1

_C33: X14 >= 1

_C34: Y15 + Z15 >= 0

_C35: - Y15 + Z15 >= 0

_C36: Z15 <= 1

_C37: Y16 + Z16 >= 0

_C38: - Y16 + Z16 >= 0

_C39: Z16 <= 1

_C40: X17 >= 1

_C41: - 10 T18 + X18 <= 0

_C42: - T18 + X18 >= 0

_C43: X18 >= 0

_C44: Y19 + Z19 >= 0

_C45: - Y19 + Z19 >= 0

_C46: Z19 <= 1

_C47: - 10 T20 + X20 <= 0

_C48: - T20 + X20 >= 0

_C49: X20 >= 0

_C50: X21 >= 1

_C51: Y22 + Z22 >= 0

_C52: - Y22 + Z22 >= 0

_C53: Z22 <= 1

_C54: X23 >= 1

_C55: - 10 T24 + X24 <= 0

_C56: - T24 + X24 >= 0

_C57: X24 >= 0

_C58: X25 >= 1

_C59: Y26 + Z26 >= 0

_C60: - Y26 + Z26 >= 0

_C61: Z26 <= 1

_C62: X27 >= 1

_C63: X28 >= 1

_C64: - 10 T29 + X29 <= 0

_C65: - T29 + X29 >= 0

_C66: X29 >= 0

_C67: Y30 + Z30 >= 0

_C68: - Y30 + Z30 >= 0

_C69: Z30 <= 1

_C70: - 10 T31 + X31 <= 0

_C71: - T31 + X31 >= 0

_C72: X31 >= 0

_C73: X32 >= 1

_C74: - 10 T33 + X33 <= 0

_C75: - T33 + X33 >= 0

_C76: X33 >= 0

_C77: Y34 + Z34 >= 0

_C78: - Y34 + Z34 >= 0

_C79: Z34 <= 1

_C80: X35 >= 1

_C81: Y36 + Z36 >= 0

_C82: - Y36 + Z36 >= 0

_C83: Z36 <= 1

_C84: Y37 + Z37 >= 0

_C85: - Y37 + Z37 >= 0

_C86: Z37 <= 1

_C87: X38 >= 1

_C88: - 10 T39 + X39 <= 0

_C89: - T39 + X39 >= 0

_C90: X39 >= 0

_C91: Y40 + Z40 >= 0

_C92: - Y40 + Z40 >= 0

_C93: Z40 <= 1

_C94: Y41 + Z41 >= 0

_C95: - Y41 + Z41 >= 0

_C96: Z41 <= 1

_C97: X42 >= 1

_C98: X43 >= 1

_C99: - 10 T44 + X44 <= 0

_C100: - T44 + X44 >= 0

_C101: X44 >= 0

_C102: Y45 + Z45 >= 0

_C103: - Y45 + Z45 >= 0

_C104: Z45 <= 1

_C105: - 10 T46 + X46 <= 0

_C106: - T46 + X46 >= 0

_C107: X46 >= 0

_C108: - 10 T47 + X47 <= 0

_C109: - T47 + X47 >= 0

_C110: X47 >= 0

_C111: X48 >= 1

_C112: Y49 + Z49 >= 0

_C113: - Y49 + Z49 >= 0

_C114: Z49 <= 1

_C115: X50 >= 1

_C116: - 10 T51 + X51 <= 0

_C117: - T51 + X51 >= 0

_C118: X51 >= 0

_C119: X52 >= 1

_C120: Y53 + Z53 >= 0

_C121: - Y53 + Z53 >= 0

_C122: Z53 <= 1

_C123: X54 >= 1

_C124: Y55 + Z55 >= 0

_C125: - Y55 + Z55 >= 0

_C126: Z55 <= 1

_C127: Y56 + Z56 >= 0

_C128: - Y56 + Z56 >= 0

_C129: Z56 <= 1

_C130: Y57 + Z57 >= 0

_C131: - Y57 + Z57 >= 0

_C132: Z57 <= 1

_C133: Y58 + Z58 >= 0

_C134: - Y58 + Z58 >= 0

_C135: Z58 <= 1

_C136: X59 >= 1

_C137: X60 >= 1

_C138: - 10 T61 + X61 <= 0

_C139: - T61 + X61 >= 0

_C140: X61 >= 0

_C141: - 10 T62 + X62 <= 0

_C142: - T62 + X62 >= 0

_C143: X62 >= 0

_C144: Y63 + Z63 >= 0

_C145: - Y63 + Z63 >= 0

_C146: Z63 <= 1

_C147: Y64 + Z64 >= 0

_C148: - Y64 + Z64 >= 0

_C149: Z64 <= 1

_C150: X65 >= 1

_C151: Y66 + Z66 >= 0

_C152: - Y66 + Z66 >= 0

_C153: Z66 <= 1

_C154: X67 >= 1

_C155: Y68 + Z68 >= 0

_C156: - Y68 + Z68 >= 0

_C157: Z68 <= 1

_C158: X69 >= 1

_C159: - 10 T70 + X70 <= 0

_C160: - T70 + X70 >= 0

_C161: X70 >= 0

_C162: Y71 + Z71 >= 0

_C163: - Y71 + Z71 >= 0

_C164: Z71 <= 1

_C165: Y72 + Z72 >= 0

_C166: - Y72 + Z72 >= 0

_C167: Z72 <= 1

_C168: - 10 T73 + X73 <= 0

_C169: - T73 + X73 >= 0

_C170: X73 >= 0

_C171: Y74 + Z74 >= 0

_C172: - Y74 + Z74 >= 0

_C173: Z74 <= 1

_C174: - 10 T75 + X75 <= 0

_C175: - T75 + X75 >= 0

_C176: X75 >= 0

_C177: - 10 T76 + X76 <= 0

_C178: - T76 + X76 >= 0

_C179: X76 >= 0

_C180: - 2 A2 - B2 - Y0 = -2

_C181: X1 + X2 + Y0 <= 2

_C182: - 2 A3 - B3 + X1 + X2 + Y0 = -2

_C183: X1 + X4 + Y3 <= 2

_C184: - 2 A32 - B32 + X1 + X4 + Y3 = -2

_C185: X5 + X6 + Y3 <= 2

_C186: - 2 A33 - B33 + X5 + X6 + Y3 = -2

_C187: X5 + X8 + Y7 <= 2

_C188: - 2 A34 - B34 + X5 + X8 + Y7 = -2

_C189: X10 + X9 + Y7 <= 2

_C190: - 2 A35 - B35 + X10 + X9 + Y7 = -2

_C191: X9 + Y11 <= 2

_C192: - 2 A36 - B36 + X9 + Y11 = -2

_C193: X12 + Y11 <= 2

_C194: - 2 A37 - B37 + X12 + Y11 = -2

_C195: X12 + 2 X75 + Y13 <= 3

_C196: - 2 A38 - B38 + X12 + 2 X75 + Y13 = -3

_C197: X10 + X14 + Y13 <= 3

_C198: - 2 A39 - B39 + X10 + X14 + Y13 = -3

_C199: X14 + Y15 <= 2

_C200: - 2 A40 - B40 + X14 + Y15 = -2

_C201: - 2 A41 - B41 - Y15 = -2

_C202: X17 + X8 + Y16 <= 2

_C203: - 2 A5 - B5 + X17 + X8 + Y16 = -2

_C204: X18 + X2 + Y16 <= 2

_C205: - 2 A4 - B4 + X18 + X2 + Y16 = -2

_C206: X18 + X4 + Y19 <= 2

_C207: - 2 A31 - B31 + X18 + X4 + Y19 = -2

_C208: X20 + X21 + Y19 <= 2

_C209: - 2 A30 - B30 + X20 + X21 + Y19 = -2

_C210: X20 + X23 + Y22 <= 2

_C211: - 2 A109 - B109 + X20 + X23 + Y22 = -2

_C212: X24 + X25 + Y22 <= 2

_C213: - 2 A108 - B108 + X24 + X25 + Y22 = -2

_C214: X24 + X27 + Y26 <= 2

_C215: - 2 A27 - B27 + X24 + X27 + Y26 = -2

_C216: X28 + X29 + Y26 <= 2

_C217: - 2 A26 - B26 + X28 + X29 + Y26 = -2

_C218: X28 + X31 + Y30 <= 2

_C219: - 2 A25 - B25 + X28 + X31 + Y30 = -2

_C220: X32 + Y30 <= 2

_C221: - 2 A24 - B24 + X32 + Y30 = -2

_C222: X32 + X33 + Y34 <= 2

_C223: - 2 A23 - B23 + X32 + X33 + Y34 = -2

_C224: X33 + X35 + Y36 <= 3

_C225: - 2 A18 - B18 + X33 + X35 + Y36 = -3

_C226: X35 + Y37 <= 2

_C227: - 2 A17 - B17 + X35 + Y37 = -2

_C228: X38 + Y37 <= 2

_C229: - 2 A16 - B16 + X38 + Y37 = -2

_C230: X38 + X39 + Y40 <= 3

_C231: - 2 A15 - B15 + X38 + X39 + Y40 = -3

_C232: X39 + X42 + Y41 <= 2

_C233: - 2 A11 - B11 + X39 + X42 + Y41 = -2

_C234: X43 + X44 + Y41 <= 2

_C235: - 2 A10 - B10 + X43 + X44 + Y41 = -2

_C236: X43 + X46 + Y45 <= 2

_C237: - 2 A9 - B9 + X43 + X46 + Y45 = -2

_C238: X47 + X48 + Y45 <= 2

_C239: - 2 A8 - B8 + X47 + X48 + Y45 = -2

_C240: X47 + X50 + Y49 <= 2

_C241: - 2 A53 - B53 + X47 + X50 + Y49 = -2

_C242: X51 + X52 + Y49 <= 2

_C243: - 2 A52 - B52 + X51 + X52 + Y49 = -2

_C244: X51 + X54 + Y53 <= 2

_C245: - 2 A49 - B49 + X51 + X54 + Y53 = -2

_C246: - 2 A48 - B48 - Y53 = -2

_C247: X54 + Y55 <= 2

_C248: - 2 A50 - B50 + X54 + Y55 = -2

_C249: X52 + Y55 <= 2

_C250: - 2 A51 - B51 + X52 + Y55 = -2

_C251: X46 + X50 + Y56 <= 2

_C252: - 2 A54 - B54 + X46 + X50 + Y56 = -2

_C253: - 2 A55 - B55 - Y56 = -2

_C254: X44 + X48 + Y57 <= 2

_C255: - 2 A7 - B7 + X44 + X48 + Y57 = -2

_C256: X17 + X6 + Y57 <= 2

_C257: - 2 A6 - B6 + X17 + X6 + Y57 = -2

_C258: X42 + Y58 <= 2

_C259: - 2 A12 - B12 + X42 + Y58 = -2

_C260: X59 + Y58 <= 2

_C261: - 2 A13 - B13 + X59 + Y58 = -2

_C262: X59 + 2 X76 + Y40 <= 3

_C263: - 2 A14 - B14 + X59 + 2 X76 + Y40 = -3

_C264: X60 + X61 + Y36 <= 3

_C265: - 2 A19 - B19 + X60 + X61 + Y36 = -3

_C266: X60 + X62 + Y63 <= 3

_C267: - 2 A20 - B20 + X60 + X62 + Y63 = -3

_C268: X62 + X65 + Y64 <= 2

_C269: - 2 A57 - B57 + X62 + X65 + Y64 = -2

_C270: - 2 A56 - B56 - Y64 = -2

_C271: X61 + X65 + Y66 <= 2

_C272: - 2 A58 - B58 + X61 + X65 + Y66 = -2

_C273: X29 + X67 + Y66 <= 2

_C274: - 2 A59 - B59 + X29 + X67 + Y66 = -2

_C275: X31 + X67 + Y68 <= 2

_C276: - 2 A60 - B60 + X31 + X67 + Y68 = -2

_C277: - 2 A61 - B61 - Y68 = -2

_C278: X69 + Y63 <= 3

_C279: - 2 A21 - B21 + X69 + Y63 = -3

_C280: X69 + Y34 <= 2

_C281: - 2 A22 - B22 + X69 + Y34 = -2

_C282: X27 + X70 + Y71 <= 2

_C283: - 2 A28 - B28 + X27 + X70 + Y71 = -2

_C284: X25 + X70 + Y72 <= 2

_C285: - 2 A107 - B107 + X25 + X70 + Y72 = -2

_C286: - 2 A106 - B106 - Y72 = -2

_C287: X21 + X73 + Y71 <= 2

_C288: - 2 A29 - B29 + X21 + X73 + Y71 = -2

_C289: X23 + X73 + Y74 <= 2

_C290: - 2 A110 - B110 + X23 + X73 + Y74 = -2

_C291: - 2 A111 - B111 - Y74 = -2

VARIABLES
0 <= A10 Integer
0 <= A106 Integer
0 <= A107 Integer
0 <= A108 Integer
0 <= A109 Integer
0 <= A11 Integer
0 <= A110 Integer
0 <= A111 Integer
0 <= A12 Integer
0 <= A13 Integer
0 <= A14 Integer
0 <= A15 Integer
0 <= A16 Integer
0 <= A17 Integer
0 <= A18 Integer
0 <= A19 Integer
0 <= A2 Integer
0 <= A20 Integer
0 <= A21 Integer
0 <= A22 Integer
0 <= A23 Integer
0 <= A24 Integer
0 <= A25 Integer
0 <= A26 Integer
0 <= A27 Integer
0 <= A28 Integer
0 <= A29 Integer
0 <= A3 Integer
0 <= A30 Integer
0 <= A31 Integer
0 <= A32 Integer
0 <= A33 Integer
0 <= A34 Integer
0 <= A35 Integer
0 <= A36 Integer
0 <= A37 Integer
0 <= A38 Integer
0 <= A39 Integer
0 <= A4 Integer
0 <= A40 Integer
0 <= A41 Integer
0 <= A48 Integer
0 <= A49 Integer
0 <= A5 Integer
0 <= A50 Integer
0 <= A51 Integer
0 <= A52 Integer
0 <= A53 Integer
0 <= A54 Integer
0 <= A55 Integer
0 <= A56 Integer
0 <= A57 Integer
0 <= A58 Integer
0 <= A59 Integer
0 <= A6 Integer
0 <= A60 Integer
0 <= A61 Integer
0 <= A7 Integer
0 <= A8 Integer
0 <= A9 Integer
0 <= B10 <= 1 Integer
0 <= B106 <= 1 Integer
0 <= B107 <= 1 Integer
0 <= B108 <= 1 Integer
0 <= B109 <= 1 Integer
0 <= B11 <= 1 Integer
0 <= B110 <= 1 Integer
0 <= B111 <= 1 Integer
0 <= B12 <= 1 Integer
0 <= B13 <= 1 Integer
0 <= B14 <= 1 Integer
0 <= B15 <= 1 Integer
0 <= B16 <= 1 Integer
0 <= B17 <= 1 Integer
0 <= B18 <= 1 Integer
0 <= B19 <= 1 Integer
0 <= B2 <= 1 Integer
0 <= B20 <= 1 Integer
0 <= B21 <= 1 Integer
0 <= B22 <= 1 Integer
0 <= B23 <= 1 Integer
0 <= B24 <= 1 Integer
0 <= B25 <= 1 Integer
0 <= B26 <= 1 Integer
0 <= B27 <= 1 Integer
0 <= B28 <= 1 Integer
0 <= B29 <= 1 Integer
0 <= B3 <= 1 Integer
0 <= B30 <= 1 Integer
0 <= B31 <= 1 Integer
0 <= B32 <= 1 Integer
0 <= B33 <= 1 Integer
0 <= B34 <= 1 Integer
0 <= B35 <= 1 Integer
0 <= B36 <= 1 Integer
0 <= B37 <= 1 Integer
0 <= B38 <= 1 Integer
0 <= B39 <= 1 Integer
0 <= B4 <= 1 Integer
0 <= B40 <= 1 Integer
0 <= B41 <= 1 Integer
0 <= B48 <= 1 Integer
0 <= B49 <= 1 Integer
0 <= B5 <= 1 Integer
0 <= B50 <= 1 Integer
0 <= B51 <= 1 Integer
0 <= B52 <= 1 Integer
0 <= B53 <= 1 Integer
0 <= B54 <= 1 Integer
0 <= B55 <= 1 Integer
0 <= B56 <= 1 Integer
0 <= B57 <= 1 Integer
0 <= B58 <= 1 Integer
0 <= B59 <= 1 Integer
0 <= B6 <= 1 Integer
0 <= B60 <= 1 Integer
0 <= B61 <= 1 Integer
0 <= B7 <= 1 Integer
0 <= B8 <= 1 Integer
0 <= B9 <= 1 Integer
0 <= T1 <= 1 Integer
0 <= T10 <= 1 Integer
0 <= T18 <= 1 Integer
0 <= T20 <= 1 Integer
0 <= T24 <= 1 Integer
0 <= T29 <= 1 Integer
0 <= T31 <= 1 Integer
0 <= T33 <= 1 Integer
0 <= T39 <= 1 Integer
0 <= T44 <= 1 Integer
0 <= T46 <= 1 Integer
0 <= T47 <= 1 Integer
0 <= T51 <= 1 Integer
0 <= T6 <= 1 Integer
0 <= T61 <= 1 Integer
0 <= T62 <= 1 Integer
0 <= T70 <= 1 Integer
0 <= T73 <= 1 Integer
0 <= T75 <= 1 Integer
0 <= T76 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X12 Integer
0 <= X14 Integer
0 <= X17 Integer
0 <= X18 Integer
0 <= X2 Integer
0 <= X20 Integer
0 <= X21 Integer
0 <= X23 Integer
0 <= X24 Integer
0 <= X25 Integer
0 <= X27 Integer
0 <= X28 Integer
0 <= X29 Integer
0 <= X31 Integer
0 <= X32 Integer
0 <= X33 Integer
0 <= X35 Integer
0 <= X38 Integer
0 <= X39 Integer
0 <= X4 Integer
0 <= X42 Integer
0 <= X43 Integer
0 <= X44 Integer
0 <= X46 Integer
0 <= X47 Integer
0 <= X48 Integer
0 <= X5 Integer
0 <= X50 Integer
0 <= X51 Integer
0 <= X52 Integer
0 <= X54 Integer
0 <= X59 Integer
0 <= X6 Integer
0 <= X60 Integer
0 <= X61 Integer
0 <= X62 Integer
0 <= X65 Integer
0 <= X67 Integer
0 <= X69 Integer
0 <= X70 Integer
0 <= X73 Integer
0 <= X75 Integer
0 <= X76 Integer
0 <= X8 Integer
0 <= X9 Integer
Y0 free Integer
Y11 free Integer
Y13 free Integer
Y15 free Integer
Y16 free Integer
Y19 free Integer
Y22 free Integer
Y26 free Integer
Y3 free Integer
Y30 free Integer
Y34 free Integer
Y36 free Integer
Y37 free Integer
Y40 free Integer
Y41 free Integer
Y45 free Integer
Y49 free Integer
Y53 free Integer
Y55 free Integer
Y56 free Integer
Y57 free Integer
Y58 free Integer
Y63 free Integer
Y64 free Integer
Y66 free Integer
Y68 free Integer
Y7 free Integer
Y71 free Integer
Y72 free Integer
Y74 free Integer
Z0 free Integer
Z11 free Integer
Z13 free Integer
Z15 free Integer
Z16 free Integer
Z19 free Integer
Z22 free Integer
Z26 free Integer
Z3 free Integer
Z30 free Integer
Z34 free Integer
Z36 free Integer
Z37 free Integer
Z40 free Integer
Z41 free Integer
Z45 free Integer
Z49 free Integer
Z53 free Integer
Z55 free Integer
Z56 free Integer
Z57 free Integer
Z58 free Integer
Z63 free Integer
Z64 free Integer
Z66 free Integer
Z68 free Integer
Z7 free Integer
Z71 free Integer
Z72 free Integer
Z74 free Integer

Optimal
[A10, A106, A107, A108, A109, A11, A110, A111, A12, A13, A14, A15, A16, A17, A18, A19, A2, A20, A21, A22, A23, A24, A25, A26, A27, A28, A29, A3, A30, A31, A32, A33, A34, A35, A36, A37, A38, A39, A4, A40, A41, A48, A49, A5, A50, A51, A52, A53, A54, A55, A56, A57, A58, A59, A6, A60, A61, A7, A8, A9, B10, B106, B107, B108, B109, B11, B110, B111, B12, B13, B14, B15, B16, B17, B18, B19, B2, B20, B21, B22, B23, B24, B25, B26, B27, B28, B29, B3, B30, B31, B32, B33, B34, B35, B36, B37, B38, B39, B4, B40, B41, B48, B49, B5, B50, B51, B52, B53, B54, B55, B56, B57, B58, B59, B6, B60, B61, B7, B8, B9, T1, T10, T18, T20, T24, T29, T31, T33, T39, T44, T46, T47, T51, T6, T61, T62, T70, T73, T75, T76, T8, X1, X10, X12, X14, X17, X18, X2, X20, X21, X23, X24, X25, X27, X28, X29, X31, X32, X33, X35, X38, X39, X4, X42, X43, X44, X46, X47, X48, X5, X50, X51, X52, X54, X59, X6, X60, X61, X62, X65, X67, X69, X70, X73, X75, X76, X8, X9, Y0, Y11, Y13, Y15, Y16, Y19, Y22, Y26, Y3, Y30, Y34, Y36, Y37, Y40, Y41, Y45, Y49, Y53, Y55, Y56, Y57, Y58, Y63, Y64, Y66, Y68, Y7, Y71, Y72, Y74, Z0, Z11, Z13, Z15, Z16, Z19, Z22, Z26, Z3, Z30, Z34, Z36, Z37, Z40, Z41, Z45, Z49, Z53, Z55, Z56, Z57, Z58, Z63, Z64, Z66, Z68, Z7, Z71, Z72, Z74]
3 32 1.0 SV
35 39 1.0 SV
37 38 1.0 R
39 40 2.0 R
5 6 1.0 R
4 31 1.0 SV
3 4 1.0 R
30 109 1.0 SV
29 30 1.0 R
109 110 1.0 R
27 108 1.0 SV
107 108 1.0 R
27 28 1.0 R
25 26 1.0 R
26 59 1.0 SV
25 60 1.0 SV
23 24 2.0 R
18 23 1.0 SV
17 18 2.0 R
15 16 2.0 R
11 15 1.0 SV
31 32 1.0 R
11 12 1.0 R
9 10 1.0 R
7 10 1.0 SV
9 54 1.0 SV
8 53 1.0 SV
7 8 1.0 R
33 34 1.0 R
53 54 1.0 R
49 52 0.0 SV
51 52 2.0 R
49 50 2.0 R
13 14 1.0 R
6 33 1.0 SV
19 20 2.0 R
19 58 1.0 SV
20 57 1.0 SV
57 58 1.0 R
59 60 1.0 R
21 22 3.0 R
28 107 1.0 SV
29 110 1.0 SV
38 38 1.0 SV
14 14 1.0 SV
5 34 1.0 SV
35 36 1.0 R
A10 = 2.0
A106 = 1.0
A107 = 2.0
A108 = 2.0
A109 = 2.0
A11 = 2.0
A110 = 2.0
A111 = 1.0
A12 = 2.0
A13 = 2.0
A14 = 3.0
A15 = 3.0
A16 = 2.0
A17 = 2.0
A18 = 3.0
A19 = 3.0
A2 = 1.0
A20 = 3.0
A21 = 3.0
A22 = 2.0
A23 = 2.0
A24 = 2.0
A25 = 2.0
A26 = 2.0
A27 = 2.0
A28 = 2.0
A29 = 2.0
A3 = 2.0
A30 = 2.0
A31 = 2.0
A32 = 2.0
A33 = 2.0
A34 = 2.0
A35 = 2.0
A36 = 2.0
A37 = 2.0
A38 = 3.0
A39 = 3.0
A4 = 2.0
A40 = 2.0
A41 = 1.0
A48 = 1.0
A49 = 2.0
A5 = 2.0
A50 = 2.0
A51 = 2.0
A52 = 2.0
A53 = 2.0
A54 = 2.0
A55 = 1.0
A56 = 1.0
A57 = 2.0
A58 = 2.0
A59 = 2.0
A6 = 2.0
A60 = 2.0
A61 = 1.0
A7 = 2.0
A8 = 2.0
A9 = 2.0
B10 = 0.0
B106 = 0.0
B107 = 0.0
B108 = 0.0
B109 = 0.0
B11 = 0.0
B110 = 0.0
B111 = 0.0
B12 = 0.0
B13 = 0.0
B14 = 0.0
B15 = 0.0
B16 = 0.0
B17 = 0.0
B18 = 0.0
B19 = 0.0
B2 = 0.0
B20 = 0.0
B21 = 0.0
B22 = 0.0
B23 = 0.0
B24 = 0.0
B25 = 0.0
B26 = 0.0
B27 = 0.0
B28 = 0.0
B29 = 0.0
B3 = 0.0
B30 = 0.0
B31 = 0.0
B32 = 0.0
B33 = 0.0
B34 = 0.0
B35 = 0.0
B36 = 0.0
B37 = 0.0
B38 = 0.0
B39 = 0.0
B4 = 0.0
B40 = 0.0
B41 = 0.0
B48 = 0.0
B49 = 0.0
B5 = 0.0
B50 = 0.0
B51 = 0.0
B52 = 0.0
B53 = 0.0
B54 = 0.0
B55 = 0.0
B56 = 0.0
B57 = 0.0
B58 = 0.0
B59 = 0.0
B6 = 0.0
B60 = 0.0
B61 = 0.0
B7 = 0.0
B8 = 0.0
B9 = 0.0
T1 = 1.0
T10 = 1.0
T18 = 1.0
T20 = 1.0
T24 = 1.0
T29 = 1.0
T31 = 1.0
T33 = 1.0
T39 = 1.0
T44 = 1.0
T46 = 1.0
T47 = 1.0
T51 = 0.0
T6 = 1.0
T61 = 1.0
T62 = 1.0
T70 = 1.0
T73 = 1.0
T75 = 1.0
T76 = 1.0
T8 = 1.0
X1 = 1.0
X10 = 1.0
X12 = 1.0
X14 = 2.0
X17 = 1.0
X18 = 1.0
X2 = 1.0
X20 = 1.0
X21 = 1.0
X23 = 1.0
X24 = 1.0
X25 = 1.0
X27 = 1.0
X28 = 1.0
X29 = 1.0
X31 = 1.0
X32 = 2.0
X33 = 1.0
X35 = 2.0
X38 = 2.0
X39 = 1.0
X4 = 1.0
X42 = 1.0
X43 = 1.0
X44 = 1.0
X46 = 1.0
X47 = 1.0
X48 = 1.0
X5 = 1.0
X50 = 1.0
X51 = 0.0
X52 = 2.0
X54 = 2.0
X59 = 1.0
X6 = 1.0
X60 = 2.0
X61 = 1.0
X62 = 1.0
X65 = 1.0
X67 = 1.0
X69 = 3.0
X70 = 1.0
X73 = 1.0
X75 = 1.0
X76 = 1.0
X8 = 1.0
X9 = 1.0
Y0 = 0.0
Y11 = 1.0
Y13 = 0.0
Y15 = 0.0
Y16 = 0.0
Y19 = 0.0
Y22 = 0.0
Y26 = 0.0
Y3 = 0.0
Y30 = 0.0
Y34 = -1.0
Y36 = 0.0
Y37 = 0.0
Y40 = 0.0
Y41 = 0.0
Y45 = 0.0
Y49 = 0.0
Y53 = 0.0
Y55 = 0.0
Y56 = 0.0
Y57 = 0.0
Y58 = 1.0
Y63 = 0.0
Y64 = 0.0
Y66 = 0.0
Y68 = 0.0
Y7 = 0.0
Y71 = 0.0
Y72 = 0.0
Y74 = 0.0
Z0 = 0.0
Z11 = 1.0
Z13 = 0.0
Z15 = 0.0
Z16 = 0.0
Z19 = 0.0
Z22 = 0.0
Z26 = 0.0
Z3 = 0.0
Z30 = 0.0
Z34 = 1.0
Z36 = 0.0
Z37 = 0.0
Z40 = 0.0
Z41 = 0.0
Z45 = 0.0
Z49 = 0.0
Z53 = 0.0
Z55 = 0.0
Z56 = 0.0
Z57 = 0.0
Z58 = 1.0
Z63 = 0.0
Z64 = 0.0
Z66 = 0.0
Z68 = 0.0
Z7 = 0.0
Z71 = 0.0
Z72 = 0.0
Z74 = 0.0
-680.0 Objective Answer
Siavash [(42, 43, 2, 'S'), (43, 44, 0, 'R'), (44, 45, 3, 'S'), (45, 46, 0, 'R'), (46, 47, 2, 'S')]
Y0 (42, 43, 2, 'S')
X1 (43, 44, 0, 'R')
Y2 (44, 45, 3, 'S')
X3 (45, 46, 0, 'R')
Y4 (46, 47, 2, 'S')
A42 A42
B42 B42
A43 A43
B43 B43
A44 A44
B44 B44
A45 A45
B45 B45
A46 A46
B46 B46
A47 A47
B47 B47
obj -2*X1 - 2*X3 - 2*Y0 - 2*Y2 - 2*Y4 + 14
Sv_sum 0
CN_tune 52*Z0 + 6*Z2 + 108*Z4
obj B42 + B43 + B44 + B45 + B46 + B47 - 20*X1 - 20*X3 - 20*Y0 - 20*Y2 - 20*Y4 + 520*Z0 + 60*Z2 + 1080*Z4 + 140
Problem:
MINIMIZE
1*B42 + 1*B43 + 1*B44 + 1*B45 + 1*B46 + 1*B47 + -20*X1 + -20*X3 + -20*Y0 + -20*Y2 + -20*Y4 + 520*Z0 + 60*Z2 + 1080*Z4 + 140
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: X3 >= 1

_C9: Y4 + Z4 >= 0

_C10: - Y4 + Z4 >= 0

_C11: Z4 <= 1

_C12: - 2 A42 - B42 - Y0 = -2

_C13: X1 + Y0 <= 2

_C14: - 2 A43 - B43 + X1 + Y0 = -2

_C15: X1 + Y2 <= 3

_C16: - 2 A44 - B44 + X1 + Y2 = -3

_C17: X3 + Y2 <= 3

_C18: - 2 A45 - B45 + X3 + Y2 = -3

_C19: X3 + Y4 <= 2

_C20: - 2 A46 - B46 + X3 + Y4 = -2

_C21: - 2 A47 - B47 - Y4 = -2

VARIABLES
0 <= A42 Integer
0 <= A43 Integer
0 <= A44 Integer
0 <= A45 Integer
0 <= A46 Integer
0 <= A47 Integer
0 <= B42 <= 1 Integer
0 <= B43 <= 1 Integer
0 <= B44 <= 1 Integer
0 <= B45 <= 1 Integer
0 <= B46 <= 1 Integer
0 <= B47 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
Y0 free Integer
Y2 free Integer
Y4 free Integer
Z0 free Integer
Z2 free Integer
Z4 free Integer

Optimal
[A42, A43, A44, A45, A46, A47, B42, B43, B44, B45, B46, B47, X1, X3, Y0, Y2, Y4, Z0, Z2, Z4]
43 44 2.0 R
45 46 2.0 R
A42 = 1.0
A43 = 2.0
A44 = 2.0
A45 = 2.0
A46 = 2.0
A47 = 1.0
B42 = 0.0
B43 = 0.0
B44 = 1.0
B45 = 1.0
B46 = 0.0
B47 = 0.0
X1 = 2.0
X3 = 2.0
Y0 = 0.0
Y2 = 0.0
Y4 = 0.0
Z0 = 0.0
Z2 = 0.0
Z4 = 0.0
62.0 Objective Answer
Siavash [(63, 62, 2, 'S'), (63, 64, 0, 'R'), (63, 65, 0, 'SV'), (65, 64, 2, 'S'), (64, 66, 0, 'SV'), (65, 66, 0, 'R'), (66, 67, 2, 'S'), (67, 68, 0, 'R'), (68, 74, 0, 'SV'), (68, 69, 3, 'S'), (73, 74, 0, 'R'), (74, 75, 2, 'S'), (73, 72, 2, 'S'), (71, 72, 0, 'R'), (70, 71, 4, 'S'), (70, 71, 0, 'SV'), (69, 70, 0, 'R'), (71, 71, 0, 'SV')]
Y0 (63, 62, 2, 'S')
X1 (63, 64, 0, 'R')
X2 (63, 65, 0, 'SV')
Y3 (65, 64, 2, 'S')
X4 (64, 66, 0, 'SV')
X5 (65, 66, 0, 'R')
Y6 (66, 67, 2, 'S')
X7 (67, 68, 0, 'R')
X8 (68, 74, 0, 'SV')
Y9 (68, 69, 3, 'S')
X10 (73, 74, 0, 'R')
Y11 (74, 75, 2, 'S')
Y12 (73, 72, 2, 'S')
X13 (71, 72, 0, 'R')
Y14 (70, 71, 4, 'S')
X15 (70, 71, 0, 'SV')
X16 (69, 70, 0, 'R')
X17 (71, 71, 0, 'SV')
A62 A62
B62 B62
A63 A63
B63 B63
A64 A64
B64 B64
A65 A65
B65 B65
A66 A66
B66 B66
A67 A67
B67 B67
A68 A68
B68 B68
A74 A74
B74 B74
A73 A73
B73 B73
A72 A72
B72 B72
A71 A71
B71 B71
A70 A70
B70 B70
A69 A69
B69 B69
A75 A75
B75 B75
obj -2*X1 - 2*X10 - 2*X13 - 2*X15 - 2*X16 - 2*X17 - 2*X2 - 2*X4 - 2*X5 - 2*X7 - 2*X8 - 2*Y0 - 2*Y11 - 2*Y12 - 2*Y14 - 2*Y3 - 2*Y6 - 2*Y9 + 34
Sv_sum T15 + T17 + T2 + T4 + T8
CN_tune 56*Z0 + 32*Z11 + 2*Z12 + 6*Z14 + 2*Z3 + 22*Z6 + 12*Z9
obj B62 + B63 + B64 + B65 + B66 + B67 + B68 + B69 + B70 + B71 + B72 + B73 + B74 + B75 - 10*T15 - 10*T17 - 10*T2 - 10*T4 - 10*T8 - 20*X1 - 20*X10 - 20*X13 - 20*X15 - 20*X16 - 20*X17 - 20*X2 - 20*X4 - 20*X5 - 20*X7 - 20*X8 - 20*Y0 - 20*Y11 - 20*Y12 - 20*Y14 - 20*Y3 - 20*Y6 - 20*Y9 + 560*Z0 + 320*Z11 + 20*Z12 + 60*Z14 + 20*Z3 + 220*Z6 + 120*Z9 + 340
Problem:
MINIMIZE
1*B62 + 1*B63 + 1*B64 + 1*B65 + 1*B66 + 1*B67 + 1*B68 + 1*B69 + 1*B70 + 1*B71 + 1*B72 + 1*B73 + 1*B74 + 1*B75 + -10*T15 + -10*T17 + -10*T2 + -10*T4 + -10*T8 + -20*X1 + -20*X10 + -20*X13 + -20*X15 + -20*X16 + -20*X17 + -20*X2 + -20*X4 + -20*X5 + -20*X7 + -20*X8 + -20*Y0 + -20*Y11 + -20*Y12 + -20*Y14 + -20*Y3 + -20*Y6 + -20*Y9 + 560*Z0 + 320*Z11 + 20*Z12 + 60*Z14 + 20*Z3 + 220*Z6 + 120*Z9 + 340
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: X7 >= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: Y9 + Z9 >= 0

_C23: - Y9 + Z9 >= 0

_C24: Z9 <= 1

_C25: X10 >= 1

_C26: Y11 + Z11 >= 0

_C27: - Y11 + Z11 >= 0

_C28: Z11 <= 1

_C29: Y12 + Z12 >= 0

_C30: - Y12 + Z12 >= 0

_C31: Z12 <= 1

_C32: X13 >= 1

_C33: Y14 + Z14 >= 0

_C34: - Y14 + Z14 >= 0

_C35: Z14 <= 1

_C36: - 10 T15 + X15 <= 0

_C37: - T15 + X15 >= 0

_C38: X15 >= 0

_C39: X16 >= 1

_C40: - 10 T17 + X17 <= 0

_C41: - T17 + X17 >= 0

_C42: X17 >= 0

_C43: - 2 A62 - B62 - Y0 = -2

_C44: X1 + X2 + Y0 <= 2

_C45: - 2 A63 - B63 + X1 + X2 + Y0 = -2

_C46: X1 + X4 + Y3 <= 2

_C47: - 2 A64 - B64 + X1 + X4 + Y3 = -2

_C48: X2 + X5 + Y3 <= 2

_C49: - 2 A65 - B65 + X2 + X5 + Y3 = -2

_C50: X4 + X5 + Y6 <= 2

_C51: - 2 A66 - B66 + X4 + X5 + Y6 = -2

_C52: X7 + Y6 <= 2

_C53: - 2 A67 - B67 + X7 + Y6 = -2

_C54: X7 + X8 + Y9 <= 3

_C55: - 2 A68 - B68 + X7 + X8 + Y9 = -3

_C56: X10 + X8 + Y11 <= 2

_C57: - 2 A74 - B74 + X10 + X8 + Y11 = -2

_C58: X10 + Y12 <= 2

_C59: - 2 A73 - B73 + X10 + Y12 = -2

_C60: X13 + Y12 <= 2

_C61: - 2 A72 - B72 + X13 + Y12 = -2

_C62: X13 + X15 + 2 X17 + Y14 <= 4

_C63: - 2 A71 - B71 + X13 + X15 + 2 X17 + Y14 = -4

_C64: X15 + X16 + Y14 <= 4

_C65: - 2 A70 - B70 + X15 + X16 + Y14 = -4

_C66: X16 + Y9 <= 3

_C67: - 2 A69 - B69 + X16 + Y9 = -3

_C68: - 2 A75 - B75 - Y11 = -2

VARIABLES
0 <= A62 Integer
0 <= A63 Integer
0 <= A64 Integer
0 <= A65 Integer
0 <= A66 Integer
0 <= A67 Integer
0 <= A68 Integer
0 <= A69 Integer
0 <= A70 Integer
0 <= A71 Integer
0 <= A72 Integer
0 <= A73 Integer
0 <= A74 Integer
0 <= A75 Integer
0 <= B62 <= 1 Integer
0 <= B63 <= 1 Integer
0 <= B64 <= 1 Integer
0 <= B65 <= 1 Integer
0 <= B66 <= 1 Integer
0 <= B67 <= 1 Integer
0 <= B68 <= 1 Integer
0 <= B69 <= 1 Integer
0 <= B70 <= 1 Integer
0 <= B71 <= 1 Integer
0 <= B72 <= 1 Integer
0 <= B73 <= 1 Integer
0 <= B74 <= 1 Integer
0 <= B75 <= 1 Integer
0 <= T15 <= 1 Integer
0 <= T17 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X10 Integer
0 <= X13 Integer
0 <= X15 Integer
0 <= X16 Integer
0 <= X17 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X7 Integer
0 <= X8 Integer
Y0 free Integer
Y11 free Integer
Y12 free Integer
Y14 free Integer
Y3 free Integer
Y6 free Integer
Y9 free Integer
Z0 free Integer
Z11 free Integer
Z12 free Integer
Z14 free Integer
Z3 free Integer
Z6 free Integer
Z9 free Integer

Optimal
[A62, A63, A64, A65, A66, A67, A68, A69, A70, A71, A72, A73, A74, A75, B62, B63, B64, B65, B66, B67, B68, B69, B70, B71, B72, B73, B74, B75, T15, T17, T2, T4, T8, X1, X10, X13, X15, X16, X17, X2, X4, X5, X7, X8, Y0, Y11, Y12, Y14, Y3, Y6, Y9, Z0, Z11, Z12, Z14, Z3, Z6, Z9]
63 64 1.0 R
73 74 1.0 R
71 72 1.0 R
70 71 1.0 SV
69 70 3.0 R
71 71 1.0 SV
63 65 1.0 SV
64 66 1.0 SV
65 66 1.0 R
67 68 2.0 R
68 74 1.0 SV
A62 = 1.0
A63 = 2.0
A64 = 2.0
A65 = 2.0
A66 = 2.0
A67 = 2.0
A68 = 3.0
A69 = 3.0
A70 = 4.0
A71 = 4.0
A72 = 2.0
A73 = 2.0
A74 = 2.0
A75 = 1.0
B62 = 0.0
B63 = 0.0
B64 = 0.0
B65 = 0.0
B66 = 0.0
B67 = 0.0
B68 = 0.0
B69 = 0.0
B70 = 0.0
B71 = 0.0
B72 = 0.0
B73 = 0.0
B74 = 0.0
B75 = 0.0
T15 = 1.0
T17 = 1.0
T2 = 1.0
T4 = 1.0
T8 = 1.0
X1 = 1.0
X10 = 1.0
X13 = 1.0
X15 = 1.0
X16 = 3.0
X17 = 1.0
X2 = 1.0
X4 = 1.0
X5 = 1.0
X7 = 2.0
X8 = 1.0
Y0 = 0.0
Y11 = 0.0
Y12 = 1.0
Y14 = 0.0
Y3 = 0.0
Y6 = 0.0
Y9 = 0.0
Z0 = 0.0
Z11 = 0.0
Z12 = 1.0
Z14 = 0.0
Z3 = 0.0
Z6 = 0.0
Z9 = 0.0
10.0 Objective Answer
Siavash [(76, 77, 2, 'S')]
Y0 (76, 77, 2, 'S')
A76 A76
B76 B76
A77 A77
B77 B77
obj -2*Y0 + 4
Sv_sum 0
CN_tune 192*Z0
obj B76 + B77 - 20*Y0 + 1920*Z0 + 40
Problem:
MINIMIZE
1*B76 + 1*B77 + -20*Y0 + 1920*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A76 - B76 - Y0 = -2

_C5: - 2 A77 - B77 - Y0 = -2

VARIABLES
0 <= A76 Integer
0 <= A77 Integer
0 <= B76 <= 1 Integer
0 <= B77 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A76, A77, B76, B77, Y0, Z0]
A76 = 1.0
A77 = 1.0
B76 = 0.0
B77 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(78, 79, 2, 'S'), (79, 80, 0, 'R'), (80, 81, 3, 'S'), (80, 84, 0, 'SV'), (81, 82, 0, 'R'), (83, 82, 2, 'S'), (83, 84, 0, 'R'), (84, 85, 2, 'S'), (81, 81, 0, 'SV')]
Y0 (78, 79, 2, 'S')
X1 (79, 80, 0, 'R')
Y2 (80, 81, 3, 'S')
X3 (80, 84, 0, 'SV')
X4 (81, 82, 0, 'R')
Y5 (83, 82, 2, 'S')
X6 (83, 84, 0, 'R')
Y7 (84, 85, 2, 'S')
X8 (81, 81, 0, 'SV')
A78 A78
B78 B78
A79 A79
B79 B79
A80 A80
B80 B80
A81 A81
B81 B81
A82 A82
B82 B82
A83 A83
B83 B83
A84 A84
B84 B84
A85 A85
B85 B85
obj -2*X1 - 2*X3 - 2*X4 - 2*X6 - 2*X8 - 2*Y0 - 2*Y2 - 2*Y5 - 2*Y7 + 18
Sv_sum T3 + T8
CN_tune 80*Z0 + 6*Z2 + 2*Z5 + 36*Z7
obj B78 + B79 + B80 + B81 + B82 + B83 + B84 + B85 - 10*T3 - 10*T8 - 20*X1 - 20*X3 - 20*X4 - 20*X6 - 20*X8 - 20*Y0 - 20*Y2 - 20*Y5 - 20*Y7 + 800*Z0 + 60*Z2 + 20*Z5 + 360*Z7 + 180
Problem:
MINIMIZE
1*B78 + 1*B79 + 1*B80 + 1*B81 + 1*B82 + 1*B83 + 1*B84 + 1*B85 + -10*T3 + -10*T8 + -20*X1 + -20*X3 + -20*X4 + -20*X6 + -20*X8 + -20*Y0 + -20*Y2 + -20*Y5 + -20*Y7 + 800*Z0 + 60*Z2 + 20*Z5 + 360*Z7 + 180
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: X6 >= 1

_C16: Y7 + Z7 >= 0

_C17: - Y7 + Z7 >= 0

_C18: Z7 <= 1

_C19: - 10 T8 + X8 <= 0

_C20: - T8 + X8 >= 0

_C21: X8 >= 0

_C22: - 2 A78 - B78 - Y0 = -2

_C23: X1 + Y0 <= 2

_C24: - 2 A79 - B79 + X1 + Y0 = -2

_C25: X1 + X3 + Y2 <= 3

_C26: - 2 A80 - B80 + X1 + X3 + Y2 = -3

_C27: X4 + 2 X8 + Y2 <= 3

_C28: - 2 A81 - B81 + X4 + 2 X8 + Y2 = -3

_C29: X4 + Y5 <= 2

_C30: - 2 A82 - B82 + X4 + Y5 = -2

_C31: X6 + Y5 <= 2

_C32: - 2 A83 - B83 + X6 + Y5 = -2

_C33: X3 + X6 + Y7 <= 2

_C34: - 2 A84 - B84 + X3 + X6 + Y7 = -2

_C35: - 2 A85 - B85 - Y7 = -2

VARIABLES
0 <= A78 Integer
0 <= A79 Integer
0 <= A80 Integer
0 <= A81 Integer
0 <= A82 Integer
0 <= A83 Integer
0 <= A84 Integer
0 <= A85 Integer
0 <= B78 <= 1 Integer
0 <= B79 <= 1 Integer
0 <= B80 <= 1 Integer
0 <= B81 <= 1 Integer
0 <= B82 <= 1 Integer
0 <= B83 <= 1 Integer
0 <= B84 <= 1 Integer
0 <= B85 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= T8 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
0 <= X6 Integer
0 <= X8 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Y7 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer
Z7 free Integer

Optimal
[A78, A79, A80, A81, A82, A83, A84, A85, B78, B79, B80, B81, B82, B83, B84, B85, T3, T8, X1, X3, X4, X6, X8, Y0, Y2, Y5, Y7, Z0, Z2, Z5, Z7]
79 80 2.0 R
80 84 1.0 SV
81 82 1.0 R
83 84 1.0 R
81 81 1.0 SV
A78 = 1.0
A79 = 2.0
A80 = 3.0
A81 = 3.0
A82 = 2.0
A83 = 2.0
A84 = 2.0
A85 = 1.0
B78 = 0.0
B79 = 0.0
B80 = 0.0
B81 = 0.0
B82 = 0.0
B83 = 0.0
B84 = 0.0
B85 = 0.0
T3 = 1.0
T8 = 1.0
X1 = 2.0
X3 = 1.0
X4 = 1.0
X6 = 1.0
X8 = 1.0
Y0 = 0.0
Y2 = 0.0
Y5 = 1.0
Y7 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 1.0
Z7 = 0.0
40.0 Objective Answer
Siavash [(86, 87, 2, 'S')]
Y0 (86, 87, 2, 'S')
A86 A86
B86 B86
A87 A87
B87 B87
obj -2*Y0 + 4
Sv_sum 0
CN_tune 168*Z0
obj B86 + B87 - 20*Y0 + 1680*Z0 + 40
Problem:
MINIMIZE
1*B86 + 1*B87 + -20*Y0 + 1680*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A86 - B86 - Y0 = -2

_C5: - 2 A87 - B87 - Y0 = -2

VARIABLES
0 <= A86 Integer
0 <= A87 Integer
0 <= B86 <= 1 Integer
0 <= B87 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A86, A87, B86, B87, Y0, Z0]
A86 = 1.0
A87 = 1.0
B86 = 0.0
B87 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(89, 88, 2, 'S'), (89, 90, 0, 'R'), (91, 90, 2, 'S'), (90, 92, 0, 'SV'), (91, 92, 0, 'R'), (92, 93, 2, 'S')]
Y0 (89, 88, 2, 'S')
X1 (89, 90, 0, 'R')
Y2 (91, 90, 2, 'S')
X3 (90, 92, 0, 'SV')
X4 (91, 92, 0, 'R')
Y5 (92, 93, 2, 'S')
A88 A88
B88 B88
A89 A89
B89 B89
A90 A90
B90 B90
A91 A91
B91 B91
A92 A92
B92 B92
A93 A93
B93 B93
obj -2*X1 - 2*X3 - 2*X4 - 2*Y0 - 2*Y2 - 2*Y5 + 12
Sv_sum T3
CN_tune 40*Z0 + 2*Z2 + 72*Z5
obj B88 + B89 + B90 + B91 + B92 + B93 - 10*T3 - 20*X1 - 20*X3 - 20*X4 - 20*Y0 - 20*Y2 - 20*Y5 + 400*Z0 + 20*Z2 + 720*Z5 + 120
Problem:
MINIMIZE
1*B88 + 1*B89 + 1*B90 + 1*B91 + 1*B92 + 1*B93 + -10*T3 + -20*X1 + -20*X3 + -20*X4 + -20*Y0 + -20*Y2 + -20*Y5 + 400*Z0 + 20*Z2 + 720*Z5 + 120
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: Y2 + Z2 >= 0

_C6: - Y2 + Z2 >= 0

_C7: Z2 <= 1

_C8: - 10 T3 + X3 <= 0

_C9: - T3 + X3 >= 0

_C10: X3 >= 0

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A88 - B88 - Y0 = -2

_C16: X1 + Y0 <= 2

_C17: - 2 A89 - B89 + X1 + Y0 = -2

_C18: X1 + X3 + Y2 <= 2

_C19: - 2 A90 - B90 + X1 + X3 + Y2 = -2

_C20: X4 + Y2 <= 2

_C21: - 2 A91 - B91 + X4 + Y2 = -2

_C22: X3 + X4 + Y5 <= 2

_C23: - 2 A92 - B92 + X3 + X4 + Y5 = -2

_C24: - 2 A93 - B93 - Y5 = -2

VARIABLES
0 <= A88 Integer
0 <= A89 Integer
0 <= A90 Integer
0 <= A91 Integer
0 <= A92 Integer
0 <= A93 Integer
0 <= B88 <= 1 Integer
0 <= B89 <= 1 Integer
0 <= B90 <= 1 Integer
0 <= B91 <= 1 Integer
0 <= B92 <= 1 Integer
0 <= B93 <= 1 Integer
0 <= T3 <= 1 Integer
0 <= X1 Integer
0 <= X3 Integer
0 <= X4 Integer
Y0 free Integer
Y2 free Integer
Y5 free Integer
Z0 free Integer
Z2 free Integer
Z5 free Integer

Optimal
[A88, A89, A90, A91, A92, A93, B88, B89, B90, B91, B92, B93, T3, X1, X3, X4, Y0, Y2, Y5, Z0, Z2, Z5]
89 90 2.0 R
90 92 0.0 SV
91 92 2.0 R
A88 = 1.0
A89 = 2.0
A90 = 2.0
A91 = 2.0
A92 = 2.0
A93 = 1.0
B88 = 0.0
B89 = 0.0
B90 = 0.0
B91 = 0.0
B92 = 0.0
B93 = 0.0
T3 = 0.0
X1 = 2.0
X3 = 0.0
X4 = 2.0
Y0 = 0.0
Y2 = 0.0
Y5 = 0.0
Z0 = 0.0
Z2 = 0.0
Z5 = 0.0
40.0 Objective Answer
Siavash [(94, 95, 2, 'S')]
Y0 (94, 95, 2, 'S')
A94 A94
B94 B94
A95 A95
B95 B95
obj -2*Y0 + 4
Sv_sum 0
CN_tune 168*Z0
obj B94 + B95 - 20*Y0 + 1680*Z0 + 40
Problem:
MINIMIZE
1*B94 + 1*B95 + -20*Y0 + 1680*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A94 - B94 - Y0 = -2

_C5: - 2 A95 - B95 - Y0 = -2

VARIABLES
0 <= A94 Integer
0 <= A95 Integer
0 <= B94 <= 1 Integer
0 <= B95 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A94, A95, B94, B95, Y0, Z0]
A94 = 1.0
A95 = 1.0
B94 = 0.0
B95 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(97, 96, 2, 'S'), (97, 98, 0, 'R'), (97, 99, 0, 'SV'), (99, 98, 2, 'S'), (98, 100, 0, 'SV'), (99, 100, 0, 'R'), (100, 101, 2, 'S'), (101, 102, 0, 'R'), (102, 103, 3, 'S')]
Y0 (97, 96, 2, 'S')
X1 (97, 98, 0, 'R')
X2 (97, 99, 0, 'SV')
Y3 (99, 98, 2, 'S')
X4 (98, 100, 0, 'SV')
X5 (99, 100, 0, 'R')
Y6 (100, 101, 2, 'S')
X7 (101, 102, 0, 'R')
Y8 (102, 103, 3, 'S')
A96 A96
B96 B96
A97 A97
B97 B97
A98 A98
B98 B98
A99 A99
B99 B99
A100 A100
B100 B100
A101 A101
B101 B101
A102 A102
B102 B102
A103 A103
B103 B103
obj -2*X1 - 2*X2 - 2*X4 - 2*X5 - 2*X7 - 2*Y0 - 2*Y3 - 2*Y6 - 2*Y8 + 18
Sv_sum T2 + T4
CN_tune 56*Z0 + 2*Z3 + 24*Z6 + 12*Z8
obj B100 + B101 + B102 + B103 + B96 + B97 + B98 + B99 - 10*T2 - 10*T4 - 20*X1 - 20*X2 - 20*X4 - 20*X5 - 20*X7 - 20*Y0 - 20*Y3 - 20*Y6 - 20*Y8 + 560*Z0 + 20*Z3 + 240*Z6 + 120*Z8 + 180
Problem:
MINIMIZE
1*B100 + 1*B101 + 1*B102 + 1*B103 + 1*B96 + 1*B97 + 1*B98 + 1*B99 + -10*T2 + -10*T4 + -20*X1 + -20*X2 + -20*X4 + -20*X5 + -20*X7 + -20*Y0 + -20*Y3 + -20*Y6 + -20*Y8 + 560*Z0 + 20*Z3 + 240*Z6 + 120*Z8 + 180
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: X1 >= 1

_C5: - 10 T2 + X2 <= 0

_C6: - T2 + X2 >= 0

_C7: X2 >= 0

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: - 10 T4 + X4 <= 0

_C12: - T4 + X4 >= 0

_C13: X4 >= 0

_C14: X5 >= 1

_C15: Y6 + Z6 >= 0

_C16: - Y6 + Z6 >= 0

_C17: Z6 <= 1

_C18: X7 >= 1

_C19: Y8 + Z8 >= 0

_C20: - Y8 + Z8 >= 0

_C21: Z8 <= 1

_C22: - 2 A96 - B96 - Y0 = -2

_C23: X1 + X2 + Y0 <= 2

_C24: - 2 A97 - B97 + X1 + X2 + Y0 = -2

_C25: X1 + X4 + Y3 <= 2

_C26: - 2 A98 - B98 + X1 + X4 + Y3 = -2

_C27: X2 + X5 + Y3 <= 2

_C28: - 2 A99 - B99 + X2 + X5 + Y3 = -2

_C29: X4 + X5 + Y6 <= 2

_C30: - 2 A100 - B100 + X4 + X5 + Y6 = -2

_C31: X7 + Y6 <= 2

_C32: - 2 A101 - B101 + X7 + Y6 = -2

_C33: X7 + Y8 <= 3

_C34: - 2 A102 - B102 + X7 + Y8 = -3

_C35: - 2 A103 - B103 - Y8 = -3

VARIABLES
0 <= A100 Integer
0 <= A101 Integer
0 <= A102 Integer
0 <= A103 Integer
0 <= A96 Integer
0 <= A97 Integer
0 <= A98 Integer
0 <= A99 Integer
0 <= B100 <= 1 Integer
0 <= B101 <= 1 Integer
0 <= B102 <= 1 Integer
0 <= B103 <= 1 Integer
0 <= B96 <= 1 Integer
0 <= B97 <= 1 Integer
0 <= B98 <= 1 Integer
0 <= B99 <= 1 Integer
0 <= T2 <= 1 Integer
0 <= T4 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
0 <= X5 Integer
0 <= X7 Integer
Y0 free Integer
Y3 free Integer
Y6 free Integer
Y8 free Integer
Z0 free Integer
Z3 free Integer
Z6 free Integer
Z8 free Integer

Optimal
[A100, A101, A102, A103, A96, A97, A98, A99, B100, B101, B102, B103, B96, B97, B98, B99, T2, T4, X1, X2, X4, X5, X7, Y0, Y3, Y6, Y8, Z0, Z3, Z6, Z8]
97 98 1.0 R
97 99 1.0 SV
98 100 1.0 SV
99 100 1.0 R
101 102 2.0 R
A100 = 2.0
A101 = 2.0
A102 = 2.0
A103 = 1.0
A96 = 1.0
A97 = 2.0
A98 = 2.0
A99 = 2.0
B100 = 0.0
B101 = 0.0
B102 = 1.0
B103 = 1.0
B96 = 0.0
B97 = 0.0
B98 = 0.0
B99 = 0.0
T2 = 1.0
T4 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
X5 = 1.0
X7 = 2.0
Y0 = 0.0
Y3 = 0.0
Y6 = 0.0
Y8 = 0.0
Z0 = 0.0
Z3 = 0.0
Z6 = 0.0
Z8 = 0.0
42.0 Objective Answer
Siavash [(104, 105, 2, 'S')]
Y0 (104, 105, 2, 'S')
A104 A104
B104 B104
A105 A105
B105 B105
obj -2*Y0 + 4
Sv_sum 0
CN_tune 138*Z0
obj B104 + B105 - 20*Y0 + 1380*Z0 + 40
Problem:
MINIMIZE
1*B104 + 1*B105 + -20*Y0 + 1380*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A104 - B104 - Y0 = -2

_C5: - 2 A105 - B105 - Y0 = -2

VARIABLES
0 <= A104 Integer
0 <= A105 Integer
0 <= B104 <= 1 Integer
0 <= B105 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A104, A105, B104, B105, Y0, Z0]
A104 = 1.0
A105 = 1.0
B104 = 0.0
B105 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(112, 113, 2, 'S')]
Y0 (112, 113, 2, 'S')
A112 A112
B112 B112
A113 A113
B113 B113
obj -2*Y0 + 4
Sv_sum 0
CN_tune 126*Z0
obj B112 + B113 - 20*Y0 + 1260*Z0 + 40
Problem:
MINIMIZE
1*B112 + 1*B113 + -20*Y0 + 1260*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A112 - B112 - Y0 = -2

_C5: - 2 A113 - B113 - Y0 = -2

VARIABLES
0 <= A112 Integer
0 <= A113 Integer
0 <= B112 <= 1 Integer
0 <= B113 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A112, A113, B112, B113, Y0, Z0]
A112 = 1.0
A113 = 1.0
B112 = 0.0
B113 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(114, 115, 2, 'S')]
Y0 (114, 115, 2, 'S')
A114 A114
B114 B114
A115 A115
B115 B115
obj -2*Y0 + 4
Sv_sum 0
CN_tune 114*Z0
obj B114 + B115 - 20*Y0 + 1140*Z0 + 40
Problem:
MINIMIZE
1*B114 + 1*B115 + -20*Y0 + 1140*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A114 - B114 - Y0 = -2

_C5: - 2 A115 - B115 - Y0 = -2

VARIABLES
0 <= A114 Integer
0 <= A115 Integer
0 <= B114 <= 1 Integer
0 <= B115 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A114, A115, B114, B115, Y0, Z0]
A114 = 1.0
A115 = 1.0
B114 = 0.0
B115 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(116, 117, 2, 'S'), (117, 120, 0, 'SV'), (117, 118, 0, 'R'), (120, 121, 2, 'S'), (119, 120, 0, 'R'), (118, 119, 1, 'S')]
Y0 (116, 117, 2, 'S')
X1 (117, 120, 0, 'SV')
X2 (117, 118, 0, 'R')
Y3 (120, 121, 2, 'S')
X4 (119, 120, 0, 'R')
Y5 (118, 119, 1, 'S')
A116 A116
B116 B116
A117 A117
B117 B117
A120 A120
B120 B120
A121 A121
B121 B121
A119 A119
B119 B119
A118 A118
B118 B118
obj -2*X1 - 2*X2 - 2*X4 - 2*Y0 - 2*Y3 - 2*Y5 + 10
Sv_sum T1
CN_tune 28*Z0 + 44*Z3 + 6*Z5
obj B116 + B117 + B118 + B119 + B120 + B121 - 10*T1 - 20*X1 - 20*X2 - 20*X4 - 20*Y0 - 20*Y3 - 20*Y5 + 280*Z0 + 440*Z3 + 60*Z5 + 100
Problem:
MINIMIZE
1*B116 + 1*B117 + 1*B118 + 1*B119 + 1*B120 + 1*B121 + -10*T1 + -20*X1 + -20*X2 + -20*X4 + -20*Y0 + -20*Y3 + -20*Y5 + 280*Z0 + 440*Z3 + 60*Z5 + 100
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 10 T1 + X1 <= 0

_C5: - T1 + X1 >= 0

_C6: X1 >= 0

_C7: X2 >= 1

_C8: Y3 + Z3 >= 0

_C9: - Y3 + Z3 >= 0

_C10: Z3 <= 1

_C11: X4 >= 1

_C12: Y5 + Z5 >= 0

_C13: - Y5 + Z5 >= 0

_C14: Z5 <= 1

_C15: - 2 A116 - B116 - Y0 = -2

_C16: X1 + X2 + Y0 <= 2

_C17: - 2 A117 - B117 + X1 + X2 + Y0 = -2

_C18: X1 + X4 + Y3 <= 2

_C19: - 2 A120 - B120 + X1 + X4 + Y3 = -2

_C20: - 2 A121 - B121 - Y3 = -2

_C21: X4 + Y5 <= 1

_C22: - 2 A119 - B119 + X4 + Y5 = -1

_C23: X2 + Y5 <= 1

_C24: - 2 A118 - B118 + X2 + Y5 = -1

VARIABLES
0 <= A116 Integer
0 <= A117 Integer
0 <= A118 Integer
0 <= A119 Integer
0 <= A120 Integer
0 <= A121 Integer
0 <= B116 <= 1 Integer
0 <= B117 <= 1 Integer
0 <= B118 <= 1 Integer
0 <= B119 <= 1 Integer
0 <= B120 <= 1 Integer
0 <= B121 <= 1 Integer
0 <= T1 <= 1 Integer
0 <= X1 Integer
0 <= X2 Integer
0 <= X4 Integer
Y0 free Integer
Y3 free Integer
Y5 free Integer
Z0 free Integer
Z3 free Integer
Z5 free Integer

Optimal
[A116, A117, A118, A119, A120, A121, B116, B117, B118, B119, B120, B121, T1, X1, X2, X4, Y0, Y3, Y5, Z0, Z3, Z5]
117 120 1.0 SV
117 118 1.0 R
119 120 1.0 R
A116 = 1.0
A117 = 2.0
A118 = 1.0
A119 = 1.0
A120 = 2.0
A121 = 1.0
B116 = 0.0
B117 = 0.0
B118 = 0.0
B119 = 0.0
B120 = 0.0
B121 = 0.0
T1 = 1.0
X1 = 1.0
X2 = 1.0
X4 = 1.0
Y0 = 0.0
Y3 = 0.0
Y5 = 0.0
Z0 = 0.0
Z3 = 0.0
Z5 = 0.0
30.0 Objective Answer
Siavash [(122, 123, 2, 'S')]
Y0 (122, 123, 2, 'S')
A122 A122
B122 B122
A123 A123
B123 B123
obj -2*Y0 + 4
Sv_sum 0
CN_tune 102*Z0
obj B122 + B123 - 20*Y0 + 1020*Z0 + 40
Problem:
MINIMIZE
1*B122 + 1*B123 + -20*Y0 + 1020*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A122 - B122 - Y0 = -2

_C5: - 2 A123 - B123 - Y0 = -2

VARIABLES
0 <= A122 Integer
0 <= A123 Integer
0 <= B122 <= 1 Integer
0 <= B123 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A122, A123, B122, B123, Y0, Z0]
A122 = 1.0
A123 = 1.0
B122 = 0.0
B123 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(124, 125, 2, 'S')]
Y0 (124, 125, 2, 'S')
A124 A124
B124 B124
A125 A125
B125 B125
obj -2*Y0 + 4
Sv_sum 0
CN_tune 72*Z0
obj B124 + B125 - 20*Y0 + 720*Z0 + 40
Problem:
MINIMIZE
1*B124 + 1*B125 + -20*Y0 + 720*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A124 - B124 - Y0 = -2

_C5: - 2 A125 - B125 - Y0 = -2

VARIABLES
0 <= A124 Integer
0 <= A125 Integer
0 <= B124 <= 1 Integer
0 <= B125 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A124, A125, B124, B125, Y0, Z0]
A124 = 1.0
A125 = 1.0
B124 = 0.0
B125 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(126, 127, 2, 'S')]
Y0 (126, 127, 2, 'S')
A126 A126
B126 B126
A127 A127
B127 B127
obj -2*Y0 + 4
Sv_sum 0
CN_tune 78*Z0
obj B126 + B127 - 20*Y0 + 780*Z0 + 40
Problem:
MINIMIZE
1*B126 + 1*B127 + -20*Y0 + 780*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A126 - B126 - Y0 = -2

_C5: - 2 A127 - B127 - Y0 = -2

VARIABLES
0 <= A126 Integer
0 <= A127 Integer
0 <= B126 <= 1 Integer
0 <= B127 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A126, A127, B126, B127, Y0, Z0]
A126 = 1.0
A127 = 1.0
B126 = 0.0
B127 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(128, 129, 2, 'S')]
Y0 (128, 129, 2, 'S')
A128 A128
B128 B128
A129 A129
B129 B129
obj -2*Y0 + 4
Sv_sum 0
CN_tune 60*Z0
obj B128 + B129 - 20*Y0 + 600*Z0 + 40
Problem:
MINIMIZE
1*B128 + 1*B129 + -20*Y0 + 600*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A128 - B128 - Y0 = -2

_C5: - 2 A129 - B129 - Y0 = -2

VARIABLES
0 <= A128 Integer
0 <= A129 Integer
0 <= B128 <= 1 Integer
0 <= B129 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A128, A129, B128, B129, Y0, Z0]
A128 = 1.0
A129 = 1.0
B128 = 0.0
B129 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(130, 131, 2, 'S')]
Y0 (130, 131, 2, 'S')
A130 A130
B130 B130
A131 A131
B131 B131
obj -2*Y0 + 4
Sv_sum 0
CN_tune 66*Z0
obj B130 + B131 - 20*Y0 + 660*Z0 + 40
Problem:
MINIMIZE
1*B130 + 1*B131 + -20*Y0 + 660*Z0 + 40
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A130 - B130 - Y0 = -2

_C5: - 2 A131 - B131 - Y0 = -2

VARIABLES
0 <= A130 Integer
0 <= A131 Integer
0 <= B130 <= 1 Integer
0 <= B131 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A130, A131, B130, B131, Y0, Z0]
A130 = 1.0
A131 = 1.0
B130 = 0.0
B131 = 0.0
Y0 = 0.0
Z0 = 0.0
40.0 Objective Answer
Siavash [(132, 133, 1, 'S')]
Y0 (132, 133, 1, 'S')
A132 A132
B132 B132
A133 A133
B133 B133
obj -2*Y0 + 2
Sv_sum 0
CN_tune 192*Z0
obj B132 + B133 - 20*Y0 + 1920*Z0 + 20
Problem:
MINIMIZE
1*B132 + 1*B133 + -20*Y0 + 1920*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A132 - B132 - Y0 = -1

_C5: - 2 A133 - B133 - Y0 = -1

VARIABLES
0 <= A132 Integer
0 <= A133 Integer
0 <= B132 <= 1 Integer
0 <= B133 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A132, A133, B132, B133, Y0, Z0]
A132 = 0.0
A133 = 0.0
B132 = 1.0
B133 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
Siavash [(134, 135, 1, 'S')]
Y0 (134, 135, 1, 'S')
A134 A134
B134 B134
A135 A135
B135 B135
obj -2*Y0 + 2
Sv_sum 0
CN_tune 72*Z0
obj B134 + B135 - 20*Y0 + 720*Z0 + 20
Problem:
MINIMIZE
1*B134 + 1*B135 + -20*Y0 + 720*Z0 + 20
SUBJECT TO
_C1: Y0 + Z0 >= 0

_C2: - Y0 + Z0 >= 0

_C3: Z0 <= 1

_C4: - 2 A134 - B134 - Y0 = -1

_C5: - 2 A135 - B135 - Y0 = -1

VARIABLES
0 <= A134 Integer
0 <= A135 Integer
0 <= B134 <= 1 Integer
0 <= B135 <= 1 Integer
Y0 free Integer
Z0 free Integer

Optimal
[A134, A135, B134, B135, Y0, Z0]
A134 = 0.0
A135 = 0.0
B134 = 1.0
B135 = 1.0
Y0 = 0.0
Z0 = 0.0
22.0 Objective Answer
[0, 1]
[(0, 1, 2, 'S')]
Component [0, 1]
Component edges [(0, 1, 2, 'S')]
ODD vertices []
TOUR
[0, 1]
paths_score 0 [[0, 1], [1, 0]]
paths_score 0 [[1, 0], [0, 1]]
all edges with dummy:  [(0, 1, 2, 'S')]
0 1 0 2 H [1]
1 1 248943333 2 T [0]
Answer [0, 1, 0]
[2, 3, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 5, 4, 31, 30, 109, 108, 27, 26, 25, 24, 23, 18, 17, 16, 15, 11, 10, 9, 8, 53, 52, 51, 50, 49, 48, 54, 55, 7, 6, 12, 13, 14, 19, 20, 57, 56, 58, 59, 60, 61, 21, 22, 28, 107, 106, 29, 110, 111]
[(3, 2, 2, 'S'), (3, 32, 1, 'SV'), (3, 4, 1, 'R'), (33, 32, 2, 'S'), (31, 32, 1, 'R'), (33, 34, 1, 'R'), (6, 33, 1, 'SV'), (35, 34, 2, 'S'), (5, 34, 1, 'SV'), (35, 36, 1, 'R'), (35, 39, 1, 'SV'), (36, 37, 1, 'S'), (37, 38, 1, 'R'), (38, 39, 3, 'S'), (39, 40, 2, 'R'), (40, 41, 2, 'S'), (5, 4, 2, 'S'), (5, 6, 1, 'R'), (4, 31, 1, 'SV'), (31, 30, 2, 'S'), (30, 109, 1, 'SV'), (29, 30, 1, 'R'), (109, 108, 2, 'S'), (109, 110, 1, 'R'), (27, 108, 1, 'SV'), (107, 108, 1, 'R'), (27, 26, 2, 'S'), (27, 28, 1, 'R'), (25, 26, 1, 'R'), (26, 59, 1, 'SV'), (25, 24, 2, 'S'), (25, 60, 1, 'SV'), (23, 24, 2, 'R'), (18, 23, 1, 'SV'), (23, 22, 3, 'S'), (17, 18, 2, 'R'), (19, 18, 3, 'S'), (16, 17, 2, 'S'), (15, 16, 2, 'R'), (11, 15, 1, 'SV'), (14, 15, 3, 'S'), (11, 10, 2, 'S'), (11, 12, 1, 'R'), (9, 10, 1, 'R'), (7, 10, 1, 'SV'), (9, 8, 2, 'S'), (9, 54, 1, 'SV'), (8, 53, 1, 'SV'), (7, 8, 1, 'R'), (53, 52, 2, 'S'), (53, 54, 1, 'R'), (51, 52, 2, 'R'), (51, 50, 2, 'S'), (49, 50, 2, 'R'), (49, 48, 2, 'S'), (54, 55, 2, 'S'), (7, 6, 2, 'S'), (12, 13, 1, 'S'), (13, 14, 1, 'R'), (19, 20, 2, 'R'), (19, 58, 1, 'SV'), (20, 57, 1, 'SV'), (20, 21, 3, 'S'), (57, 56, 2, 'S'), (57, 58, 1, 'R'), (59, 58, 2, 'S'), (59, 60, 1, 'R'), (60, 61, 2, 'S'), (21, 22, 3, 'R'), (28, 107, 1, 'SV'), (29, 28, 2, 'S'), (107, 106, 2, 'S'), (29, 110, 1, 'SV'), (110, 111, 2, 'S'), (38, 38, 1, 'SV'), (14, 14, 1, 'SV')]
Component [2, 3, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 5, 4, 31, 30, 109, 108, 27, 26, 25, 24, 23, 18, 17, 16, 15, 11, 10, 9, 8, 53, 52, 51, 50, 49, 48, 54, 55, 7, 6, 12, 13, 14, 19, 20, 57, 56, 58, 59, 60, 61, 21, 22, 28, 107, 106, 29, 110, 111]
Component edges [(3, 2, 2, 'S'), (3, 32, 1, 'SV'), (3, 4, 1, 'R'), (33, 32, 2, 'S'), (31, 32, 1, 'R'), (33, 34, 1, 'R'), (6, 33, 1, 'SV'), (35, 34, 2, 'S'), (5, 34, 1, 'SV'), (35, 36, 1, 'R'), (35, 39, 1, 'SV'), (36, 37, 1, 'S'), (37, 38, 1, 'R'), (38, 39, 3, 'S'), (39, 40, 2, 'R'), (40, 41, 2, 'S'), (5, 4, 2, 'S'), (5, 6, 1, 'R'), (4, 31, 1, 'SV'), (31, 30, 2, 'S'), (30, 109, 1, 'SV'), (29, 30, 1, 'R'), (109, 108, 2, 'S'), (109, 110, 1, 'R'), (27, 108, 1, 'SV'), (107, 108, 1, 'R'), (27, 26, 2, 'S'), (27, 28, 1, 'R'), (25, 26, 1, 'R'), (26, 59, 1, 'SV'), (25, 24, 2, 'S'), (25, 60, 1, 'SV'), (23, 24, 2, 'R'), (18, 23, 1, 'SV'), (23, 22, 3, 'S'), (17, 18, 2, 'R'), (19, 18, 3, 'S'), (16, 17, 2, 'S'), (15, 16, 2, 'R'), (11, 15, 1, 'SV'), (14, 15, 3, 'S'), (11, 10, 2, 'S'), (11, 12, 1, 'R'), (9, 10, 1, 'R'), (7, 10, 1, 'SV'), (9, 8, 2, 'S'), (9, 54, 1, 'SV'), (8, 53, 1, 'SV'), (7, 8, 1, 'R'), (53, 52, 2, 'S'), (53, 54, 1, 'R'), (51, 52, 2, 'R'), (51, 50, 2, 'S'), (49, 50, 2, 'R'), (49, 48, 2, 'S'), (54, 55, 2, 'S'), (7, 6, 2, 'S'), (12, 13, 1, 'S'), (13, 14, 1, 'R'), (19, 20, 2, 'R'), (19, 58, 1, 'SV'), (20, 57, 1, 'SV'), (20, 21, 3, 'S'), (57, 56, 2, 'S'), (57, 58, 1, 'R'), (59, 58, 2, 'S'), (59, 60, 1, 'R'), (60, 61, 2, 'S'), (21, 22, 3, 'R'), (28, 107, 1, 'SV'), (29, 28, 2, 'S'), (107, 106, 2, 'S'), (29, 110, 1, 'SV'), (110, 111, 2, 'S'), (38, 38, 1, 'SV'), (14, 14, 1, 'SV')]
ODD vertices []
TOUR
[2, 41, 48, 55, 56, 61, 106, 111]
paths_score 20 [[2, 3, 4, 5, 6, 7, 8, 9, 54, 55], [55, 54, 53, 52, 51, 50, 49, 48], [48, 49, 50, 51, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 39, 38, 38, 39, 35, 34, 5, 4, 31, 30, 109, 108, 107, 106], [106, 107, 28, 29, 110, 111], [111, 110, 109, 108, 27, 26, 59, 58, 57, 56], [56, 57, 20, 21, 22, 23, 24, 25, 60, 61], [61, 60, 59, 58, 19, 18, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 14, 15, 11, 10, 7, 6, 33, 32, 3, 2]]
paths_score 20 [[41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 53, 52, 51, 50, 49, 48], [48, 49, 50, 51, 52, 53, 54, 55], [55, 54, 9, 8, 7, 6, 5, 4, 3, 2], [2, 3, 32, 33, 6, 7, 10, 11, 15, 14, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 60, 61], [61, 60, 59, 58, 57, 56], [56, 57, 20, 21, 22, 23, 18, 19, 58, 59, 26, 27, 108, 109, 110, 111], [111, 110, 29, 28, 107, 106], [106, 107, 108, 109, 30, 31, 4, 5, 34, 35, 39, 38, 38, 39, 40, 41]]
paths_score 40 [[48, 49, 50, 51, 52, 53, 54, 55], [55, 54, 9, 8, 7, 6, 5, 4, 3, 2], [2, 3, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 39, 38, 38, 39, 35, 34, 5, 4, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 7, 6, 33, 32, 31, 30, 109, 108, 107, 106], [106, 107, 28, 29, 110, 111], [111, 110, 109, 108, 27, 26, 59, 58, 57, 56], [56, 57, 20, 21, 22, 23, 24, 25, 60, 61], [61, 60, 59, 58, 19, 18, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 14, 15, 11, 10, 9, 8, 53, 52, 51, 50, 49, 48]]
paths_score 20 [[55, 54, 53, 52, 51, 50, 49, 48], [48, 49, 50, 51, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 39, 38, 38, 39, 35, 34, 5, 4, 3, 2], [2, 3, 32, 33, 6, 7, 10, 11, 15, 14, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 60, 61], [61, 60, 59, 58, 57, 56], [56, 57, 20, 21, 22, 23, 18, 19, 58, 59, 26, 27, 108, 109, 110, 111], [111, 110, 29, 28, 107, 106], [106, 107, 108, 109, 30, 31, 4, 5, 6, 7, 8, 9, 54, 55]]
paths_score 40 [[56, 57, 58, 59, 60, 61], [61, 60, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 53, 52, 51, 50, 49, 48], [48, 49, 50, 51, 52, 53, 54, 55], [55, 54, 9, 8, 7, 6, 5, 4, 3, 2], [2, 3, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 39, 38, 38, 39, 35, 34, 5, 4, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 14, 15, 11, 10, 7, 6, 33, 32, 31, 30, 109, 108, 107, 106], [106, 107, 28, 29, 110, 111], [111, 110, 109, 108, 27, 26, 59, 58, 19, 18, 23, 22, 21, 20, 57, 56]]
paths_score 40 [[61, 60, 59, 58, 57, 56], [56, 57, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 39, 38, 38, 39, 35, 34, 5, 4, 3, 2], [2, 3, 32, 33, 6, 7, 8, 9, 54, 55], [55, 54, 53, 52, 51, 50, 49, 48], [48, 49, 50, 51, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 18, 19, 58, 59, 26, 27, 108, 109, 110, 111], [111, 110, 29, 28, 107, 106], [106, 107, 108, 109, 30, 31, 4, 5, 6, 7, 10, 11, 15, 14, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 60, 61]]
paths_score 40 [[106, 107, 108, 109, 110, 111], [111, 110, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 53, 52, 51, 50, 49, 48], [48, 49, 50, 51, 52, 53, 54, 55], [55, 54, 9, 8, 7, 6, 5, 4, 3, 2], [2, 3, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 39, 38, 38, 39, 35, 34, 5, 4, 31, 30, 109, 108, 27, 26, 59, 58, 57, 56], [56, 57, 20, 21, 22, 23, 24, 25, 60, 61], [61, 60, 59, 58, 19, 18, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 14, 15, 11, 10, 7, 6, 33, 32, 31, 30, 29, 28, 107, 106]]
paths_score 40 [[111, 110, 109, 108, 107, 106], [106, 107, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 39, 38, 38, 39, 35, 34, 5, 4, 3, 2], [2, 3, 32, 33, 6, 7, 8, 9, 54, 55], [55, 54, 53, 52, 51, 50, 49, 48], [48, 49, 50, 51, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 108, 109, 30, 31, 4, 5, 6, 7, 10, 11, 15, 14, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 60, 61], [61, 60, 59, 58, 57, 56], [56, 57, 20, 21, 22, 23, 18, 19, 58, 59, 26, 27, 28, 29, 110, 111]]
all edges with dummy:  [(3, 2, 2, 'S'), (3, 32, 1, 'SV'), (3, 4, 1, 'R'), (33, 32, 2, 'S'), (31, 32, 1, 'R'), (33, 34, 1, 'R'), (6, 33, 1, 'SV'), (35, 34, 2, 'S'), (5, 34, 1, 'SV'), (35, 36, 1, 'R'), (35, 39, 1, 'SV'), (36, 37, 1, 'S'), (37, 38, 1, 'R'), (38, 39, 3, 'S'), (39, 40, 2, 'R'), (40, 41, 2, 'S'), (5, 4, 2, 'S'), (5, 6, 1, 'R'), (4, 31, 1, 'SV'), (31, 30, 2, 'S'), (30, 109, 1, 'SV'), (29, 30, 1, 'R'), (109, 108, 2, 'S'), (109, 110, 1, 'R'), (27, 108, 1, 'SV'), (107, 108, 1, 'R'), (27, 26, 2, 'S'), (27, 28, 1, 'R'), (25, 26, 1, 'R'), (26, 59, 1, 'SV'), (25, 24, 2, 'S'), (25, 60, 1, 'SV'), (23, 24, 2, 'R'), (18, 23, 1, 'SV'), (23, 22, 3, 'S'), (17, 18, 2, 'R'), (19, 18, 3, 'S'), (16, 17, 2, 'S'), (15, 16, 2, 'R'), (11, 15, 1, 'SV'), (14, 15, 3, 'S'), (11, 10, 2, 'S'), (11, 12, 1, 'R'), (9, 10, 1, 'R'), (7, 10, 1, 'SV'), (9, 8, 2, 'S'), (9, 54, 1, 'SV'), (8, 53, 1, 'SV'), (7, 8, 1, 'R'), (53, 52, 2, 'S'), (53, 54, 1, 'R'), (51, 52, 2, 'R'), (51, 50, 2, 'S'), (49, 50, 2, 'R'), (49, 48, 2, 'S'), (54, 55, 2, 'S'), (7, 6, 2, 'S'), (12, 13, 1, 'S'), (13, 14, 1, 'R'), (19, 20, 2, 'R'), (19, 58, 1, 'SV'), (20, 57, 1, 'SV'), (20, 21, 3, 'S'), (57, 56, 2, 'S'), (57, 58, 1, 'R'), (59, 58, 2, 'S'), (59, 60, 1, 'R'), (60, 61, 2, 'S'), (21, 22, 3, 'R'), (28, 107, 1, 'SV'), (29, 28, 2, 'S'), (107, 106, 2, 'S'), (29, 110, 1, 'SV'), (110, 111, 2, 'S'), (38, 38, 1, 'SV'), (14, 14, 1, 'SV')]
2 2 15925.0 2 H [3]
3 2 24195157.0 2 T [32, 2, 4]
32 2 187331705.5 2 H [33, 3, 31]
33 2 193132241.25 2 T [32, 34, 6]
34 2 193132242.25 2 H [33, 35, 5]
35 2 207352189.0 2 T [34, 36, 39]
36 2 207352190.0 2 H [35, 37]
37 2 207425734.0 2 T [36, 38]
38 2 207425735.0 3 H [37, 38, 39]
39 2 212252125.0 3 T [40, 35, 38]
40 2 212271432.5 2 H [41, 39]
41 2 242181356.0 2 T [40]
5 2 28111897.5 2 T [34, 4, 6]
4 2 24195158.0 2 H [3, 5, 31]
31 2 187331704.5 2 T [32, 4, 30]
30 2 186802389.5 2 H [109, 29, 31]
109 14 93391381.5 2 T [108, 110, 30]
108 14 84105641.5 2 H [27, 107, 109]
27 2 181051616.0 2 T [108, 26, 28]
26 2 180861030.0 2 H [25, 27, 59]
25 2 180861029.0 2 T [24, 26, 60]
24 2 175637756.0 2 H [25, 23]
23 2 175637755.0 2 T [24, 18, 22]
18 2 168869481.0 3 H [17, 19, 23]
17 2 168865806.5 2 T [16, 18]
16 2 164427138.0 2 H [17, 15]
15 2 164424615.0 3 T [16, 11, 14]
11 2 160224559.0 2 T [10, 12, 15]
10 2 36675515.25 2 H [9, 11, 7]
9 2 36675514.25 2 T [8, 10, 54]
8 2 32132123.75 2 H [9, 53, 7]
53 4 101745254.0 2 T [8, 52, 54]
52 4 65611038.0 2 H [51, 53]
51 4 65611037.0 2 T [50, 52]
50 4 60297382.0 2 H [49, 51]
49 4 60297381.0 2 T [48, 50]
48 4 0.0 2 H [49]
54 4 101745255.0 2 H [9, 53, 55]
55 4 190202564.0 2 T [54]
7 2 32132122.75 2 T [8, 10, 6]
6 2 28111898.5 2 H [33, 5, 7]
12 2 160224560.0 2 H [11, 13]
13 2 160314259.0 2 T [12, 14]
14 2 160314260.0 3 H [13, 14, 15]
19 2 171280162.0 3 T [18, 20, 58]
20 2 171280163.0 3 H [57, 19, 21]
57 5 141708037.0 2 T [56, 58, 20]
56 5 0.0 2 H [57]
58 5 141708038.0 2 H [19, 57, 59]
59 5 145593952.5 2 T [58, 26, 60]
60 5 145593953.5 2 H [25, 59, 61]
61 5 181472714.0 2 T [60]
21 2 175561065.0 3 T [20, 22]
22 2 175561066.0 2 H [21, 23]
28 2 181051617.0 2 H [107, 27, 29]
107 14 84105640.5 2 T [106, 108, 28]
106 14 0.0 2 H [107]
29 2 186802388.5 2 T [110, 28, 30]
110 14 93391382.5 2 H [29, 109, 111]
111 14 106873282.0 2 T [110]
Answer [2, 3, 4, 5, 6, 7, 8, 9, 54, 55, 54, 53, 52, 51, 50, 49, 48, 49, 50, 51, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 40, 39, 38, 38, 39, 35, 34, 5, 4, 31, 30, 109, 108, 107, 106, 107, 28, 29, 110, 111, 110, 109, 108, 27, 26, 59, 58, 57, 56, 57, 20, 21, 22, 23, 24, 25, 60, 61, 60, 59, 58, 19, 18, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 14, 15, 11, 10, 7, 6, 33, 32, 3, 2]
[42, 43, 44, 45, 46, 47]
[(42, 43, 2, 'S'), (43, 44, 2, 'R'), (44, 45, 3, 'S'), (45, 46, 2, 'R'), (46, 47, 2, 'S')]
Component [42, 43, 44, 45, 46, 47]
Component edges [(42, 43, 2, 'S'), (43, 44, 2, 'R'), (44, 45, 3, 'S'), (45, 46, 2, 'R'), (46, 47, 2, 'S')]
ODD vertices [44, 45]
TOUR
[42, 47]
paths_score 0 [[42, 43, 44, 45, 46, 47], [47, 46, 45, 44, 45, 44, 43, 42]]
paths_score 0 [[47, 46, 45, 44, 43, 42], [42, 43, 44, 45, 44, 45, 46, 47]]
all edges with dummy:  [(42, 43, 2, 'S'), (43, 44, 2, 'R'), (44, 45, 3, 'S'), (45, 46, 2, 'R'), (46, 47, 2, 'S'), (44, 45, 1, 'D')]
42 3 12920 2 H [43]
43 3 63956939.0 2 T [42, 44]
44 3 63956940.0 3 H [43, 45]
45 3 65089720.0 3 T [44, 46]
46 3 65089721 2 H [45, 47]
47 3 198230595 2 T [46]
Answer [42, 43, 44, 45, 46, 47, 46, 45, 44, 45, 44, 43, 42]
[62, 63, 64, 65, 66, 67, 68, 74, 73, 72, 71, 70, 69, 75]
[(63, 62, 2, 'S'), (63, 64, 1, 'R'), (63, 65, 1, 'SV'), (65, 64, 2, 'S'), (64, 66, 1, 'SV'), (65, 66, 1, 'R'), (66, 67, 2, 'S'), (67, 68, 2, 'R'), (68, 74, 1, 'SV'), (68, 69, 3, 'S'), (73, 74, 1, 'R'), (74, 75, 2, 'S'), (73, 72, 1, 'S'), (71, 72, 1, 'R'), (70, 71, 1, 'SV'), (70, 71, 4, 'S'), (69, 70, 3, 'R'), (71, 71, 1, 'SV')]
Component [62, 63, 64, 65, 66, 67, 68, 74, 73, 72, 71, 70, 69, 75]
Component edges [(63, 62, 2, 'S'), (63, 64, 1, 'R'), (63, 65, 1, 'SV'), (65, 64, 2, 'S'), (64, 66, 1, 'SV'), (65, 66, 1, 'R'), (66, 67, 2, 'S'), (67, 68, 2, 'R'), (68, 74, 1, 'SV'), (68, 69, 3, 'S'), (73, 74, 1, 'R'), (74, 75, 2, 'S'), (73, 72, 1, 'S'), (71, 72, 1, 'R'), (70, 71, 1, 'SV'), (70, 71, 4, 'S'), (69, 70, 3, 'R'), (71, 71, 1, 'SV')]
ODD vertices []
TOUR
[62, 75]
paths_score 0 [[62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 68, 69, 70, 71, 71, 70, 71, 70, 69, 68, 67, 66, 64, 65, 63, 62]]
paths_score 0 [[75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62], [62, 63, 65, 64, 66, 67, 68, 69, 70, 71, 71, 70, 71, 70, 69, 68, 74, 75]]
all edges with dummy:  [(63, 62, 2, 'S'), (63, 64, 1, 'R'), (63, 65, 1, 'SV'), (65, 64, 2, 'S'), (64, 66, 1, 'SV'), (65, 66, 1, 'R'), (66, 67, 2, 'S'), (67, 68, 2, 'R'), (68, 74, 1, 'SV'), (68, 69, 3, 'S'), (73, 74, 1, 'R'), (74, 75, 2, 'S'), (73, 72, 1, 'S'), (71, 72, 1, 'R'), (70, 71, 1, 'SV'), (70, 71, 4, 'S'), (69, 70, 3, 'R'), (71, 71, 1, 'SV')]
62 6 76217.0 2 H [63]
63 6 67564231.0 2 T [64, 65, 62]
64 6 67564232.0 2 H [65, 66, 63]
65 6 71790937.5 2 T [64, 66, 63]
66 6 71790938.5 2 H [64, 65, 67]
67 6 125742480.5 2 T [66, 68]
68 6 125754834.0 3 H [74, 67, 69]
74 6 135491219.0 2 H [73, 75, 68]
73 6 135491218.0 2 T [72, 74]
72 6 135425965.0 2 H [73, 71]
71 6 135425964.0 4 T [72, 70, 71]
70 6 132587517.0 4 H [69, 71]
69 6 132568487.0 3 T [68, 70]
75 6 170739896.0 2 T [74]
Answer [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 74, 68, 69, 70, 71, 71, 70, 71, 70, 69, 68, 67, 66, 64, 65, 63, 62]
[76, 77]
[(76, 77, 2, 'S')]
Component [76, 77]
Component edges [(76, 77, 2, 'S')]
ODD vertices []
TOUR
[76, 77]
paths_score 0 [[76, 77], [77, 76]]
paths_score 0 [[77, 76], [76, 77]]
all edges with dummy:  [(76, 77, 2, 'S')]
76 7 0 2 H [77]
77 7 159334984 2 T [76]
Answer [76, 77, 76]
[78, 79, 80, 81, 82, 83, 84, 85]
[(78, 79, 2, 'S'), (79, 80, 2, 'R'), (80, 81, 3, 'S'), (80, 84, 1, 'SV'), (81, 82, 1, 'R'), (83, 82, 1, 'S'), (83, 84, 1, 'R'), (84, 85, 2, 'S'), (81, 81, 1, 'SV')]
Component [78, 79, 80, 81, 82, 83, 84, 85]
Component edges [(78, 79, 2, 'S'), (79, 80, 2, 'R'), (80, 81, 3, 'S'), (80, 84, 1, 'SV'), (81, 82, 1, 'R'), (83, 82, 1, 'S'), (83, 84, 1, 'R'), (84, 85, 2, 'S'), (81, 81, 1, 'SV')]
ODD vertices []
TOUR
[78, 85]
paths_score 0 [[78, 79, 80, 81, 82, 83, 84, 85], [85, 84, 80, 81, 81, 80, 79, 78]]
paths_score 0 [[85, 84, 83, 82, 81, 80, 79, 78], [78, 79, 80, 81, 81, 80, 84, 85]]
all edges with dummy:  [(78, 79, 2, 'S'), (79, 80, 2, 'R'), (80, 81, 3, 'S'), (80, 84, 1, 'SV'), (81, 82, 1, 'R'), (83, 82, 1, 'S'), (83, 84, 1, 'R'), (84, 85, 2, 'S'), (81, 81, 1, 'SV')]
78 8 61806 2 H [79]
79 8 100009037.0 2 T [80, 78]
80 8 100011966.5 3 H [81, 84, 79]
81 8 103780961.0 3 T [80, 81, 82]
82 8 103780962.0 2 H [81, 83]
83 8 103831826.0 2 T [82, 84]
84 8 103831827.0 2 H [80, 83, 85]
85 8 145076124.0 2 T [84]
Answer [78, 79, 80, 81, 82, 83, 84, 85, 84, 80, 81, 81, 80, 79, 78]
[86, 87]
[(86, 87, 2, 'S')]
Component [86, 87]
Component edges [(86, 87, 2, 'S')]
ODD vertices []
TOUR
[86, 87]
paths_score 0 [[86, 87], [87, 86]]
paths_score 0 [[87, 86], [86, 87]]
all edges with dummy:  [(86, 87, 2, 'S')]
86 9 0 2 H [87]
87 9 138334464 2 T [86]
Answer [86, 87, 86]
[88, 89, 90, 91, 92, 93]
[(89, 88, 2, 'S'), (89, 90, 2, 'R'), (91, 90, 2, 'S'), (91, 92, 2, 'R'), (92, 93, 2, 'S')]
Component [88, 89, 90, 91, 92, 93]
Component edges [(89, 88, 2, 'S'), (89, 90, 2, 'R'), (91, 90, 2, 'S'), (91, 92, 2, 'R'), (92, 93, 2, 'S')]
ODD vertices []
TOUR
[88, 93]
paths_score 0 [[88, 89, 90, 91, 92, 93], [93, 92, 91, 90, 89, 88]]
paths_score 0 [[93, 92, 91, 90, 89, 88], [88, 89, 90, 91, 92, 93]]
all edges with dummy:  [(89, 88, 2, 'S'), (89, 90, 2, 'R'), (91, 90, 2, 'S'), (91, 92, 2, 'R'), (92, 93, 2, 'S')]
88 10 0.0 2 H [89]
89 10 46991592.0 2 T [88, 90]
90 10 46991593.0 2 H [89, 91]
91 10 48060267.0 2 T [90, 92]
92 10 48060268.0 2 H [91, 93]
93 10 133785266.0 2 T [92]
Answer [88, 89, 90, 91, 92, 93, 92, 91, 90, 89, 88]
[94, 95]
[(94, 95, 2, 'S')]
Component [94, 95]
Component edges [(94, 95, 2, 'S')]
ODD vertices []
TOUR
[94, 95]
paths_score 0 [[94, 95], [95, 94]]
paths_score 0 [[95, 94], [94, 95]]
all edges with dummy:  [(94, 95, 2, 'S')]
94 11 0 2 H [95]
95 11 135069565 2 T [94]
Answer [94, 95, 94]
[96, 97, 98, 99, 100, 101, 102, 103]
[(97, 96, 2, 'S'), (97, 98, 1, 'R'), (97, 99, 1, 'SV'), (99, 98, 2, 'S'), (98, 100, 1, 'SV'), (99, 100, 1, 'R'), (100, 101, 2, 'S'), (101, 102, 2, 'R'), (102, 103, 3, 'S')]
Component [96, 97, 98, 99, 100, 101, 102, 103]
Component edges [(97, 96, 2, 'S'), (97, 98, 1, 'R'), (97, 99, 1, 'SV'), (99, 98, 2, 'S'), (98, 100, 1, 'SV'), (99, 100, 1, 'R'), (100, 101, 2, 'S'), (101, 102, 2, 'R'), (102, 103, 3, 'S')]
ODD vertices [102, 103]
TOUR
[96, 103]
all edges with dummy:  [(97, 96, 2, 'S'), (97, 98, 1, 'R'), (97, 99, 1, 'SV'), (99, 98, 2, 'S'), (98, 100, 1, 'SV'), (99, 100, 1, 'R'), (100, 101, 2, 'S'), (101, 102, 2, 'R'), (102, 103, 3, 'S')]
96 12 14569.0 2 H [97]
97 12 66616927.75 2 T [96, 98, 99]
98 12 66616928.75 2 H [97, 99, 100]
99 12 69245504.0 2 T [97, 98, 100]
100 12 69245505.0 2 H [98, 99, 101]
101 12 124294637.0 2 T [100, 102]
102 12 124294638.0 3 H [101, 103]
103 12 133263960.0 3 T [102]
Answer [103, 102, 101, 100, 99, 98, 97, 96, 97, 99, 98, 100, 101, 102, 103, 102]
[104, 105]
[(104, 105, 2, 'S')]
Component [104, 105]
Component edges [(104, 105, 2, 'S')]
ODD vertices []
TOUR
[104, 105]
paths_score 0 [[104, 105], [105, 104]]
paths_score 0 [[105, 104], [104, 105]]
all edges with dummy:  [(104, 105, 2, 'S')]
104 13 0 2 H [105]
105 13 114352102 2 T [104]
Answer [104, 105, 104]
[112, 113]
[(112, 113, 2, 'S')]
Component [112, 113]
Component edges [(112, 113, 2, 'S')]
ODD vertices []
TOUR
[112, 113]
paths_score 0 [[112, 113], [113, 112]]
paths_score 0 [[113, 112], [112, 113]]
all edges with dummy:  [(112, 113, 2, 'S')]
112 15 0 2 H [113]
113 15 101976509 2 T [112]
Answer [112, 113, 112]
[114, 115]
[(114, 115, 2, 'S')]
Component [114, 115]
Component edges [(114, 115, 2, 'S')]
ODD vertices []
TOUR
[114, 115]
paths_score 0 [[114, 115], [115, 114]]
paths_score 0 [[115, 114], [114, 115]]
all edges with dummy:  [(114, 115, 2, 'S')]
114 16 0 2 H [115]
115 16 90224751 2 T [114]
Answer [114, 115, 114]
[116, 117, 120, 121, 119, 118]
[(116, 117, 2, 'S'), (117, 120, 1, 'SV'), (117, 118, 1, 'R'), (120, 121, 2, 'S'), (119, 120, 1, 'R'), (118, 119, 1, 'S')]
Component [116, 117, 120, 121, 119, 118]
Component edges [(116, 117, 2, 'S'), (117, 120, 1, 'SV'), (117, 118, 1, 'R'), (120, 121, 2, 'S'), (119, 120, 1, 'R'), (118, 119, 1, 'S')]
ODD vertices []
TOUR
[116, 121]
paths_score 0 [[116, 117, 118, 119, 120, 121], [121, 120, 117, 116]]
paths_score 0 [[121, 120, 119, 118, 117, 116], [116, 117, 120, 121]]
all edges with dummy:  [(116, 117, 2, 'S'), (117, 120, 1, 'SV'), (117, 118, 1, 'R'), (120, 121, 2, 'S'), (119, 120, 1, 'R'), (118, 119, 1, 'S')]
116 17 66654 2 H [117]
117 17 30766001.0 2 T [120, 116, 118]
120 17 31922328 2 H [121, 117, 119]
121 17 83246391 2 T [120]
119 17 31922327.0 1 T [120, 118]
118 17 30766002.0 1 H [117, 119]
Answer [116, 117, 118, 119, 120, 121, 120, 117, 116]
[122, 123]
[(122, 123, 2, 'S')]
Component [122, 123]
Component edges [(122, 123, 2, 'S')]
ODD vertices []
TOUR
[122, 123]
paths_score 0 [[122, 123], [123, 122]]
paths_score 0 [[123, 122], [122, 123]]
all edges with dummy:  [(122, 123, 2, 'S')]
122 18 0 2 H [123]
123 18 80256374 2 T [122]
Answer [122, 123, 122]
[124, 125]
[(124, 125, 2, 'S')]
Component [124, 125]
Component edges [(124, 125, 2, 'S')]
ODD vertices []
TOUR
[124, 125]
paths_score 0 [[124, 125], [125, 124]]
paths_score 0 [[125, 124], [124, 125]]
all edges with dummy:  [(124, 125, 2, 'S')]
124 19 0 2 H [125]
125 19 58605715 2 T [124]
Answer [124, 125, 124]
[126, 127]
[(126, 127, 2, 'S')]
Component [126, 127]
Component edges [(126, 127, 2, 'S')]
ODD vertices []
TOUR
[126, 127]
paths_score 0 [[126, 127], [127, 126]]
paths_score 0 [[127, 126], [126, 127]]
all edges with dummy:  [(126, 127, 2, 'S')]
126 20 0 2 H [127]
127 20 64333718 2 T [126]
Answer [126, 127, 126]
[128, 129]
[(128, 129, 2, 'S')]
Component [128, 129]
Component edges [(128, 129, 2, 'S')]
ODD vertices []
TOUR
[128, 129]
paths_score 0 [[128, 129], [129, 128]]
paths_score 0 [[129, 128], [128, 129]]
all edges with dummy:  [(128, 129, 2, 'S')]
128 21 0 2 H [129]
129 21 46697230 2 T [128]
Answer [128, 129, 128]
[130, 131]
[(130, 131, 2, 'S')]
Component [130, 131]
Component edges [(130, 131, 2, 'S')]
ODD vertices []
TOUR
[130, 131]
paths_score 0 [[130, 131], [131, 130]]
paths_score 0 [[131, 130], [130, 131]]
all edges with dummy:  [(130, 131, 2, 'S')]
130 22 0 2 H [131]
131 22 50805587 2 T [130]
Answer [130, 131, 130]
[132, 133]
[(132, 133, 1, 'S')]
Component [132, 133]
Component edges [(132, 133, 1, 'S')]
ODD vertices [132, 133]
TOUR
[132, 133]
all edges with dummy:  [(132, 133, 1, 'S')]
132 23 0 1 H [133]
133 23 156025612 1 T [132]
Answer [132, 133]
[134, 135]
[(134, 135, 1, 'S')]
Component [134, 135]
Component edges [(134, 135, 1, 'S')]
ODD vertices [134, 135]
TOUR
[134, 135]
all edges with dummy:  [(134, 135, 1, 'S')]
134 24 0 1 H [135]
135 24 57212132 1 T [134]
Answer [134, 135]
{(0, 1, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[0, 1], [1, 0]]
{(3, 2, 'S'): 2, (3, 32, 'SV'): 1, (3, 4, 'R'): 1, (33, 32, 'S'): 2, (31, 32, 'R'): 1, (33, 34, 'R'): 1, (6, 33, 'SV'): 1, (35, 34, 'S'): 2, (5, 34, 'SV'): 1, (35, 36, 'R'): 1, (35, 39, 'SV'): 1, (36, 37, 'S'): 1, (37, 38, 'R'): 1, (38, 39, 'S'): 3, (39, 40, 'R'): 2, (40, 41, 'S'): 2, (5, 4, 'S'): 2, (5, 6, 'R'): 1, (4, 31, 'SV'): 1, (31, 30, 'S'): 2, (30, 109, 'SV'): 1, (29, 30, 'R'): 1, (109, 108, 'S'): 2, (109, 110, 'R'): 1, (27, 108, 'SV'): 1, (107, 108, 'R'): 1, (27, 26, 'S'): 2, (27, 28, 'R'): 1, (25, 26, 'R'): 1, (26, 59, 'SV'): 1, (25, 24, 'S'): 2, (25, 60, 'SV'): 1, (23, 24, 'R'): 2, (18, 23, 'SV'): 1, (23, 22, 'S'): 3, (17, 18, 'R'): 2, (19, 18, 'S'): 3, (16, 17, 'S'): 2, (15, 16, 'R'): 2, (11, 15, 'SV'): 1, (14, 15, 'S'): 3, (11, 10, 'S'): 2, (11, 12, 'R'): 1, (9, 10, 'R'): 1, (7, 10, 'SV'): 1, (9, 8, 'S'): 2, (9, 54, 'SV'): 1, (8, 53, 'SV'): 1, (7, 8, 'R'): 1, (53, 52, 'S'): 2, (53, 54, 'R'): 1, (51, 52, 'R'): 2, (51, 50, 'S'): 2, (49, 50, 'R'): 2, (49, 48, 'S'): 2, (54, 55, 'S'): 2, (7, 6, 'S'): 2, (12, 13, 'S'): 1, (13, 14, 'R'): 1, (19, 20, 'R'): 2, (19, 58, 'SV'): 1, (20, 57, 'SV'): 1, (20, 21, 'S'): 3, (57, 56, 'S'): 2, (57, 58, 'R'): 1, (59, 58, 'S'): 2, (59, 60, 'R'): 1, (60, 61, 'S'): 2, (21, 22, 'R'): 3, (28, 107, 'SV'): 1, (29, 28, 'S'): 2, (107, 106, 'S'): 2, (29, 110, 'SV'): 1, (110, 111, 'S'): 2, (38, 38, 'SV'): 1, (14, 14, 'SV'): 1}
split node indices:  [9, 16, 55, 70, 75, 84, 93]
debug paths separation:  [[2, 3, 4, 5, 6, 7, 8, 9, 54, 55], [55, 54, 53, 52, 51, 50, 49, 48], [48, 49, 50, 51, 52, 53, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], [41, 40, 39, 38, 38, 39, 35, 34, 5, 4, 31, 30, 109, 108, 107, 106], [106, 107, 28, 29, 110, 111], [111, 110, 109, 108, 27, 26, 59, 58, 57, 56], [56, 57, 20, 21, 22, 23, 24, 25, 60, 61], [61, 60, 59, 58, 19, 18, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 14, 15, 11, 10, 7, 6, 33, 32, 3, 2]]
{(42, 43, 'S'): 2, (43, 44, 'R'): 2, (44, 45, 'S'): 3, (45, 46, 'R'): 2, (46, 47, 'S'): 2, (44, 45, 'D'): 1}
split node indices:  [5]
debug paths separation:  [[42, 43, 44, 45, 46, 47], [47, 46, 45, 44, 45, 44, 43, 42]]
{(63, 62, 'S'): 2, (63, 64, 'R'): 1, (63, 65, 'SV'): 1, (65, 64, 'S'): 2, (64, 66, 'SV'): 1, (65, 66, 'R'): 1, (66, 67, 'S'): 2, (67, 68, 'R'): 2, (68, 74, 'SV'): 1, (68, 69, 'S'): 3, (73, 74, 'R'): 1, (74, 75, 'S'): 2, (73, 72, 'S'): 1, (71, 72, 'R'): 1, (70, 71, 'SV'): 1, (70, 71, 'S'): 4, (69, 70, 'R'): 3, (71, 71, 'SV'): 1}
split node indices:  [13]
debug paths separation:  [[62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], [75, 74, 68, 69, 70, 71, 71, 70, 71, 70, 69, 68, 67, 66, 64, 65, 63, 62]]
{(76, 77, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[76, 77], [77, 76]]
{(78, 79, 'S'): 2, (79, 80, 'R'): 2, (80, 81, 'S'): 3, (80, 84, 'SV'): 1, (81, 82, 'R'): 1, (83, 82, 'S'): 1, (83, 84, 'R'): 1, (84, 85, 'S'): 2, (81, 81, 'SV'): 1}
split node indices:  [7]
debug paths separation:  [[78, 79, 80, 81, 82, 83, 84, 85], [85, 84, 80, 81, 81, 80, 79, 78]]
{(86, 87, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[86, 87], [87, 86]]
{(89, 88, 'S'): 2, (89, 90, 'R'): 2, (91, 90, 'S'): 2, (91, 92, 'R'): 2, (92, 93, 'S'): 2}
split node indices:  [5]
debug paths separation:  [[88, 89, 90, 91, 92, 93], [93, 92, 91, 90, 89, 88]]
{(94, 95, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[94, 95], [95, 94]]
{(97, 96, 'S'): 2, (97, 98, 'R'): 1, (97, 99, 'SV'): 1, (99, 98, 'S'): 2, (98, 100, 'SV'): 1, (99, 100, 'R'): 1, (100, 101, 'S'): 2, (101, 102, 'R'): 2, (102, 103, 'S'): 3}
split node indices:  [7, 14]
debug paths separation:  [[103, 102, 101, 100, 99, 98, 97, 96], [96, 97, 99, 98, 100, 101, 102, 103], [103, 102]]
Ger ['52- 51- 50- 49- ', '49+ 50- 51+ 52+ ', '52- '] [1, 1, 0] set() 2 [52] ['-'] [52, 51, 50, 49] ['-', '-', '-', '-'] 0
Ger ['52- 51- 50- 49- ', '49+ 50- 51+ 52+ ', '52- '] [1, 1, 0] set() 2 [52] ['-'] [49, 50, 51, 52] ['+', '-', '+', '+'] 1
{(104, 105, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[104, 105], [105, 104]]
{(112, 113, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[112, 113], [113, 112]]
{(114, 115, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[114, 115], [115, 114]]
{(116, 117, 'S'): 2, (117, 120, 'SV'): 1, (117, 118, 'R'): 1, (120, 121, 'S'): 2, (119, 120, 'R'): 1, (118, 119, 'S'): 1}
split node indices:  [5]
debug paths separation:  [[116, 117, 118, 119, 120, 121], [121, 120, 117, 116]]
{(122, 123, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[122, 123], [123, 122]]
{(124, 125, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[124, 125], [125, 124]]
{(126, 127, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[126, 127], [127, 126]]
{(128, 129, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[128, 129], [129, 128]]
{(130, 131, 'S'): 2}
split node indices:  [1]
debug paths separation:  [[130, 131], [131, 130]]
{(132, 133, 'S'): 1}
split node indices:  []
debug paths separation:  [[132, 133]]
{(134, 135, 'S'): 1}
split node indices:  []
debug paths separation:  [[134, 135]]
